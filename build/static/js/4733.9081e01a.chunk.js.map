{"version":3,"file":"static/js/4733.9081e01a.chunk.js","mappings":"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","sources":["components/FileUpload/FileUploadApiSlice.tsx","features/Profile/Components/ImageCropper.tsx","components/FileUpload/ProfileFileUpload.tsx","features/Profile/Components/EditProfile.tsx","features/Profile/MyBookingApiSlice.tsx","features/Profile/Components/SingleBookingCard/index.tsx","features/Profile/UpcomingBooking.tsx","features/Profile/History.tsx","features/Profile/BookingRequest.tsx","features/Profile/Components/SingleBookingCard/CancelBooking.tsx","features/Profile/Components/SingleBookingCard/acceptBooking.tsx","features/Profile/Components/MyBookings.tsx","features/Profile/Components/GeneralSettings.tsx","features/Profile/Components/CallRate.tsx","features/Profile/Components/UnavailableDate.tsx","features/Profile/Components/WorkingHour.tsx","features/Profile/Components/ExpertSettings.tsx","features/Profile/Components/Settings.tsx","features/Profile/Transaction.tsx","features/Profile/MyReferrals.tsx","features/Profile/Subscription.tsx","features/Profile/Profile.tsx","types/ProfileData.tsx"],"sourcesContent":["import { apiSlice } from \"../../app/apiSlice\";\n\nexport const fileUploadApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    uploadFile: builder.mutation<FileUploadResponse, FormData>({\n      query: (data) => ({\n        url: \"/member/addProfilePicture\",\n        method: \"POST\",\n        headers: {\n          // \"Content-Type\": \"multipart/form-data; boundary=---BOUNDARY\",\n        },\n        body: data,\n        formData: true,\n      }),\n    }),\n  }),\n});\n\nexport const { useUploadFileMutation } = fileUploadApiSlice;\n\ninterface FileUploadResponse {\n  finalFilename: string;\n}\n","import React, { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\nimport { Point, Area } from 'react-easy-crop/types';\n\ninterface ImageCropperProps {\n    image: string;\n    onCropComplete: (croppedImageUrl: string) => void;\n    onCancel: () => void;\n}\n\nconst ImageCropper: React.FC<ImageCropperProps> = ({\n    image,\n    onCropComplete,\n    onCancel\n}) => {\n    const [crop, setCrop] = useState<Point>({ x: 0, y: 0 });\n    const [zoom, setZoom] = useState<number>(1);\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState<Area | null>(null);\n\n    const onCropChange = (crop: Point) => {\n        setCrop(crop);\n    };\n\n    const onZoomChange = (zoom: number) => {\n        setZoom(zoom);\n    };\n\n    const onCropCompleteHandler = useCallback((croppedArea: Area, croppedAreaPixels: Area) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n    }, []);\n\n    const getCroppedImage = async () => {\n        try {\n            if (!croppedAreaPixels) return;\n\n            const canvas = document.createElement('canvas');\n            const img = new Image();\n            img.src = image;\n\n            await new Promise<void>((resolve) => {\n                img.onload = () => resolve();\n            });\n\n            const scaleX = img.naturalWidth / img.width;\n            const scaleY = img.naturalHeight / img.height;\n\n            canvas.width = croppedAreaPixels.width;\n            canvas.height = croppedAreaPixels.height;\n\n            const ctx = canvas.getContext('2d');\n\n            if (!ctx) {\n                throw new Error('Could not get 2D rendering context');\n            }\n\n            ctx.drawImage(\n                img,\n                croppedAreaPixels.x * scaleX,\n                croppedAreaPixels.y * scaleY,\n                croppedAreaPixels.width * scaleX,\n                croppedAreaPixels.height * scaleY,\n                0,\n                0,\n                croppedAreaPixels.width,\n                croppedAreaPixels.height\n            );\n\n            const croppedImageUrl = canvas.toDataURL('image/jpeg');\n            onCropComplete(croppedImageUrl);\n        } catch (e) {\n            console.error('Error creating cropped image:', e);\n        }\n    };\n\n    return (\n        <div className=\"absolute top-0 left-0 right-0 bottom-0 z-50 cropcontrol-box\">\n            <div className=\"relative h-full flex flex-col\">\n                <div className=\"flex-grow relative test\">\n                    <Cropper\n                        image={image}\n                        crop={crop}\n                        zoom={zoom}\n                        aspect={1}\n                        onCropChange={onCropChange}\n                        onZoomChange={onZoomChange}\n                        onCropComplete={onCropCompleteHandler}\n                    />\n                </div>\n                <div className=\"p-2 bg-gray-100 \">\n                    <div className=\"mb-0\">\n                        <input\n                            id=\"zoom\"\n                            type=\"range\"\n                            value={zoom}\n                            min={1}\n                            max={3}\n                            step={0.1}\n                            onChange={(e) => setZoom(Number(e.target.value))}\n                            className=\"w-full\"\n                        />\n                    </div>\n                </div>\n                <div className=\"flex justify-end space-x-2 p-2 btn-groups\">\n                    <button\n                        onClick={onCancel}\n                        className=\"px-3  btn-cancel transition\"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        onClick={getCroppedImage}\n                        className=\"px-3 py-1 bg-blue-500 btn-crop mx-2 transition\"\n                    >\n                        Crop & Save\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ImageCropper;","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./FileUpload.scss\";\nimport { getUserData } from \"../../utils/Utils\";\nimport { useUploadFileMutation } from \"./FileUploadApiSlice\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport ImageCropper from \"../../features/Profile/Components/ImageCropper\";\n\n\nconst chunkSize: number = 5 * 1024 * 1024;\n\ninterface CustomFile extends File {\n    finalFilename?: string;\n}\n\ninterface ProfileProps {\n    getFileName?: (name: string | null) => void;\n    folderName: string;\n    from?: string;\n}\n\nexport const ProfileFileUpload: React.FC<ProfileProps> = ({\n    getFileName = () => { },\n    folderName,\n    from,\n}) => {\n    const [uploadFile] = useUploadFileMutation();\n    const [dropzoneActive, setDropzoneActive] = useState<boolean>(false);\n    const [files, setFiles] = useState<CustomFile[]>([]);\n    const [currentFileIndex, setCurrentFileIndex] = useState<number | null>(null);\n    const [lastUploadedFileIndex, setLastUploadedFileIndex] = useState<number | null>(null);\n    const [currentChunkIndex, setCurrentChunkIndex] = useState<number | null>(null);\n    const [loading, setLoading] = useState(false);\n    const [errors, setError] = useState(\"\");\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    // New states for image cropping\n    const [showCropper, setShowCropper] = useState(false);\n    const [imageToEdit, setImageToEdit] = useState<string | null>(null);\n\n    function handleDrop(e: React.DragEvent<HTMLDivElement>): void {\n        e.preventDefault();\n        const droppedFiles: File[] = Array.from(e.dataTransfer.files);\n\n        if (droppedFiles.length > 0) {\n            handleNewFile(droppedFiles[0]);\n        }\n\n        setDropzoneActive(false);\n    }\n\n    function handleNewFile(file: File) {\n        if (folderName === \"profile-images\" || folderName === \"employers\" || folderName === \"job-images\") {\n            if (\n                file.type === \"image/png\" ||\n                file.type === \"image/jpg\" ||\n                file.type === \"image/jpeg\" ||\n                file.type === \"image/gif\"\n            ) {\n                setError(\"\");\n                const reader = new FileReader();\n                reader.onload = () => {\n                    setImageToEdit(reader.result as string);\n                    setShowCropper(true);\n                };\n                reader.readAsDataURL(file);\n            } else {\n                setError(\"Invalid file format. Recommended:JPG, PNG, or GIF\");\n            }\n        }\n    }\n\n    const handleCroppedImage = async (croppedImage: string) => {\n        try {\n            // Convert base64 to file\n            const response = await fetch(croppedImage);\n            const blob = await response.blob();\n            const file = new File([blob], 'cropped-image.jpg', { type: 'image/jpeg' });\n\n            setFiles([...files, file]);\n            setShowCropper(false);\n            setImageToEdit(null);\n\n            // Trigger upload process\n            setCurrentFileIndex(files.length);\n            setCurrentChunkIndex(0);\n        } catch (error) {\n            console.error('Error processing cropped image:', error);\n            setError('Error processing cropped image');\n        }\n    };\n\n    function readAndUploadCurrentChunk(): void {\n        const reader = new FileReader();\n        const file = files[currentFileIndex as number];\n        if (!file) {\n            return;\n        }\n        const from: number = (currentChunkIndex as number) * chunkSize;\n        const to: number = from + chunkSize;\n        const blob: Blob = file.slice(from, to);\n        reader.onload = (e: ProgressEvent<FileReader>) => uploadChunk(e);\n        reader.readAsDataURL(blob);\n    }\n\n    function uploadChunk(readerEvent: ProgressEvent<FileReader>): void {\n        const file: CustomFile = files[currentFileIndex as number];\n        const data: string | ArrayBuffer | null = readerEvent.target?.result || null;\n\n        if (data === null) return;\n\n        let blobData: Blob;\n        if (typeof data === \"string\") {\n            blobData = new Blob([data], { type: \"text/plain\" });\n        } else {\n            blobData = new Blob([new Uint8Array(data as ArrayBuffer)]);\n        }\n\n        setLoading(true);\n        const formData = new FormData();\n        formData.append(\"file\", blobData, file.name);\n        formData.append(\"name\", file.name);\n        formData.append(\"folderName\", folderName);\n        formData.append(\"size\", file.size.toString());\n        formData.append(\"currentChunkIndex\", (currentChunkIndex as number).toString());\n        formData.append(\"totalChunks\", Math.ceil(file.size / chunkSize).toString());\n\n        uploadFile(formData)\n            .unwrap()\n            .then((response) => {\n                const fileSize: number = files[currentFileIndex as number].size;\n                const chunks: number = Math.ceil(fileSize / chunkSize) - 1;\n                const isLastChunk: boolean = (currentChunkIndex as number) === chunks;\n\n                if (isLastChunk) {\n                    const finalFilename: string = response.finalFilename;\n                    file.finalFilename = finalFilename;\n                    setLastUploadedFileIndex(currentFileIndex);\n                    setCurrentChunkIndex(null);\n                    getFileName(response.finalFilename);\n                } else {\n                    setCurrentChunkIndex((currentChunkIndex as number) + 1);\n                }\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                console.error(\"File upload failed:\", error);\n            });\n    }\n\n    function handleDragAreaClick(): void {\n        if (fileInputRef.current) {\n            fileInputRef.current.click();\n        }\n    }\n\n    useEffect(() => {\n        if (lastUploadedFileIndex === null) {\n            return;\n        }\n        const isLastFile: boolean = lastUploadedFileIndex === files.length - 1;\n        const nextFileIndex: number | null = isLastFile\n            ? null\n            : (currentFileIndex as number) + 1;\n        setCurrentFileIndex(nextFileIndex);\n    }, [lastUploadedFileIndex, files]);\n\n    useEffect(() => {\n        if (files.length > 0) {\n            if (currentFileIndex === null) {\n                setCurrentFileIndex(\n                    lastUploadedFileIndex === null\n                        ? 0\n                        : (lastUploadedFileIndex as number) + 1\n                );\n            }\n        }\n    }, [files.length, lastUploadedFileIndex]);\n\n    useEffect(() => {\n        if (currentFileIndex !== null) {\n            setCurrentChunkIndex(0);\n        }\n    }, [currentFileIndex]);\n\n    useEffect(() => {\n        if (currentChunkIndex !== null) {\n            readAndUploadCurrentChunk();\n        }\n    }, [currentChunkIndex]);\n\n    return (\n        <>\n            {loading ? (\n                <div className=\"page-loader\">\n                    <div className=\"page-innerLoader\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <img src={require(\"../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"container\">\n                    {!showCropper ? (\n                        <div className=\"file-uploads\">\n                            <div\n                                onDragOver={(e) => {\n                                    setDropzoneActive(true);\n                                    e.preventDefault();\n                                }}\n                                onDragLeave={(e) => {\n                                    setDropzoneActive(false);\n                                    e.preventDefault();\n                                }}\n                                onDrop={(e) => handleDrop(e)}\n                                onClick={handleDragAreaClick}\n                                className={\"dropzone\" + (dropzoneActive ? \" active\" : \"\")}\n                            >\n                                <div className=\"icon-logo\">\n                                    {folderName === \"chat\" ?\n                                        <FontAwesomeIcon icon={faPlus} />\n                                        :\n                                        <img src={require(\"../../assets/images/upload-icone.png\")} alt=\"\" />\n                                    }\n                                </div>\n                                {folderName === \"chat\" ?\n                                    <label className=\"label-for\">Upload Image</label>\n                                    :\n                                    folderName === \"employers\" ?\n                                        <label className=\"label-for\">Upload <span className=\"files\">file PDF, Word Doc, Excel, JPG</span></label>\n                                        :\n                                        <label className=\"label-for\">Drop your files here</label>\n                                }\n                            </div>\n\n                            <input\n                                ref={fileInputRef}\n                                type=\"file\"\n                                style={{ display: \"none\" }}\n                                onChange={(e) => {\n                                    const files = e.target.files;\n                                    if (files && files.length > 0) {\n                                        handleNewFile(files[0]);\n                                    }\n                                }}\n                            />\n\n                            {from !== 'multiform' && (\n                                <div className=\"files\">\n                                    {files.map((file, fileIndex) => {\n                                        let progress: number = 0;\n                                        if (file.finalFilename) {\n                                            progress = 100;\n                                        } else {\n                                            const uploading: boolean = fileIndex === currentFileIndex;\n                                            const chunks: number = Math.ceil(file.size / chunkSize);\n                                            if (uploading) {\n                                                progress = Math.round(\n                                                    ((currentChunkIndex as number) / chunks) * 100\n                                                );\n                                            } else {\n                                                progress = 0;\n                                            }\n                                        }\n                                        return (\n                                            <div key={fileIndex} className=\"file\">\n                                                <div className=\"name\">{file.name}</div>\n                                                <div\n                                                    className={\"progress \" + (progress === 100 ? \"done\" : \"\")}\n                                                    style={{ width: progress + \"%\" }}\n                                                >\n                                                    {progress}%\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            )}\n\n                            {errors && <p className=\"error\">{errors}</p>}\n                        </div>\n                    ) : (\n                        showCropper && imageToEdit && (\n                            <ImageCropper\n                                image={imageToEdit}\n                                onCropComplete={handleCroppedImage}\n                                onCancel={() => {\n                                    setShowCropper(false);\n                                    setImageToEdit(null);\n                                }}\n                            />\n                        )\n                    )}\n\n\n                </div>\n            )}\n        </>\n    );\n};","import { FormProvider, useForm } from \"react-hook-form\";\nimport { Heading } from \"../../../components/Heading/Heading\";\nimport \"./Profile.scss\";\nimport CustomInput from \"../../../components/CustomInput/CustomInput\";\nimport { Button } from \"../../../components/Button/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport { ProfileData } from \"../../../types/ProfileData\";\nimport { DobPicker } from \"../../../components/DobPicker/DobPicker\";\nimport {\n  useUpdateProfileMutation,\n  useRemovePictureMutation,\n} from \"../profileApiSlice\";\nimport { getUserData } from \"../../../utils/Utils\";\nimport { ProfileFileUpload } from \"../../../components/FileUpload/ProfileFileUpload\";\nimport { useEffect, useState } from \"react\";\nimport { useProfileMutation } from \"../profileApiSlice\";\nimport CountryPicker from \"../../../components/CountryPicker/CountryPicker\";\nimport ConfirmModal from \"../../../components/ConfirmModal/ConfirmModal\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../../utils/GlobalModal\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { TelephoneField } from \"../../../components/TelephoneField/TelephoneField\";\nimport Swal from \"sweetalert2\";\n\ninterface Props {\n  profileData: ProfileData;\n  toggle: () => void;\n}\n\nexport const EditProfile: React.FC<Props> = ({ profileData, toggle }) => {\n  const [profileDatas, setProfileData] = useState(profileData);\n  const [errorMsg, setErrorMsg] = useState<string>('');\n  useEffect(() => {\n    if (profileData.members_phone_code) {\n      setProfileData((prevData) => ({\n        ...prevData,\n        phone_code: profileData.members_phone_code,\n      }));\n    }\n  }, [profileData]);\n  // console.table(profileDatas);\n\n  const [fileName, setFileName] = useState<string | null>(null);\n  const userData = getUserData(\"userData\");\n  let token = \"\";\n  let memberType = \"\";\n  try {\n    if (userData !== null) {\n      token = userData.Token;\n      memberType = userData.Member_type;\n    } else {\n      console.error(\"User data not found in local storage\");\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n  const form = useForm<ProfileData>({ defaultValues: profileDatas });\n  const { register, control, handleSubmit, formState } = form;\n  const { errors } = formState;\n  let originalDate = \"0000-00-00\";\n  if (profileData.members_dob) originalDate = profileData.members_dob;\n  const [year, month, day] = originalDate.split(\"-\").map((value) => {\n    const parsedValue = parseInt(value, 10);\n    return parsedValue < 10 ? parsedValue.toString() : parsedValue;\n  }) as [number, number, number];\n  const [updateProfile, { isLoading }] = useUpdateProfileMutation();\n  const onSubmit = async (data: ProfileData) => {\n    // data.members_dob = data.dobYear + \"-\" + data.dobMonth + \"-\" + data.dobDay;\n    // const yearStr = data.dobYear.toString();\n    // const monthStr =\n    //   parseInt(data.dobMonth) < 10\n    //     ? \"0\" + data.dobMonth.toString()\n    //     : data.dobMonth.toString();\n    // const dayStr =\n    //   parseInt(data.dobDay) < 10\n    //     ? \"0\" + data.dobDay.toString()\n    //     : data.dobDay.toString();\n\n    // data.members_dob = yearStr + \"-\" + monthStr + \"-\" + dayStr;\n\n    // const { dobDay, dobMonth, dobYear } = data.members_dob_data;\n    // const dob = `${dobYear}-${String(dobMonth).padStart(2, \"0\")}-${String(\n    //   dobDay\n    // ).padStart(2, \"0\")}`;\n    // data.members_dob = dob;\n    data.members_phone_code = data.phone_code;\n    // console.log(\"Form Submitted\", data);\n    const userData: any = await updateProfile({ credentials: data, token: token });\n    if (\"error\" in userData) {\n      if (userData.error) {\n        if ('data' in userData.error && userData.error.data?.error) {\n          // This handles the case where error data exists\n          setErrorMsg(userData.error.data.error);\n        } else {\n          // Optional: Handle other types of errors (e.g., SerializedError)\n          setErrorMsg('An unexpected error occurred');\n        }\n      }\n      console.error(\"Error logging in:\", userData.error);\n    } else {\n      // console.log(userData.data.success, \"user\");\n      setErrorMsg('');\n      getProfile();\n      toggle();\n    }\n  };\n  const [showUpload, setShowUpload] = useState(false);\n  const changeProfilePic = () => {\n    setShowUpload(true);\n  };\n  const [profileMutation] = useProfileMutation();\n  const getProfile = async () => {\n    const response = await profileMutation(token);\n    if (\"error\" in response) {\n      console.error(\"Error logging in:\", response.error);\n    } else {\n      setProfileData(response.data.data);\n      setShowUpload(false);\n    }\n  };\n  const [removePicture] = useRemovePictureMutation();\n  const removePic = async () => {\n    const remove = await removePicture(token);\n    if (\"error\" in remove) {\n      console.error(\"Error logging in:\", remove.error);\n    } else {\n      getProfile();\n      // localStorage.setItem(\"userData\", JSON.stringify(userData.data.data));\n    }\n  };\n  const getFileName = (name: string | null) => {\n    // console.log(name, \"name\");\n\n    setFileName(name);\n    getProfile();\n  };\n  const { showModal } = useGlobalModalContext();\n\n  const handleModalClose = () => {\n    getProfile(); // Call getProfile() after the modal closes\n  };\n\n  const removePicModal = () => {\n    if (profileDatas.members_profile_picture) {\n      showModal(MODAL_TYPES.CONFIRM_MODAL, {\n        title: \"Remove Profile Picture\",\n        details: \"Are you sure you really want to delete the profile picture?\",\n        confirmBtn: \"Remove\",\n        onCloseCallback: handleModalClose,\n      });\n    } else {\n      showModal(MODAL_TYPES.CONFIRM_MODAL, {\n        title: \"Profile Picture Not Found !\",\n        // details: \"Profile picture not added\",\n        // confirmBtn: \"Remove\",\n        onCloseCallback: handleModalClose,\n      });\n    }\n  };\n\n  const deleteModal = () => {\n    showModal(MODAL_TYPES.CONFIRM_MODAL, {\n      title: \"Delete Account?\",\n      details: \"Are you sure you really want to delete the account?\",\n      confirmBtn: \"Delete\",\n    });\n  };\n\n  const [country, setCountry] = useState(profileDatas.members_country);\n  const handleCountrySelect = (country: string) => {\n    setCountry(country);\n  };\n  const changePassword = () => {\n    showModal(MODAL_TYPES.CHANGE_PASSWORD_MODAL, {\n      title: \"Change Password\",\n    });\n  };\n  const [countryError, setCountryError] = useState<string>('');\n  const handleCountryChange = async (country: { name: string; iso: string }) => {\n    if (memberType === 'M' && country.name === 'United States') {\n\n      setCountryError('Currently the full membership option is not available for American residents');\n      Swal.fire({\n        title: \"\",\n        text: \"Currently the full membership option is not available for American residents\",\n        icon: \"warning\",\n        showConfirmButton: true,\n        backdrop: `\n        rgba(255, 255, 255, 0.5)\n        left top\n        no-repeat\n        filter: blur(5px);\n      `,\n        background: '#fff',\n      });\n    } else {\n      setCountryError('');\n    }\n  }\n\n  return (\n    <div className=\"profile-form\">\n      <div className=\"row\">\n        <div className=\"col-md-6 col-12 img-box\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Heading tag=\"h5\" className=\"profile-pic\">\n                Profile Picture\n              </Heading>\n              <div className=\"edit-image-container\">\n                {profileDatas.members_profile_picture ? (\n                  <img\n                    src={profileDatas.members_profile_picture}\n                    alt=\"Profile\"\n                    className=\"profile-image\"\n                  />\n                ) : (\n                  <img\n                    src={require(\"../../../assets/images/profile/Default.jpg\")}\n                    alt=\"Profile\"\n                    className=\"profile-image\"\n                  />\n                )}\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"nav-link-actions\">\n                <div className=\"row\">\n                  <div className=\"col-md-6 col-4\">\n                    <NavLink\n                      to=\"#\"\n                      onClick={() => changeProfilePic()}\n                      className=\"update-pic\"\n                    >\n                      Update\n                    </NavLink>\n                  </div>\n                  <div className=\"col-md-6 col-4\">\n                    <NavLink\n                      to=\"#\"\n                      onClick={removePicModal}\n                      className=\"remove-pic\"\n                    >\n                      Remove\n                    </NavLink>\n                  </div>\n                </div>\n                <p>\n                  Recommended: Square JPG, PNG, or GIF, at least 1,000 pixels\n                  per side.\n                </p>\n              </div>\n            </div>\n            {showUpload ? (\n              <ProfileFileUpload\n                getFileName={getFileName}\n                folderName=\"profile-images\"\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n        <div className=\"col-md-6 col-12 content-box\">\n          <FormProvider {...form}>\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\n              <label>Title</label>\n              <CustomInput\n                name=\"members_name_title\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: true, message: \"Title is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <label>First Name</label>\n              <CustomInput\n                name=\"members_fname\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: true, message: \"First Name is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <label>Surname</label>\n              <CustomInput\n                name=\"members_lname\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: true, message: \"Surname is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <label>Phone</label>\n              <TelephoneField\n                name=\"members_phone\"\n                registerConfig={{\n                  required: { value: false, message: \"Phone is required\" },\n                }}\n                initialValue={profileDatas.members_phone_code}\n              />\n              <label>Email Address</label>\n              <CustomInput\n                name=\"members_email\"\n                placeholder=\"\"\n                type=\"email\"\n                registerConfig={{\n                  required: { value: true, message: \"Email is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <NavLink\n                to=\"#\"\n                onClick={changePassword}\n                style={{ color: \"#fff\" }}\n              >\n                Change Password\n              </NavLink>\n              <div className=\"dob-picker\"></div>\n              <label>Address</label>\n              <CustomInput\n                name=\"members_address\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: false, message: \"Address is required\" },\n                }}\n                className=\"input-block\"\n              />\n\n              <label>Town</label>\n              <CustomInput\n                name=\"members_town\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: false, message: \"Town is required\" },\n                }}\n                className=\"input-block\"\n              />\n\n\n              <label>Region / County</label>\n              <CustomInput\n                name=\"members_region\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: false, message: \"Region is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <label>Postcode</label>\n              <CustomInput\n                name=\"members_postcode\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: false, message: \"Postcode is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <label>Country</label>\n              <CountryPicker\n                name=\"members_country\"\n                registerConfig={{\n                  required: { value: false, message: \"Country is required\" },\n                }}\n                handleChange={handleCountryChange}\n              />\n              <label>Current Employment</label>\n              <CustomInput\n                name=\"members_employment\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: false, message: \"Employment is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <label>Employment History</label>\n              <CustomInput\n                name=\"members_employment_history\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: {\n                    value: false,\n                    message: \"Employment History is required\",\n                  },\n                }}\n                className=\"input-block\"\n              />\n              <label>About Me</label>\n              <CustomInput\n                name=\"members_biography\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: false, message: \"About is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <label>Interests</label>\n              <CustomInput\n                name=\"members_interest\"\n                placeholder=\"\"\n                type=\"text\"\n                registerConfig={{\n                  required: { value: false, message: \"Interests is required\" },\n                }}\n                className=\"input-block\"\n              />\n              <div className=\"error\">{errorMsg}</div>\n              <Button\n                onClick={() => console.log(\"Hello\")}\n                text=\"Update and Save\"\n                icon={true}\n                theme=\"light\"\n                className=\"w-100 Update-save\"\n              />\n            </form>\n          </FormProvider>\n          <div className=\"row sub-box\">\n            <div className=\"col-12 text-center\">\n              <a\n                style={{ cursor: \"pointer\", color: \"#ff0075\" }}\n                onClick={deleteModal}\n              >\n                Delete Account\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { apiSlice } from \"../../app/apiSlice\";\n\n\n// Create the profileApiSlice using injectEndpoints\nexport const MyBookingsApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    specbookings: builder.mutation({\n      query: () => ({\n        url: \"/specialists/bookingHistory\",\n        method: \"GET\",\n      }),\n    }),\n\n    memberbookings: builder.mutation({\n      query: () => ({\n        url: \"/member/bookingHistory\",\n        method: \"GET\",\n      }),\n    }),\n    acceptStatus: builder.mutation({\n      query: ({ booking_id }) => ({\n        url: `/specialists/acceptBooking`,\n        method: \"POST\",\n        body: { booking_id },\n      }),\n    }),\n    cancelStatus: builder.mutation({\n      query: ({ booking_id }) => ({\n        url: `/specialists/cancelBooking`,\n        method: \"POST\",\n        body: { booking_id },\n      }),\n    }),\n    videoCallDuration: builder.mutation({\n      query: (passData) => ({\n        url: `/member/videoDuration`,\n        method: \"POST\",\n        body: passData,\n      }),\n    }),\n\n  }),\n  overrideExisting: true,\n});\n\n// Destructure the useProfileMutation hook from profileApiSlice\nexport const {\n  useSpecbookingsMutation, useMemberbookingsMutation, useAcceptStatusMutation, useCancelStatusMutation, useVideoCallDurationMutation\n} = MyBookingsApiSlice;\n","import { Button } from \"../../../../components/Button/Button\"\nimport { BookingInterfaces } from \"../../../../types/BookingInterface\";\nimport { useAcceptStatusMutation } from \"../../MyBookingApiSlice\";\nimport { BookingbuttonInterfaces } from \"../../../../types/BookingbuttonInterfaces\";\nimport moment from \"moment\";\nimport 'moment-timezone';\nimport { useState } from \"react\";\n\n\n\ninterface singlecardProps {\n  //newBookingData: BookingInterfaces[] | undefined;\n  SinglecardDetail: BookingInterfaces;\n  SinglecardDetailButtons: BookingbuttonInterfaces;\n  handleSub: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    SinglecardDetail: any\n  ) => Promise<void>;\n  //handleSub: (event: React.MouseEvent<HTMLButtonElement>,stepIndex: any,memImage:string,callDate:Date,callTime:string,specialist_id:any) => Promise<void>;\n}\n\n\nexport const SingleBookingCard = ({ SinglecardDetail, SinglecardDetailButtons, handleSub }: singlecardProps) => {\n\n  const [timezone, setTimezone] = useState<string>('Europe/London');\n\n  const handleSubmit = () => {\n    console.log(\"\");\n  }\n  const handleJoin = () => {\n    window.open(SinglecardDetail.meeting_link, '_blank');\n  }\n\n  const formattedNumber = new Intl.NumberFormat('en-US', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(SinglecardDetail.fee)\n  const className = `booking-detailsTable ${SinglecardDetailButtons.btnClassname ? SinglecardDetailButtons.btnClassname : ''}`.trim();\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n  const histclassName = `joinAll ${SinglecardDetailButtons.is_specialistval === \"Y\" && SinglecardDetailButtons.bookingTab === \"MyBookings1\" && SinglecardDetailButtons.btnText === \"Book Again\" ? 'd-none' : ''}`.trim();\n  const rearrClassName = 'Rearrange';\n  const upcomingCanRearrange = `grp-btn ${SinglecardDetail.call_status == 'A' && (SinglecardDetailButtons.is_specialistval !== \"Y\" || SinglecardDetailButtons.bookingTab === \"MyBookings2\") ? 'd-none' : ''}`.trim();\n\n  const hideAccept = `${SinglecardDetail.call_status == 'R' ? 'd-none' : ''}`;\n\n  let btnClassName = false;\n  if (SinglecardDetailButtons.btnText === \"Join Call\" && !SinglecardDetail.showCall) {\n    btnClassName = true;\n    SinglecardDetailButtons.btnTheme = 'grey';\n  } else if (SinglecardDetailButtons.btnText === \"Join Call\") {\n    SinglecardDetailButtons.btnTheme = 'light';\n  }\n  let buttonTextShow = SinglecardDetailButtons.btnText;\n  if ((SinglecardDetail.call_status === 'P' || SinglecardDetail.call_status === 'A') && SinglecardDetailButtons.btnText === 'Book Again') {\n    buttonTextShow = 'Rearrange';\n  }\n  return (\n    <div>\n      <div className={className}>\n        <div className=\"booking-detailsTable\">\n          <div className=\"booking-tabledata\">\n            <div className=\"d-block\">\n              <div className=\"tabledata\">\n                <div className=\"dateSection-card\">\n                  <div className=\"date-section\">\n                    <h2 className=\"customHeading\">{SinglecardDetail.day}</h2>\n                    <div className=\"month\">\n                      <span>{SinglecardDetail.month}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"details\">\n                  <div className=\"details-content\">\n                    <div className=\"profiledetails\">\n                      <div className=\"profile-section\">\n                        <div className=\"image-section\">\n                          <img\n                            src={\n                              SinglecardDetail.member_image\n                                ? baseUrl + SinglecardDetail.member_image\n                                : require(\"../../../../assets/images/profile/Default.jpg\")\n                            }\n                            alt=\"\"\n                            className=\"img-fluid\"\n                          />\n                        </div>\n                        <div className=\"profile-details\">\n                          <h2 className=\"customHeading\">\n                            {SinglecardDetail.firstName}{\" \"}\n                            {SinglecardDetail.lastName}\n                          </h2>\n                          <p>{SinglecardDetail.members_country}</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"timesprice-details\">\n                      <div className=\"times\">\n                        <div className=\"time-details\">\n                          <span className=\"time\">\n                            {SinglecardDetail.time}\n                          </span>\n                          <span className=\"location\">London (GMT)</span>\n                        </div>\n                      </div>\n                      <div className=\"pricedetails\">\n                        <div className=\"price\">\n                          <h4 className=\"customHeading\">\n                            {SinglecardDetail.currency}\n                            {SinglecardDetail.fee > 0\n                              ? formattedNumber\n                              : \"0.00\"}\n                          </h4>\n                          <p>Fee Paid</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"upcomingbooking-details\">\n                <p>\n                  {SinglecardDetail.call_scheduled_reason}\n                </p>\n              </div>\n            </div>\n            <div className=\"action-field\">\n              <div className=\"action\">\n                <div className=\"grp-btn \">\n                  {SinglecardDetail.showCancel && (\n                    <div className=\"cancel\">\n                      <Button\n                        onClick={(event) => handleSub(event, SinglecardDetail)}\n                        text={SinglecardDetailButtons.btnSmallText}\n                        icon={false}\n                        theme=\"light\"\n                        className=\"btn-cancel\"\n                      />\n\n                    </div>\n                  )}\n\n                  {SinglecardDetail.showRearrange && (\n                    <div className={rearrClassName}>\n                      <Button\n                        onClick={(event) => handleSub(event, SinglecardDetail)}\n                        text=\"Rearrange\"\n                        icon={false}\n                        theme=\"light\"\n                        className=\"btn-Rearrange Rearrange-btn\"\n                      />\n\n                    </div>\n                  )}\n                </div>\n\n                <div className={`${histclassName} ${hideAccept}`}>\n                  <Button\n                    onClick={(event) => handleSub(event, SinglecardDetail)}\n                    text={buttonTextShow}\n                    icon={true}\n                    theme={SinglecardDetailButtons.btnTheme}\n                    className=\"w-100\"\n                    disabled={btnClassName}\n                  />\n                </div>\n                {SinglecardDetail.call_status === 'R' && SinglecardDetailButtons.bookingTab === \"MyBookings2\" && (\n                  <Button\n                    onClick={(event) => handleSub(event, SinglecardDetail)}\n                    text=\"Accept\"\n                    icon={true}\n                    theme={\"light\"}\n                    className=\"w-100\"\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default SingleBookingCard","import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport \"./Components/Profile.scss\";\nimport { SingleBookingCard } from \"./Components/SingleBookingCard\";\nimport { BookingInterfaces } from \"../../types/BookingInterface\";\nimport { BookingbuttonInterfaces } from \"../../types/BookingbuttonInterfaces\";\n\n\ninterface newBookingDataProps {\n    upcomingBookingData: BookingInterfaces[];\n    upcomingButtonDetails: BookingbuttonInterfaces;\n    handleSub: (event: React.MouseEvent<HTMLButtonElement>, stepIndex: any) => Promise<void>;\n}\n\nlet itemCount = 0;\nexport const UpcomingBooking: React.FC<newBookingDataProps> = ({ upcomingBookingData, upcomingButtonDetails, handleSub }) => {\n    const upcomingClassName = `booking-table ${upcomingButtonDetails.is_specialistval === \"Y\" || upcomingBookingData.length <= 0 ? 'd-none' : ''}`.trim();\n\n\n    let countcons = upcomingBookingData.length;\n    const handleSubmit = () => {\n        console.log(\"\");\n    }\n    return (\n        <div className=\"upcomingbooking-tab\">\n            <div className=\"container mybooking-tab\">\n                <div className=\"myBookingHead\">\n                    <h2 className=\"customHeading\">Upcoming bookings ({countcons})</h2>\n                </div>\n                <div className={upcomingClassName}>\n                    <table className=\"table memberBooking-table border-0\">\n                        <thead>\n                            <tr>\n                                <th className=\"dates\"></th>\n                                <th className=\"meetingWith\">Meeting with</th>\n                                <th className=\"text-center\">Time</th>\n                                <th>Fee</th>\n                                <th className=\"action-td\"></th>\n                            </tr>\n                        </thead>\n                    </table>\n                </div>\n                {upcomingBookingData && upcomingBookingData.map((detail, index) => {\n                    return (\n                        <SingleBookingCard key={detail.id || index} SinglecardDetail={detail} SinglecardDetailButtons={upcomingButtonDetails} handleSub={handleSub} />\n                    )\n                })}\n            </div>\n        </div>\n    );\n};\n\n","import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport \"./Components/Profile.scss\";\nimport { SingleBookingCard } from \"./Components/SingleBookingCard\";\nimport { BookingInterfaces } from \"../../types/BookingInterface\";\nimport { BookingbuttonInterfaces } from \"../../types/BookingbuttonInterfaces\";\n\n\ninterface historyBookingDataProps {\n    bookingHistoryData: BookingInterfaces[];\n    HistoryButtonDetails: BookingbuttonInterfaces;\n    handleSub: (event: React.MouseEvent<HTMLButtonElement>, stepIndex: any) => Promise<void>;\n\n}\n\nlet itemCount = 0;\nexport const History: React.FC<historyBookingDataProps> = ({ bookingHistoryData, HistoryButtonDetails, handleSub }) => {\n\n\n    let countcons = bookingHistoryData.length;\n    const handleSubmit = () => {\n        console.log(\"\");\n    }\n    return (\n\n        <div className=\"history-tab\">\n            <div className=\"container mybooking-tab\">\n                <div className=\"myBookingHead\">\n                    <h2 className=\"customHeading\">History ({countcons})</h2>\n                </div>\n                {bookingHistoryData && bookingHistoryData.map((detail, index) => {\n                    return (\n                        <SingleBookingCard key={detail.id || index} SinglecardDetail={detail} SinglecardDetailButtons={HistoryButtonDetails} handleSub={handleSub} />\n                    )\n                })}\n            </div>\n        </div>\n    );\n};\n\n","import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport \"./Components/Profile.scss\";\nimport { SingleBookingCard } from \"./Components/SingleBookingCard\";\nimport { BookingInterfaces } from \"../../types/BookingInterface\";\nimport { BookingbuttonInterfaces } from \"../../types/BookingbuttonInterfaces\";\n\n\ninterface newBookingDataProps {\n  newBookingData: BookingInterfaces[];\n  BookingreqButtonDetails: BookingbuttonInterfaces;\n  handleSub: (event: React.MouseEvent<HTMLButtonElement>, stepIndex: any) => Promise<void>;\n}\n\nlet itemCount = 0;\nexport const BookingRequest: React.FC<newBookingDataProps> = ({ newBookingData, BookingreqButtonDetails, handleSub }) => {\n\n\n  let countcons = newBookingData.length;\n  const handleSubmit = () => {\n    console.log(\"\");\n  }\n  return (\n\n    <div className=\"container mybooking-tab\">\n      <div className=\"myBookingHead\">\n        <h2 className=\"customHeading\">new booking requests ({countcons})</h2>\n      </div>\n      {newBookingData && newBookingData.map((detail, index) => {\n        return (\n          <SingleBookingCard key={detail.id || index} SinglecardDetail={detail} SinglecardDetailButtons={BookingreqButtonDetails} handleSub={handleSub} />\n        )\n      })}\n    </div>\n  );\n};\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { useCancelStatusMutation } from \"../../MyBookingApiSlice\";\n\ninterface CancelBookingProps {\n  isOpen: boolean;\n  toggle: () => void;\n  singlecard: any;\n  userImage: string;\n  afterCancel: () => void;\n}\n\nconst CancelBooking: React.FC<CancelBookingProps> = ({\n  isOpen,\n  toggle,\n  singlecard,\n  userImage,\n  afterCancel,\n}) => {\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n  const [CancelStatusupdation] = useCancelStatusMutation();\n  const percentage = (singlecard.hourDifference > 48) ? 'You will be refunded 75% of your original fee' : 'No refund will be there';\n  useEffect(() => {\n\n  }, [singlecard.hourDifference])\n  const cancelBooking = async (stepIndex: number) => {\n    const response = await CancelStatusupdation({ booking_id: stepIndex });\n    if (\"error\" in response) {\n      throw new Error(\"Failed to update\");\n    }\n    toggle();\n\n    // Call the parent function to apply effect\n    afterCancel();\n  };\n  return (\n    <Modal isOpen={isOpen} toggle={toggle} className=\"sidebar-modal\">\n      <ModalBody>\n        <div className=\"specialist-videomodal mybooking-videocancel\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"image-wrapper\">\n                <div className=\"imgbox\">\n                  {singlecard.member_image ? (\n                    <img\n                      style={{ borderRadius: \"50%\" }}\n                      src={baseUrl + singlecard.member_image}\n                      className=\"img-fluid applicant-one\"\n                      alt=\"\"\n                    />\n                  ) : (\n                    <img\n                      src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                      alt=\"Profile\"\n                      className=\"img-fluid\"\n                    />\n                  )}\n                </div>\n                <div className=\"imgbox\">\n                  {userImage ? (\n                    <img\n                      style={{ borderRadius: \"50%\" }}\n                      src={userImage}\n                      className=\"img-fluid applicant-one\"\n                      alt=\"\"\n                    />\n                  ) : (\n                    <img\n                      src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                      alt=\"Profile\"\n                      className=\"img-fluid\"\n                    />\n                  )}\n                </div>\n              </div>\n              <h3 className=\"customHeading\">Cancel this booking?</h3>\n              <p>\n                {singlecard.scheduleDate} at {singlecard.scheduledTime} with{\" \"}\n                {singlecard.firstName} {singlecard.lastName}\n              </p>\n              <div className=\"time-picker-box\">\n                Are you sure you wish to cancel your booking? {percentage}.\n              </div>\n\n              <Button\n                theme=\"dark\"\n                onClick={() => cancelBooking(singlecard.id)}\n                text=\"Cancel Booking\"\n                className=\"ConfirmCall w-100\"\n                icon={true}\n              />\n              <div className=\"cancel\">\n                <a className=\"button-link\" onClick={toggle}>\n                  Keep the Booking\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default CancelBooking;\n","import React, { useEffect, useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { useAcceptStatusMutation, useCancelStatusMutation } from \"../../MyBookingApiSlice\";\n\ninterface AcceptBookingProps {\n    isOpen: boolean;\n    toggle: () => void;\n    singlecard: any;\n    userImage: string;\n    afterAccept: () => void;\n}\n\nconst AcceptBooking: React.FC<AcceptBookingProps> = ({\n    isOpen,\n    toggle,\n    singlecard,\n    userImage,\n    afterAccept,\n}) => {\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    const [AcceptStatusupdation] = useAcceptStatusMutation();\n    useEffect(() => {\n\n    }, [singlecard.hourDifference])\n    const accpetBooking = async (stepIndex: number) => {\n        const response = await AcceptStatusupdation({ booking_id: stepIndex });\n        if (\"error\" in response) {\n            throw new Error(\"Failed to update\");\n        }\n        toggle();\n\n        // Call the parent function to apply effect\n        afterAccept();\n    };\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className=\"sidebar-modal\">\n            <ModalBody>\n                <div className=\"specialist-videomodal mybooking-videocancel\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"image-wrapper\">\n                                <div className=\"imgbox\">\n                                    {singlecard.member_image ? (\n                                        <img\n                                            style={{ borderRadius: \"50%\" }}\n                                            src={baseUrl + singlecard.member_image}\n                                            className=\"img-fluid applicant-one\"\n                                            alt=\"\"\n                                        />\n                                    ) : (\n                                        <img\n                                            src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                                            alt=\"Profile\"\n                                            className=\"img-fluid\"\n                                        />\n                                    )}\n                                </div>\n                                <div className=\"imgbox\">\n                                    {userImage ? (\n                                        <img\n                                            style={{ borderRadius: \"50%\" }}\n                                            src={userImage}\n                                            className=\"img-fluid applicant-one\"\n                                            alt=\"\"\n                                        />\n                                    ) : (\n                                        <img\n                                            src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                                            alt=\"Profile\"\n                                            className=\"img-fluid\"\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                            <h3 className=\"customHeading\">Accept this booking?</h3>\n                            <p>\n                                {singlecard.scheduleDate} at {singlecard.scheduledTime} with{\" \"}\n                                {singlecard.firstName} {singlecard.lastName}\n                            </p>\n                            <div className=\"time-picker-box\">\n                                Are you sure you wish to accept this booking? .\n                            </div>\n\n                            <Button\n                                theme=\"dark\"\n                                onClick={() => accpetBooking(singlecard.id)}\n                                text=\"Accept Booking\"\n                                className=\"ConfirmCall w-100\"\n                                icon={true}\n                            />\n                            <div className=\"cancel\">\n                                <a className=\"button-link\" onClick={toggle}>\n                                    Cancel\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ModalBody>\n        </Modal>\n    );\n};\n\nexport default AcceptBooking;\n","import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport \"../Components/Profile.scss\";\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { useSpecbookingsMutation, useMemberbookingsMutation, useAcceptStatusMutation, useCancelStatusMutation, useVideoCallDurationMutation } from \"../MyBookingApiSlice\";\nimport { getUserData } from \"../../../utils/Utils\";\n\nimport { UpcomingBooking } from \"../UpcomingBooking\";\nimport { History } from \"../History\";\nimport { BookingRequest } from \"../BookingRequest\";\n\nimport { BookingInterfaces } from \"../../../types/BookingInterface\";//BookingbuttonClasses.tsx\nimport { BookingbuttonInterfaces } from \"../../../types/BookingbuttonInterfaces\";\nimport moment from 'moment';\nimport { Timepicker } from \"../../../components/Timepicker/Timepicker\";\nimport { Modal, ModalBody } from \"reactstrap\";\nimport {\n  useCallScheduleMutation, useBookSpecialistMutation, useSpecialistProfileMutation\n} from \"../../../features/Specialist/SpecialistApiSlice\";\nimport { HorizontalCalender } from \"../../../components/Date/HorizontalCalender\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"../../../components/Button/Button\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { FetchBaseQueryError } from \"@reduxjs/toolkit/dist/query/react\";\nimport CancelBooking from \"../Components/SingleBookingCard/CancelBooking\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../../utils/GlobalModal\";\nimport Swal from \"sweetalert2\";\nimport { useSocket } from \"../../../contexts/SocketContext\";\nimport { CustomTimePicker } from \"../../../components/Timepicker/CustomTimePicker\";\nimport { BookModal } from \"./BookModal\";\nimport AcceptBooking from \"./SingleBookingCard/acceptBooking\";\ninterface MyBookingsProps {\n  tabActive?: string;\n}\nexport function MyBookings({ tabActive }: MyBookingsProps) {\n  const navigate = useNavigate();\n  const userData = getUserData(\"userData\");\n  const [userImage, setUserImage] = useState(\"\");\n  const { setIsShowEnvelopeIcon } = useSocket();\n  const [stripeVerified, setStripeVerified] = useState<boolean>(false);\n\n  let currencySymbol = \"GBP\";\n  let memberType = \"\";\n  let memberdp = \"\";\n  let memberid = \"\";\n\n  let token = \"\";\n  let is_specialist = \"\";\n  let image: string;\n  try {\n    if (userData !== null) {\n      memberType = userData.Member_type;\n      memberid = userData.Member_id;\n      currencySymbol = userData.currency ? userData.currency : \"GBP\";\n      memberdp = userData.members_profile_picture;//Call schedule\n      token = userData.Token;\n      is_specialist = userData.is_specialist;\n      if (userData.members_profile_picture !== userImage) {\n        image = userData.members_profile_picture;\n        setUserImage(image);\n      }\n    } else {\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n\n  const currencySymbols: { [key: string]: string } = {\n    USD: \"$\",\n    EUR: \"€\",\n    GBP: \"£\",\n  };\n\n\n  const [MyBookings] = useSpecbookingsMutation();\n\n  const [MyBookingsSec] = useMemberbookingsMutation();\n\n\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  //const [details, setdetails] = useState<BookingInterfaces[]>([]);\n  const [newBooking, setnewBooking] = useState<BookingInterfaces[]>([]);\n  const [upcomingBooking, setupcomingBooking] = useState<BookingInterfaces[]>([]);\n  const [bookingHistory, setbookingHistory] = useState<BookingInterfaces[]>([]);\n  const [combinedDateTime, setCombinedDateTime] = useState<Date | null>(null);\n  const [AcceptStatusupdation] = useAcceptStatusMutation();\n  const [CancelStatusupdation] = useCancelStatusMutation();\n  const [stepIndex, setStepIndex] = useState(0);\n  //Call schedule\n  const [modal, setModal] = useState(false);\n  const today = moment().toDate(); // Convert Moment to Date\n  const [selectedDate, setSelectedDate] = useState<Date | null>(today);\n  const [selectedTime, setSelectedTime] = useState<string | null>();\n  const [SelectedTimezone, setSelectedTimezone] = useState<string>('Europe/London');\n  const [ErrorMsg, setErrorMsg] = useState<string>(\"\");\n  const [SuccessMsg, setSuccessMsg] = useState<string>(\"\");\n  const [specialistDp, setImage] = useState<string | null>(null);\n  const [specialistId, setSpecId] = useState<string>('');\n  const [specialistfee, setSpecialistFee] = useState<number>(0);\n  const [specialistName, setSpecialistName] = useState<string>('');\n  const [specialistFName, setSpecialistFName] = useState<string>('');\n  const [specialistLName, setSpecialistLName] = useState<string>('');\n  const [timeSlot, setTimeSlot] = useState<'1 hour' | '30 min'>('1 hour');\n  const [userMemId, setUserMemId] = useState<string>('');\n  const [bookingId, setbookingId] = useState<string>('');\n  const [singlecard, SinglecardDetail] = useState<BookingInterfaces[]>([]);\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n  const [modalOpen1, setModalOpen1] = useState<boolean>(false);\n  const [buttonClicked, setButtonClicked] = useState<boolean>(false);\n  const [bookAgain, setBookAgain] = useState<boolean>(false);\n  const [activeTabSpec, setActiveTabSpec] = useState<string>(tabActive || \"MyBookings2\");\n  const [activeTab, setActiveTab] = useState<string>(\"MyProfile\");\n  const [from, setFrom] = useState<string>('');\n  const [isRearrange, setIsRearrange] = useState<boolean>(false);\n\n  const [videoCallDuration] = useVideoCallDurationMutation();\n\n  // Cancel Booking\n\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n  const toggleModal1 = () => {\n    setModalOpen1(!modalOpen1);\n  }\n  const handleAfterCancel = () => {\n    // This function will be called after the API call in CancelBooking\n    let title = 'Booking Cancelled !';\n    let subtitle = 'Booking cancelled successfully';\n    Swal.fire({\n      title: title,\n      text: subtitle,\n      icon: \"success\",\n      timer: 3000,\n      showConfirmButton: false,\n      backdrop: `\n        rgba(255, 255, 255, 0.5)\n        left top\n        no-repeat\n        filter: blur(5px);\n      `,\n      background: '#fff',\n    });\n    fetchMyBookingsApi(activeTabSpec, is_specialist);\n    // Add any other effects you want to apply here, e.g., refreshing data\n  };\n\n  const handleAfterAccept = () => {\n    let title = 'Booking Accepted !';\n    let subtitle = 'Booking accepted successfully';\n    Swal.fire({\n      title: title,\n      text: subtitle,\n      icon: \"success\",\n      timer: 3000,\n      showConfirmButton: false,\n      backdrop: `\n        rgba(255, 255, 255, 0.5)\n        left top\n        no-repeat\n        filter: blur(5px);\n      `,\n      background: '#fff',\n    });\n    fetchMyBookingsApi(activeTabSpec, is_specialist);\n    // Add any other effects you want to apply here, e.g., refreshing data\n  };\n\n  // const changeTimeSlot = (timeslot: any) => {\n  //   console.log('timeslot-----', timeslot);\n  //   if (specialistCallRate) {\n  //     let timeAmount = parseInt(specialistCallRate['one']);\n  //     if (timeslot === '30min') {\n  //       timeAmount = parseInt(specialistCallRate['half']);\n  //     }\n\n\n  //     setSpecialistfee(timeAmount);\n  //   }\n  //   setTimeSlot(timeslot);\n  // }\n\n  const handleTabClick = (tabName: string) => {\n    setActiveTabSpec(tabName);\n    setActiveTab(tabName);\n    fetchMyBookingsApi(tabName, is_specialist);\n\n\n\n  };\n  //Call schedule\n  const toggle = () => {\n    setModal(!modal);\n\n    // Reset state variables to their initial values when modal is closed\n    setSelectedDate(today);\n    setSelectedTime(null);\n    setErrorMsg(\"\");\n    setSuccessMsg(\"\");\n    if (today) {\n      handleDateSelect(today);\n    }\n\n    fetchMyBookingsApi(activeTabSpec, is_specialist);\n  };\n  //{ is_specialist === 'Y' ? (fetchMyBookingsApi()) : fetchMyBookingsApiSec() }\n  const { userId } = useParams<{ userId: string }>();\n\n\n\n\n  const handleTimeChange = (time: string) => {\n    setSelectedTime(time);\n  };\n\n  const handleTimezoneChange = (timezone: string) => {\n    setSelectedTimezone(timezone);\n  };\n  const [callSchedule] = useCallScheduleMutation();\n  const [bookedTimes, setTimes] = useState<string[]>([]);\n  const [BookSpecialist] = useBookSpecialistMutation();\n  const [SpecialistProfile] = useSpecialistProfileMutation();\n  const { showModal } = useGlobalModalContext();\n  const { hideModal, store } = useGlobalModalContext();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  //Call schedule\n  //Call schedule\n  const handleDateSelectRearrange = async (date: Date, SpecialistID: any) => {\n    setSelectedDate(date);\n    setIsLoading(true);\n\n\n\n\n    try {\n      const formattedDate = moment(date).format(\"YYYY-MM-DD\");\n\n\n\n      let user_mem_id;\n      if (SpecialistID !== undefined) {\n        user_mem_id = SpecialistID;\n      } else {\n        const member_id = memberid; // Replace with actual member ID if available\n        user_mem_id = member_id;\n      }\n\n\n      const response = await callSchedule({\n        specialist_id: user_mem_id,\n        call_scheduled_date: formattedDate,\n        timeSlot: timeSlot\n      });\n      if (\"error\" in response) {\n        throw new Error(\"Failed to schedule call\");\n      }\n      const data = response.data.data; // Assuming response.data contains the response data\n      const transformedTime = data.map(\n        (item: { call_scheduled_time: string }) =>\n          moment(item.call_scheduled_time, \"HH:mm:ss\").format(\"hh:mm A\")\n      );\n      setTimes(transformedTime);\n    } catch (error) {\n      console.error(\"Failed to schedule call:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDateSelect = async (date: Date) => {\n    setSelectedDate(date);\n    setIsLoading(true);\n\n\n\n    try {\n      const formattedDate = moment(date).format(\"YYYY-MM-DD\");\n\n\n\n      setUserMemId(activeTabSpec === 'MyBookings1' || activeTabSpec === '' ? memberid : specialistId);\n\n\n      const response = await callSchedule({\n        specialist_id: userMemId,\n        call_scheduled_date: formattedDate,\n        timeSlot: timeSlot\n      });\n      if (\"error\" in response) {\n        throw new Error(\"Failed to schedule call\");\n      }\n      const data = response.data.data; // Assuming response.data contains the response data\n      const transformedTime = data.map(\n        (item: { call_scheduled_time: string }) =>\n          moment(item.call_scheduled_time, \"HH:mm:ss\").format(\"hh:mm A\")\n      );\n      setTimes(transformedTime);\n    } catch (error) {\n      console.error(\"Failed to schedule call:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  //Call schedule\n\n\n  const handleSubmit = async (stripeToken: any) => {\n    if (stripeToken === 'Error') {\n      return false;\n    }\n    setIsLoading(true);\n\n    try {\n      hideModal();\n      const formattedDate = moment(selectedDate).format(\"YYYY-MM-DD\");\n      let convertedTime = \"\";\n      if (selectedTime) {\n        convertedTime = moment(selectedTime, \"hh:mm A\").format(\"hh:mm A\");\n      } else {\n        console.log(\"selectedTime is null or undefined\");\n      }\n\n      // setUserMemId(activeTabSpec === 'MyBookings2' || activeTabSpec === '' ? memberid : specialistId);\n\n\n\n      let user_mem_id;\n      let currentBookingId = bookingId;\n      if (bookAgain) {\n        currentBookingId = '';\n      }\n      if (specialistId !== undefined) {\n        user_mem_id = specialistId;\n      } else {\n        const member_id = memberid; // Replace with actual member ID if available\n        user_mem_id = member_id;\n      }\n\n\n      const response = await BookSpecialist({\n        specialist_id: user_mem_id,\n        call_scheduled_date: formattedDate,\n        call_scheduled_time: convertedTime,\n        call_scheduled_timezone: SelectedTimezone, booking_id: currentBookingId,\n        stripeToken: stripeToken,\n      });\n      if (\"error\" in response) {\n        console.error(\"Error logging in:\", response.error);\n        if (typeof response.error === \"string\") {\n          setErrorMsg(response.error); // Assign the error message if it's already a string\n        } else {\n          const fetchError = response.error as FetchBaseQueryError; // Type assertion\n          if (\n            fetchError.data &&\n            typeof fetchError.data === \"object\" &&\n            \"error\" in fetchError.data &&\n            typeof fetchError.data.error === \"string\"\n          ) {\n            setErrorMsg(fetchError.data.error);\n          } else {\n            setErrorMsg(\"An error occurred\"); // Handle cases where error property doesn't exist\n          }\n        }\n        setButtonClicked(true);\n\n        setSuccessMsg(\"\");\n      } else {\n        let title = 'Rearranged !';\n        let subtitle = 'Booking time arranged';\n        if (bookAgain) {\n          title = 'Payment Done!';\n          subtitle = 'You have booked with the specialist for a call.';\n        }\n        Swal.fire({\n          title: title,\n          text: subtitle,\n          icon: \"success\",\n          timer: 3000,\n          showConfirmButton: false,\n          backdrop: `\n        rgba(255, 255, 255, 0.5)\n        left top\n        no-repeat\n        filter: blur(5px);\n      `,\n          background: '#fff',\n        });\n        setErrorMsg(\"\");\n        setBookAgain(false);\n        setTimeout(() => {\n          toggle(); // Close the modal\n          setSuccessMsg(\"\"); // Clear success message\n        }, 50);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch specialist list:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePayment = () => {\n    setIsLoading(true);\n    try {\n      const formattedDate = moment(selectedDate).format(\"YYYY-MM-DD\");\n      let convertedTime = \"\";\n      if (selectedTime) {\n        convertedTime = moment(selectedTime, \"hh:mm A\").format(\"hh:mm A\");\n\n        showModal(MODAL_TYPES.PAYMENT_MODAL, {\n          onCloseCallback: handleSubmit,\n          handleSubmit: (stripeToken: any) => {\n            handleSubmit(stripeToken);\n          }\n        });\n      } else {\n        setErrorMsg(\"Please select a Time before booking\");\n      }\n\n    } catch (error) {\n      console.error(\"Failed to fetch specialist list:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmitManage = async () => {\n\n    if (bookAgain) {\n      handlePayment();\n    } else {\n      handleSubmit('');\n    }\n\n  }\n  //Bookings\n  //const handlebuttonSub = async (event: React.MouseEvent<HTMLButtonElement>, stepIndex: any, memImage: string,callDate: Date,callTime:string,specialist_id:any) => {\n  const handlebuttonSub = async (event: React.MouseEvent<HTMLButtonElement>, data: any) => {\n    const buttonText = event.currentTarget.innerText;\n    setIsLoading(true);\n    try {\n      if (buttonText.toLowerCase() === \"accept\") {\n        if (!stripeVerified && activeTabSpec === 'MyBookings1') {\n          showModal(MODAL_TYPES.CONFIRM_MODAL, {\n            title: \"CONNECT STRIPE\",\n            details: \"Please connect your stripe account from payment tab\",\n\n            confirmBtn: \"OK\",\n            handleSubmit: () => {\n              toggleModal1();\n              SinglecardDetail(data);\n              hideModal();\n            },\n\n          });\n        } else {\n          toggleModal1();\n          SinglecardDetail(data);\n        }\n\n\n      }\n\n      if (buttonText.toLowerCase() === \"cancel\") {\n        toggleModal();\n        SinglecardDetail(data);\n\n        // { (activeTabSpec === 'MyBookings1' && is_specialist === 'Y')  ? (fetchMyBookingsApi()) : fetchMyBookingsApiSec() }\n      }//Propose New Time\n\n      if (buttonText.toLowerCase() === \"propose new time\") {\n        setbookingId(data.id);\n        toggle();\n        setImage(data.member_image ? baseUrl + data.member_image : \"\");\n        handleDateSelectRearrange(today, data.specialist_id);\n        setTimeSlot(data.timeSlot)\n        setIsModalOpen(true);\n        setSpecId(data.specialist_id);\n        setFrom('Expert');\n        setIsRearrange(true);\n      }\n\n      if (buttonText.toLowerCase() == \"book again\") {\n        setBookAgain(true);\n        setSpecId(data.specialist_id);\n        setSpecialistName(data.firstName + ' ' + data.lastName);\n        setSpecialistFName(data.firstName);\n        setSpecialistLName(data.lastName);\n        setSpecialistFee(data.fee);\n        setIsModalOpen(true);\n        setImage(data.member_image ? baseUrl + data.member_image : \"\");\n\n        handleDateSelect(today);\n        setIsRearrange(false);\n      }\n\n      if (buttonText.toLowerCase() === \"rearrange\") {\n        console.log('timeslot---', data.timeSlot);\n        setBookAgain(false);\n        setSpecId(data.specialist_id);\n        setSpecialistName(data.firstName + ' ' + data.lastName);\n        setSpecialistFName(data.firstName);\n        setSpecialistLName(data.lastName);\n        setSpecialistFee(0);\n        setbookingId(data.id);\n        setTimeSlot(data.timeSlot);\n        setIsRearrange(true);\n        //toggle();\n        setModal(!modal);\n        setSelectedDate(today);\n        setSelectedTime(null);\n        setErrorMsg(\"\");\n        setSuccessMsg(\"\");\n        if (activeTabSpec === 'MyBookings1') {\n          setFrom('Expert');\n        } else {\n          setFrom('');\n        }\n        setIsModalOpen(true);\n\n        setImage(data.member_image ? baseUrl + data.member_image : \"\");\n        // setSelectedDate(callDate);\n        // setSelectedTime(callTime);\n        handleDateSelectRearrange(data.callDate, data.specialist_id);\n\n\n      }\n      if (buttonText.toLowerCase() === \"join call\" && data.call_status !== 'P') {\n\n        const passData = {\n          meeting_id: data.meeting_link,\n        };\n\n        const response = await videoCallDuration(passData);\n        if (\"data\" in response) {\n\n          const callDatecheck = new Date(data.scheduleDate + ' ' + data.scheduledTime);\n          const callEndTimecheck = new Date(callDatecheck.getTime() + response.data.duration * 60000);\n          const nowcheck = convertToUKTime(new Date());\n          console.log('nowcheck---', nowcheck);\n          console.log('callEndTimecheck----', callEndTimecheck);\n          // Check if current time is less than call end time\n          if (nowcheck < callEndTimecheck) {\n            const postParams = {\n              meeting_id: data.meeting_link,\n              subject: 'Reach Call',\n              call_date: data.scheduleDate + ' ' + data.scheduledTime,\n              duration: response.data.duration,\n              type: 'call',\n              is_expert: activeTabSpec === 'MyBookings1' ? '1' : '0',\n            };\n            const queryString = new URLSearchParams(postParams).toString();\n            window.open(`/video-call?${queryString}`, '_blank');\n          }\n\n        }\n\n\n\n      }\n\n      fetchMyBookingsApi(activeTabSpec, is_specialist);\n\n    } catch (error) {\n      console.error(\"Failed to update:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n\n  }\n  //Bookings\n  function convertToUKTime(date: Date): Date {\n    return new Date(date.toLocaleString('en-US', { timeZone: 'Europe/London' }));\n  }\n  const fetchMyBookingsApi = async (activeTabSpec: string, is_specialist: string) => {\n    setIsLoading(true);\n    try {\n      let response;\n      if (activeTabSpec === 'MyBookings1' && is_specialist === 'Y') {\n        response = await MyBookings(token); // Adjust the function call as needed\n      } else {\n        response = await MyBookingsSec(token); // Adjust the function call as needed\n      }\n\n\n      if (\"error\" in response) {\n        throw new Error(\"Failed to fetch booking details\");\n      }\n      const data = await response.data.data;\n      const stripe_verified = await response.data.stripe_verified;\n      if (stripe_verified) {\n        setStripeVerified(stripe_verified);\n      }\n\n      const formatTime = (timeString: string, duration: number) => {\n        const [startHour, startMinute] = timeString.split(':');\n        let startHourInt = parseInt(startHour);\n        let startMinuteInt = parseInt(startMinute);\n\n        // Start time in 24-hour format\n        const formattedStartTime = `${startHourInt.toString().padStart(2, '0')}:${startMinuteInt.toString().padStart(2, '0')} `;\n\n        // Calculate end time based on duration in minutes\n        let totalMinutes = startHourInt * 60 + startMinuteInt + duration;\n        let endHourInt = Math.floor(totalMinutes / 60) % 24; // Ensure it wraps around 24 hours\n        let endMinuteInt = totalMinutes % 60;\n\n        const formattedEndTime = `${endHourInt.toString().padStart(2, '0')}:${endMinuteInt.toString().padStart(2, '0')} `;\n\n        return `${formattedStartTime} - ${formattedEndTime} `;\n      };\n\n\n\n\n      const defaultLocale = 'en-US';\n      const formatDate = (dateObject: Date, days: string): string => {\n        const options: Intl.DateTimeFormatOptions = {\n          day: '2-digit',\n          month: 'short',\n          year: 'numeric',\n        };\n\n        if (days === \"days\") {\n          return dateObject.toLocaleDateString(defaultLocale, { day: options.day });\n        } else {\n          return dateObject.toLocaleDateString(defaultLocale, { month: options.month });\n        }\n      };\n\n      const formatScheduleTime = (timeString: string) => {\n        const [startHour, startMinute] = timeString.split(\":\");\n        const startHourInt = parseInt(startHour);\n        const period = startHourInt >= 12 ? \"PM\" : \"AM\";\n        const formattedStartHour = startHourInt % 12 || 12;\n\n        return `${formattedStartHour}:${startMinute} ${period} `;\n      };\n\n      const getFullFromDate = (dateObject: Date): string => {\n        const options: Intl.DateTimeFormatOptions = {\n          day: \"2-digit\",\n          month: \"long\",\n          year: \"numeric\",\n        };\n        // Extract the formatted parts\n        const day = new Intl.DateTimeFormat(\"en-US\", { day: \"2-digit\" }).format(\n          dateObject\n        );\n        const month = new Intl.DateTimeFormat(\"en-US\", {\n          month: \"long\",\n        }).format(dateObject);\n        const year = new Intl.DateTimeFormat(\"en-US\", {\n          year: \"numeric\",\n        }).format(dateObject);\n\n        // Construct the desired format\n        return `${day} ${month} ${year} `;\n      };\n\n      const newBookingsItems: BookingInterfaces[] = [];\n      const upcomingBookingsItems: BookingInterfaces[] = [];\n      const historyBookingsItems: BookingInterfaces[] = [];\n\n      data.forEach((item: {\n        id: number;\n        specialist_id: number;\n        call_fee: number;\n        call_scheduled_date: Date;\n        timeSlot: string;\n        uk_scheduled_time: string;\n        day: string;\n        month: string;\n        members_fname: string;\n        members_lname: string;\n        members_profile_picture: string;\n        call_status: string;\n        btnText: string;\n        bookingTab: string;\n        call_scheduled_reason: string;\n        members_country: string;\n        meeting_link: string;\n        member_rearrange: string;\n        currency: \"USD\" | \"GBP\" | \"EUR\";\n        duration: number;\n\n      }) => {\n        const dateObject = new Date(item.call_scheduled_date);\n        // Combine date and time      \n\n        const editdate = moment(`${item.call_scheduled_date}T${item.uk_scheduled_time}`);\n        const formattedDate = editdate.format('ddd MMM DD YYYY HH:mm:ss');\n        const dateObjects = new Date(formattedDate);\n        const nowTime = moment(convertToUKTime(new Date())); // Ensure it's a moment object\n        const minuteDifference = editdate.diff(nowTime, 'minute');\n        const hourDifference = editdate.diff(nowTime, 'hours');\n        let callStatus = item.call_status;\n        let showCall = false;\n        let showCancel = false;\n        let showRearrange = false;\n        if (((activeTabSpec === 'MyBookings2' && (item.call_status === 'A' || item.call_status === 'P' || item.call_status === 'R' || item.call_status === 'S')) || (is_specialist === 'Y' && activeTabSpec !== 'MyBookings2' && (item.call_status === 'P' || item.call_status === 'R'))) && minuteDifference > 0) {\n          showCancel = true;\n        }\n        let callduration = -60;\n        let timeSlotselected = '30 min'\n        if (item.timeSlot === '1hr' || item.timeSlot === '1 hour') {\n          callduration = callduration;\n          timeSlotselected = '1 hour';\n        } else {\n          callduration = -30;\n          timeSlotselected = '30 min';\n        }\n\n        if (item.call_status === 'A' && (minuteDifference < 1 && minuteDifference > callduration)) {\n          showCall = true;\n        }\n        if (((hourDifference > 48 && activeTabSpec === 'MyBookings2' && item.call_status === 'A' && String(item.member_rearrange) !== '1') || (item.call_status === 'R') || (item.call_status === 'S') || (is_specialist === 'Y' && activeTabSpec !== 'MyBookings2')) && minuteDifference > 0) {\n          showRearrange = true;\n        }\n        console.log('minuteDifference--', minuteDifference);\n        console.log('callduration---', callduration);\n        if (minuteDifference < 0 && (item.call_status !== 'H' && item.call_status !== 'A') || (minuteDifference < callduration && item.call_status === 'A')) {\n          callStatus = 'H';\n        }\n        const formattedItem: BookingInterfaces = {\n          id: item.id,\n          specialist_id: item.specialist_id,\n          fee: item.call_fee,\n          callDate: dateObject,\n          day: formatDate(dateObject, \"days\"),\n          month: formatDate(dateObject, \"month\"),\n          time: formatTime(item.uk_scheduled_time, item.duration),\n          firstName: item.members_fname,\n          lastName: item.members_lname,\n          member_image: item.members_profile_picture,\n          call_status: item.call_status,\n          btnText: \"\",\n          btnClassname: \"\",\n          btnTheme: \"\",\n          is_specialistval: \"\",\n          bookingTab: \"\",\n          scheduledTime: formatScheduleTime(item.uk_scheduled_time),\n          scheduleDate: getFullFromDate(dateObject),\n          call_scheduled_reason: item.call_scheduled_reason,\n          members_country: item.members_country,\n          meeting_link: item.meeting_link,\n          showCancel: showCancel,\n          showCall: showCall,\n          showRearrange: showRearrange,\n          hourDifference: hourDifference,\n          timeSlot: timeSlotselected,\n          currency: currencySymbols[item.currency],\n          duration: item.duration,\n\n        };\n        if (callStatus === \"P\" || callStatus === \"R\") {\n          newBookingsItems.push(formattedItem);\n          if (activeTabSpec === 'MyBookings2') {\n            upcomingBookingsItems.push(formattedItem);\n          }\n        } else if (callStatus === \"A\") {\n          upcomingBookingsItems.push(formattedItem);\n        } else if (callStatus === \"H\" || callStatus === \"S\") {\n          historyBookingsItems.push(formattedItem);\n        }\n        return formattedItem;\n      });\n\n\n      setnewBooking(newBookingsItems);\n      setupcomingBooking(upcomingBookingsItems);\n      setbookingHistory(historyBookingsItems);\n\n      //let countcons = newBookingsItems.length;\n\n\n\n\n\n\n\n    } catch (error) {\n\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n\n    fetchMyBookingsApi(activeTabSpec, is_specialist);\n    // fetchMyBookingsApi('MyBookings1',is_specialist,token); \n\n\n\n  }, []);\n\n  //is_specialist=\"Y\";\n  const BookingreqButtonDetails = {\n    btnText: \"Accept\",\n    btnClassname: \"pending-status\",\n    btnTheme: \"dark\" as \"light\" | \"dark\" | \"grey\",\n    btnSmallText: \"Propose New Time\",\n    is_specialistval: is_specialist,\n    bookingTab: activeTabSpec\n\n  };\n  const UpcomingButtonDetails = {\n    btnText: \"Join Call\",\n    btnClassname: \"\",\n    btnTheme: \"light\" as \"light\" | \"dark\",\n    btnSmallText: \"Cancel\",\n    is_specialistval: is_specialist,\n    bookingTab: activeTabSpec\n  };\n\n  const HistoryButtonDetails = {\n    btnText: \"Book Again\",\n    btnClassname: \"history-status\",\n    btnTheme: \"light\" as \"light\" | \"dark\",\n    btnSmallText: \"Cancel\",\n    is_specialistval: is_specialist,\n    bookingTab: activeTabSpec\n  };\n  const changeTimeSlot = (timeslot: any) => {\n    //setTimeSlot(timeslot);\n  }\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    fetchMyBookingsApi(activeTabSpec, is_specialist);\n\n  };\n  // const haveSpecClass = haveSpec ? '' : 'd-none';\n  return (\n    <div className=\"mybooking-tabs\" id=\"mybooking\">\n      {isLoading ? (\n        <div className=\"page-loader\">\n          <div className=\"page-innerLoader\">\n            <div className=\"spinner-border\" role=\"status\">\n              <img src={require(\"../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n            </div>\n          </div>\n        </div>\n      ) : (\"\")}\n      {is_specialist === \"Y\" ? (\n        <div className=\"sub-childtab\">\n          <div className=\"tab-menu\">\n            <ul className=\"tab-menu-ul\">\n              <li className=\"tab-menu-item\">\n                <a\n                  className={activeTabSpec === \"MyBookings2\" ? \"active\" : \"\"}\n                  onClick={() => handleTabClick(\"MyBookings2\")}\n                >\n                  My Bookings\n                </a>\n              </li>\n\n              <li className=\"tab-menu-item\">\n                <a\n                  className={activeTabSpec === \"MyBookings1\" ? \"active\" : \"\"}\n                  onClick={() => handleTabClick(\"MyBookings1\")}>\n                  Expert Bookings\n                </a>\n              </li>\n\n\n            </ul>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {is_specialist === \"Y\" && activeTabSpec === \"MyBookings1\" ? (\n        <BookingRequest\n          newBookingData={newBooking}\n          BookingreqButtonDetails={BookingreqButtonDetails}\n          handleSub={handlebuttonSub}\n        />\n      ) : (\n        \"\"\n      )}\n\n      <UpcomingBooking\n        upcomingBookingData={upcomingBooking}\n        upcomingButtonDetails={UpcomingButtonDetails}\n        handleSub={handlebuttonSub}\n      />\n      <History\n        bookingHistoryData={bookingHistory}\n        HistoryButtonDetails={HistoryButtonDetails}\n        handleSub={handlebuttonSub}\n      />\n\n      {isModalOpen && (\n        <BookModal isOpen={isModalOpen} toggleClose={handleCloseModal} userId={specialistId} specialistName={specialistFName} specialistLastName={specialistFName} timeSlot={timeSlot} specialistDp={specialistDp} changeTimeSlot={changeTimeSlot} reason={''} bookingId={bookingId} from={from} isRearrange={isRearrange} specialistFee={specialistfee} />\n      )}\n\n      {singlecard && (\n        <>\n          <AcceptBooking\n            isOpen={modalOpen1}\n            toggle={toggleModal1}\n            singlecard={singlecard}\n            userImage={userImage}\n            afterAccept={handleAfterAccept}\n          />\n\n          <CancelBooking\n            isOpen={modalOpen}\n            toggle={toggleModal}\n            singlecard={singlecard}\n            userImage={userImage}\n            afterCancel={handleAfterCancel}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\n","import { Heading } from \"../../../components/Heading/Heading\";\nimport \"./Profile.scss\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../../utils/GlobalModal\";\nexport function GeneralSettings() {\n\n    const { showModal } = useGlobalModalContext();\n    const deactivateModal = () => {\n        showModal(MODAL_TYPES.CONFIRM_MODAL, {\n            title: \"Deactivate Profile\",\n            details: \"Are you sure you really want to deactivate the profile?\",\n            confirmBtn: \"Deactivate\",\n        });\n    };\n\n    const deleteModal = () => {\n        showModal(MODAL_TYPES.CONFIRM_MODAL, {\n            title: \"Delete Account?\",\n            details: \"Are you sure you really want to delete the account?\",\n            confirmBtn: \"Delete\",\n        });\n    };\n\n\n    return (\n        <div className=\"col-md-12 col-12 py-2 General-Settings\">\n            <Heading tag=\"h3\">General</Heading>\n            <div className=\"general-setting-text notification-text\">\n                <Heading tag=\"h5\">Manage Notifications</Heading>\n                <p style={{ fontSize: \"14px\" }}>\n                    Manage what type of emails you get and mute notifications.\n                </p>\n            </div>\n            <div className=\"account-deactivation\">\n                <Heading tag=\"h5\">\n                    <span style={{ color: \"#ff0075\" }}>\n                        <a style={{ cursor: \"pointer\" }} onClick={deactivateModal}>\n                            Deactivate Account\n                        </a>\n                    </span>\n                </Heading>\n                <p style={{ fontSize: \"14px\" }}>\n                    Deactivating will suspend your account until you sign back in.\n                </p>\n            </div>\n            <div className=\"delete-account\">\n                <Heading tag=\"h5\">\n                    <span style={{ color: \"#ff0075\" }}>\n                        <a style={{ cursor: \"pointer\" }} onClick={deleteModal}>\n                            Delete Account\n                        </a>\n                    </span>\n                </Heading>\n                <p style={{ fontSize: \"14px\" }}>\n                    Deleting will suspend your account permanently.\n                </p>\n            </div>\n        </div>\n    );\n}","import { Button } from \"../../../components/Button/Button\";\nimport CustomInput from \"../../../components/CustomInput/CustomInput\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useSaveCallRateMutation, useGetCallRateQuery } from \"../profileApiSlice\";\nimport { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\n\ninterface CallRateData {\n    rate: {\n        extra_GBP: number;\n        half_GBP: number;\n        one_GBP: number;\n        extra_EUR: number;\n        half_EUR: number;\n        one_EUR: number;\n        extra_USD: number;\n        half_USD: number;\n        one_USD: number;\n    };\n}\n\nexport function CallRates() {\n    const [callRateData, setCallRateData] = useState<CallRateData | null>(null);\n    const { data, isLoading, isSuccess } = useGetCallRateQuery({});\n\n    // useForm initialization\n    const form = useForm<CallRateData>({\n        defaultValues: {\n            rate: { extra_GBP: 0, half_GBP: 0, one_GBP: 0, extra_EUR: 0, half_EUR: 0, one_EUR: 0, extra_USD: 0, half_USD: 0, one_USD: 0 }\n        }\n    });\n\n    const { handleSubmit, getValues, reset } = form;\n    const [saveRate] = useSaveCallRateMutation();\n\n    // Update form values when the data is fetched successfully\n    useEffect(() => {\n        if (isSuccess && data) {\n            setCallRateData(data);\n            reset(data); // Reset the form values with the fetched data\n        }\n    }, [isSuccess, data, reset]);\n\n    const onSubmit = async () => {\n        // Retrieve form values\n        const formValues = getValues();\n\n        const userData = await saveRate(formValues);\n\n        Swal.fire({\n            title: \"Rate Updated!\",\n            text: \"You have updated the Call Rates.\",\n            icon: \"success\",\n            timer: 3000,\n            showConfirmButton: false,\n            backdrop: `\n          rgba(255, 255, 255, 0.5)\n          left top\n          no-repeat\n          filter: blur(5px);\n        `,\n            background: '#fff',\n        });\n        // Call your API with the data\n    };\n\n    return (\n        <div className=\"general-setting-text\">\n            <div className=\"mb-2\">\n                <h5 className=\"mb-3  d-block customHeading \">Set Call Rates</h5>\n            </div>\n            <div className=\"form-content\">\n                <FormProvider {...form}>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"half-hourRate\">\n                            <div className=\"row\">\n                                <div className=\"label-heading\">\n                                    <label className=\"w-100 d-flex justify-content-start\">Half hour Rate</label>\n                                </div>\n                                <div className=\"col-md-4 col-4\">\n                                    <div className=\"input-box d-flex align-items-start\">\n                                        <div className=\"Symbol mt-10\">\n                                            <span>£</span>\n                                        </div>\n                                        <div className=\"input-content\">\n                                            <CustomInput\n                                                name=\"rate.half_GBP\"\n                                                placeholder=\"\"\n                                                type=\"number\"\n                                                registerConfig={{\n                                                    required: { value: true, message: \"Half hour rate is required\" },\n                                                }}\n                                                className=\"input-block\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4 col-4\">\n                                    <div className=\"input-box d-flex align-items-start\">\n                                        <div className=\"Symbol mt-10\">\n                                            <span>€</span>\n                                        </div>\n                                        <CustomInput\n                                            name=\"rate.half_EUR\"\n                                            placeholder=\"\"\n                                            type=\"number\"\n                                            registerConfig={{\n                                                required: { value: true, message: \"Half hour rate is required\" },\n                                            }}\n                                            className=\"input-block\"\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4 col-4\">\n                                    <div className=\"input-box d-flex align-items-start\">\n                                        <div className=\"Symbol mt-10\">\n                                            <span>$</span>\n                                        </div>\n                                        <CustomInput\n                                            name=\"rate.half_USD\"\n                                            placeholder=\"\"\n                                            type=\"number\"\n                                            registerConfig={{\n                                                required: { value: true, message: \"Half hour rate is required\" },\n                                            }}\n                                            className=\"input-block\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"input-box\">\n                                <div className=\"row\">\n                                    <div className=\"label-heading\">\n                                        <label className=\"w-100 d-flex justify-content-start\">One Hour Call Rate</label>\n                                    </div>\n                                    <div className=\"col-md-4 col-4\">\n                                        <div className=\"input-box d-flex align-items-start\">\n                                            <div className=\"Symbol mt-10\">\n                                                <span>£</span>\n                                            </div>\n                                            <div className=\"input-content\">\n                                                <CustomInput\n                                                    name=\"rate.one_GBP\"\n                                                    placeholder=\"\"\n                                                    type=\"number\"\n                                                    registerConfig={{\n                                                        required: { value: true, message: \"One hour rate is required\" },\n                                                    }}\n                                                    className=\"input-block\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4 col-4\">\n                                        <div className=\"input-box d-flex align-items-start\">\n                                            <div className=\"Symbol mt-10\">\n                                                <span>€</span>\n                                            </div>\n                                            <div className=\"input-content\">\n                                                <CustomInput\n                                                    name=\"rate.one_EUR\"\n                                                    placeholder=\"\"\n                                                    type=\"number\"\n                                                    registerConfig={{\n                                                        required: { value: true, message: \"One hour rate is required\" },\n                                                    }}\n                                                    className=\"input-block\"\n                                                />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"col-md-4 col-4\">\n                                        <div className=\"input-box d-flex align-items-start\">\n                                            <div className=\"Symbol mt-10\">\n                                                <span>$</span>\n                                            </div>\n                                            <div className=\"input-content\">\n                                                <CustomInput\n                                                    name=\"rate.one_USD\"\n                                                    placeholder=\"\"\n                                                    type=\"number\"\n                                                    registerConfig={{\n                                                        required: { value: true, message: \"One hour rate is required\" },\n                                                    }}\n                                                    className=\"input-block\"\n                                                />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div className=\"input-box\">\n                                <div className=\"row\">\n                                    <div className=\"label-heading\">\n                                        <label className=\"d-flex justify-content-start w-100\">Extra Time Call Rate</label>\n                                    </div>\n                                    <div className=\"col-md-4 col-4\">\n                                        <div className=\"input-box d-flex align-items-start\">\n                                            <div className=\"Symbol mt-10\">\n                                                <span>£</span>\n                                            </div>\n                                            <CustomInput\n                                                name=\"rate.extra_GBP\"\n                                                placeholder=\"\"\n                                                type=\"number\"\n                                                registerConfig={{\n                                                    required: { value: true, message: \"Extra time rate is required\" },\n                                                }}\n                                                className=\"input-block\"\n                                            />\n                                        </div>\n\n                                    </div>\n                                    <div className=\"col-md-4 col-4\">\n                                        <div className=\"input-box d-flex align-items-start\">\n                                            <div className=\"Symbol mt-10\">\n                                                <span>€</span>\n                                            </div>\n                                            <CustomInput\n                                                name=\"rate.extra_EUR\"\n                                                placeholder=\"\"\n                                                type=\"number\"\n                                                registerConfig={{\n                                                    required: { value: true, message: \"Extra time rate is required\" },\n                                                }}\n                                                className=\"input-block\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4 col-4\">\n                                        <div className=\"input-box d-flex align-items-start\">\n                                            <div className=\"Symbol mt-10\">\n                                                <span>$</span>\n                                            </div>\n                                            <CustomInput\n                                                name=\"rate.extra_USD\"\n                                                placeholder=\"\"\n                                                type=\"number\"\n                                                registerConfig={{\n                                                    required: { value: true, message: \"Extra time rate is required\" },\n                                                }}\n                                                className=\"input-block\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </FormProvider>\n            </div>\n            <div className=\"save-action p-0\">\n                <Button\n                    onClick={handleSubmit(onSubmit)}\n                    text=\"Save\"\n                    icon={true}\n                    theme=\"dark\"\n                    className=\"call-rate\"\n                />\n            </div>\n        </div>\n    );\n}\n","import { SetStateAction, useEffect, useState } from \"react\";\nimport moment, { Moment } from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport { Button } from \"../../../components/Button/Button\";\nimport { ScrollCalender } from \"../../../components/Date/ScrollCalender\";\nimport { faEdit, faPlus, faSave, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSaveUnavailableHoursMutation, useGetUnavailableHoursQuery, useDeleteUnavailableHoursMutation } from \"../profileApiSlice\";\nimport Calendar from \"react-calendar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Profile.scss\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../../../components/ReactDatePicker/customDatePicker.scss\";\nimport Swal from \"sweetalert2\";\n\ninterface TimeBlock {\n    startTime: string;\n    endTime: string;\n    availableTimes?: string[]; // Optional property\n}\n\ntype ValuePiece = Date | null;\n\ntype Value = ValuePiece | [ValuePiece, ValuePiece];\n\ninterface UnavailableTimeEntry {\n    id: number;\n    timeRange: string[];\n}\n\ninterface UnavailableTimes {\n    [date: string]: UnavailableTimeEntry[];\n}\n\ntype TimeSlot = {\n    startTime: string;\n    endTime: string;\n};\n\ntype EditDaySelection = {\n    id: number;\n    date: string | string[];\n    times: string[];\n};\n\nexport function UnavailableDate() {\n    const today = moment().add(1, 'days').toDate();\n    const [selectedDate, setSelectedDate] = useState<Date | null>(today); // Single date\n    const [times, setTimes] = useState<string[]>([]);\n    // const [unavailableTimes, setUnavailableTimes] = useState<Record<string, string[]>>({});\n    const [timeBlocks, setTimeBlocks] = useState<TimeBlock[]>([{ startTime: \"\", endTime: \"\" }]);\n    const [highlightDates, setHighlightDates] = useState<Date[]>([]);\n    const [deleteId, setDeleteId] = useState<Record<string, number>>({});\n    const [cleared, setCleared] = useState<boolean>(false);\n    const [enabled, setEnabled] = useState(false);\n    const [saveUnavailableHours] = useSaveUnavailableHoursMutation();\n    const [deleteUnavailableHours] = useDeleteUnavailableHoursMutation();\n    const { data: unavailableData, isLoading, isSuccess, refetch } = useGetUnavailableHoursQuery({});\n    const [unavailableTimes, setUnavailableTimes] = useState<UnavailableTimes>({});\n    const [selectedDates, setSelectedDates] = useState<Date[]>([]);\n    const [editSelectedDates, setEditSelectedDates] = useState<Record<string, number | null>>({});\n    const [dateError, setDateError] = useState<string>('');\n    interface UnavailableDateTimes {\n        [date: string]: {\n            id: number;\n            times: string[];\n        };\n    }\n\n\n    const addUnavailableTime = (date: string, id: number, timeRange: string[]) => {\n        setUnavailableTimes((prev) => {\n            const existingEntries = prev[date] || [];\n            return {\n                ...prev,\n                [date]: [...existingEntries, { id, timeRange }],\n            };\n        });\n    };\n\n    useEffect(() => {\n        if (isSuccess && unavailableData) {\n            const data = unavailableData as { dates: UnavailableDateTimes };\n\n            const datesArray: SetStateAction<Date[]> = [];\n            const initialUnavailableTimes: Record<string, string[]> = {};\n            const getDeleteId: Record<string, number> = {};\n            Object.entries(data.dates).forEach(([date, dateInfo]) => {\n                initialUnavailableTimes[date] = dateInfo.times;\n                getDeleteId[date] = dateInfo.id;\n                datesArray.push(new Date(date));\n\n                addUnavailableTime(date, dateInfo.id, dateInfo.times);\n\n            });\n            // setSelectedDates(datesArray);\n            setDeleteId(getDeleteId);\n            // setUnavailableTimes(initialUnavailableTimes);\n\n            const unavailableDates = Object.keys(data.dates).map(date => moment(date).toDate());\n            setHighlightDates(unavailableDates); // Set highlighted dates\n\n            if (selectedDate) {\n                const formattedDate = moment(selectedDate).format('YYYY-MM-DD');\n                if (initialUnavailableTimes[formattedDate]) {\n                    const blocks = initialUnavailableTimes[formattedDate].map((timeRange) => {\n                        const [startTime, endTime] = timeRange.split('-');\n                        return { startTime, endTime };\n                    });\n                    setTimeBlocks(blocks);\n                }\n            }\n        }\n\n    }, [unavailableData, isSuccess, selectedDate]);\n\n\n    const getTimes = () => {\n        const startTime = moment('00:00', 'HH:mm');\n        const endTime = moment().endOf('day');\n        const interval = 60;\n        const _times: string[] = [];\n        let currentTime = moment(startTime);\n\n        while (currentTime.isBefore(endTime)) {\n            _times.push(currentTime.format('HH:mm'));\n            currentTime.add(interval, 'minutes');\n        }\n\n        setTimes(_times);\n    };\n    const handleAddTime = () => {\n        const lastTimeBlock = timeBlocks[0];\n        const lastEndTime = moment(lastTimeBlock.endTime, 'hh:mm A');\n\n        const availableTimes = times.filter(time => {\n            const timeMoment = moment(time, 'hh:mm A');\n            return timeMoment.isAfter(lastEndTime);\n        });\n        setCleared(true);\n        setTimeBlocks([{ startTime: \"\", endTime: \"\", availableTimes }, ...timeBlocks]);\n    };\n\n    const handleSaveTime = async () => {\n\n        const updatedUnavailableTimes: Record<string, string[]> = {};\n        if (selectedDates.length > 0) {\n            setDateError('');\n            const formattedSelectedDates = selectedDates.map(date =>\n                moment(date).format('YYYY-MM-DD')\n            );\n\n            const selectedDatesSet = new Set(selectedDates.map(date => moment(date).format(\"YYYY-MM-DD\")));\n            const datesToDelete = Object.keys(editSelectedDates).filter(date => !selectedDatesSet.has(date));\n            selectedDates.map((date, index) => (\n                timeBlocks.forEach(({ startTime, endTime }) => {\n                    if (startTime && endTime && date) {\n                        const timeRange = `${startTime}-${endTime}`;\n                        const formattedDate = moment(date).format('YYYY-MM-DD');\n                        if (updatedUnavailableTimes[formattedDate]) {\n                            updatedUnavailableTimes[formattedDate] = [\n                                timeRange,\n                                ...updatedUnavailableTimes[formattedDate],\n                            ];\n                        } else {\n                            updatedUnavailableTimes[formattedDate] = [timeRange];\n                        }\n                    }\n                })\n\n            ))\n            const formData = {\n                dates: updatedUnavailableTimes,\n                excluded_dates: datesToDelete,\n            };\n            const response = await saveUnavailableHours(formData);\n\n            if (\"error\" in response) {\n                console.error(\"Error logging in:\", response.error);\n            } else {\n                Swal.fire({\n                    title: \"Saved!\",\n                    text: \"The unavailable date and time saved successfully\",\n                    icon: \"success\",\n                    timer: 3000,\n                    showConfirmButton: false,\n                    backdrop: `\n            rgba(255, 255, 255, 0.5)\n            left top\n            no-repeat\n            filter: blur(5px);\n        `,\n                    background: '#fff',\n                });\n                if (refetch) {\n                    refetch();\n                } else {\n                    console.warn(\"Refetch is null, cannot refetch data.\");\n                }\n            }\n\n            setEnabled(!enabled);\n\n\n            // Clear timeBlocks and reset after saving\n            setUnavailableTimes({});\n            setTimeBlocks([{ startTime: \"\", endTime: \"\" }]);\n            setSelectedDates([]);\n            refetch();\n        } else {\n            setDateError('Please select date');\n        }\n    };\n\n    const handleTimeChange = (index: number, field: \"startTime\" | \"endTime\", value: string) => {\n        const updatedTimeBlocks = [...timeBlocks];\n        updatedTimeBlocks[index][field] = value;\n\n        if (field === \"startTime\" && updatedTimeBlocks[index].endTime) {\n            const selectedStartTime = moment(value, \"HH:mm\");\n            const selectedEndTime = moment(updatedTimeBlocks[index].endTime, \"HH:mm\");\n\n            if (!selectedEndTime.isAfter(selectedStartTime)) {\n                updatedTimeBlocks[index].endTime = \"\"; // Reset endTime if invalid\n            }\n        }\n\n        setTimeBlocks(updatedTimeBlocks);\n        setDateError('');\n    };\n\n    const renderEndTimeOptions = (index: number) => {\n        const selectedStartTime = moment(timeBlocks[index].startTime, \"HH:mm\");\n        return times\n            .filter((time) => {\n                const timeMoment = moment(time, \"HH:mm\");\n                return selectedStartTime.isValid() && timeMoment.isAfter(selectedStartTime);\n            })\n            .map((time) => (\n                <option key={time} value={time}>\n                    {time}\n                </option>\n            ));\n    };\n\n    const handleClearTime = () => {\n        if (selectedDate) {\n            const formattedDate = moment(selectedDate).format('YYYY-MM-DD');\n            const updatedUnavailableTimes = { ...unavailableTimes };\n            if (updatedUnavailableTimes[formattedDate]) {\n                updatedUnavailableTimes[formattedDate] = [];\n            }\n            setCleared(true);\n            setUnavailableTimes(updatedUnavailableTimes);\n            setTimeBlocks([{ startTime: \"\", endTime: \"\" }]); // Reset time blocks\n        }\n        setDateError('');\n    };\n\n    const cancelEdit = () => {\n        setTimeBlocks([{ startTime: \"\", endTime: \"\" }]);\n        setSelectedDates([]);\n    }\n\n    useEffect(() => {\n        getTimes();\n    }, []);\n\n    let lastTimeBlockValid = timeBlocks[0]?.startTime && timeBlocks[0]?.endTime;\n    if (lastTimeBlockValid === '' && cleared) {\n        lastTimeBlockValid = '1';\n    }\n    const onChange = (dates: Date[] | null) => {\n        if (dates && dates.length > 0) {\n            setSelectedDates(dates);\n        } else {\n            setSelectedDates([]);\n        }\n    };\n\n\n    const listUnavailableTimes = (\n        unavailableTimes: { [date: string]: { id: number; timeRange: string[] }[]; }\n    ) => {\n        if (Object.keys(unavailableTimes).length === 0) {\n            return [];\n        }\n\n        const result: { ids: number[]; date: string; times: string[] }[] = [];\n        const dates = Object.keys(unavailableTimes).sort();\n\n        let rangeStart = dates[0];\n        let rangeEnd = dates[0];\n        let previousTimeRanges = unavailableTimes[rangeStart]?.[0]?.timeRange || [];\n        let ids: number[] = [unavailableTimes[rangeStart]?.[0]?.id || 0];\n\n        for (let i = 1; i < dates.length; i++) {\n            const currentDate = dates[i];\n            const currentEntry = unavailableTimes[currentDate]?.[0];\n            const currentTimeRanges = currentEntry?.timeRange || [];\n            const currentId = currentEntry?.id;\n\n            const isConsecutiveDate = moment(currentDate).diff(moment(rangeEnd), \"days\") === 1;\n            const isSameTimeRanges = JSON.stringify(currentTimeRanges) === JSON.stringify(previousTimeRanges);\n\n            if (isConsecutiveDate && isSameTimeRanges) {\n                rangeEnd = currentDate;\n                if (currentId !== undefined) {\n                    ids.push(currentId);\n                }\n            } else {\n                rangeStart = moment(rangeStart).format('D/M/YYYY');\n                rangeEnd = moment(rangeEnd).format('D/M/YYYY');\n                result.push({\n                    ids: ids,\n                    date: rangeStart === rangeEnd ? rangeStart : `${rangeStart} to ${rangeEnd}`,\n                    times: previousTimeRanges,\n                });\n\n                // Reset for the next range\n                rangeStart = currentDate;\n                rangeEnd = currentDate;\n                previousTimeRanges = currentTimeRanges;\n                ids = [currentId || 0];\n            }\n        }\n\n        // Add the last range\n        rangeStart = moment(rangeStart).format('D/M/YYYY');\n        rangeEnd = moment(rangeEnd).format('D/M/YYYY');\n        result.push({\n            ids: ids,\n            date: rangeStart === rangeEnd ? rangeStart : `${rangeStart} to ${rangeEnd}`,\n            times: previousTimeRanges,\n        });\n\n        return result;\n    };\n\n    const unavailableRanges = listUnavailableTimes(unavailableTimes);\n\n    const handleEdit = async (item: { ids: number[]; date: string; times: string[]; }) => {\n        if (!item.date) {\n            console.error(\"Date is undefined or invalid.\");\n            return;\n        }\n\n        const [startDate, endDate] = item.date.includes(\"to\")\n            ? item.date.split(\" to \").map(date => date.trim())\n            : [item.date, item.date];\n\n        const trimmedStartDate = moment(startDate, \"D/M/YYYY\", true);\n        const trimmedEndDate = moment(endDate, \"D/M/YYYY\", true);\n\n        if (!trimmedStartDate.isValid() || !trimmedEndDate.isValid()) {\n            console.error(\"Start date or end date is invalid.\");\n            return;\n        }\n\n        const dates: Date[] = [];\n        let currentDate = moment(trimmedStartDate);\n\n        while (currentDate.isSameOrBefore(trimmedEndDate)) {\n            dates.push(currentDate.toDate());\n            currentDate.add(1, \"days\");\n        }\n\n        setSelectedDates(dates);\n\n        const editSelectedDates = dates.reduce((acc, date, index) => {\n            const formattedDate = moment(date).format(\"YYYY-MM-DD\");\n            acc[formattedDate] = item.ids[index] || null;\n            return acc;\n        }, {} as Record<string, number | null>);\n\n        setEditSelectedDates(editSelectedDates);\n\n        const blocks: TimeBlock[] = (item.times || []).map(range => {\n            if (!range.includes(\"-\")) {\n                console.error(\"Time range format is invalid.\");\n                return { startTime: \"\", endTime: \"\" };\n            }\n\n            const [startTime, endTime] = range.split(\"-\");\n            return {\n                startTime: moment(startTime.trim(), \"HH:mm\", true).format(\"HH:mm\"),\n                endTime: moment(endTime.trim(), \"HH:mm\", true).format(\"HH:mm\")\n            };\n        }).filter(block => block.startTime && block.endTime); // Filter out any empty blocks\n\n        setTimeBlocks(blocks);\n    };\n\n    const handleDelete = async (item: { ids: number[]; date: string; times: string[]; }) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'This action will permanently Delete the unavailable date and time.',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, Delete it!',\n            cancelButtonText: 'Cancel',\n            backdrop: `\n          rgba(255, 255, 255, 0.5)\n          left top\n          no-repeat\n          filter: blur(5px);\n        `,\n            background: '#fff',\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                try {\n                    const formData = {\n                        id: item.ids,\n                    };\n                    const response = await deleteUnavailableHours(formData);\n                    if (\"error\" in response) {\n                        console.error(\"Error logging in:\", response.error);\n                    } else {\n                        Swal.fire({\n                            title: \"Deleted!\",\n                            text: \"The unavailable date and time deleted successfully\",\n                            icon: \"success\",\n                            timer: 3000,\n                            showConfirmButton: false,\n                            backdrop: `\n                    rgba(255, 255, 255, 0.5)\n                    left top\n                    no-repeat\n                    filter: blur(5px);\n                  `,\n                            background: '#fff',\n                        });\n                        if (refetch) {\n                            refetch();\n                        } else {\n                            console.warn(\"Refetch is null, cannot refetch data.\");\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Error archiving campaign:\", error);\n                }\n            }\n        });\n\n        setUnavailableTimes({});\n        setTimeBlocks([{ startTime: \"\", endTime: \"\" }]);\n        setSelectedDates([]);\n        refetch();\n    }\n    return (\n        <div className=\"general-setting-text unavailableDate-text\">\n            <div className=\"mb-4\">\n                <h5 className=\"mb-4 d-block customHeading\">Set Unavailable Dates</h5>\n                <div className=\"horizontal-calendar\">\n                    <DatePicker\n                        selectedDates={selectedDates}\n                        selectsMultiple\n                        onChange={onChange}\n                        minDate={new Date(Date.now() + 24 * 60 * 60 * 1000)}\n                        inline\n                    />\n\n                </div>\n\n            </div>\n            <div className=\"mb-4\">\n                {unavailableRanges.length > 0 && (\n                    <div className=\"table-workingHours\">\n                        <table className=\"table\">\n                            <tbody>\n                                {unavailableRanges.map((item, index) => (\n                                    <tr key={index}>\n                                        <td>\n                                            {item.date}\n                                        </td>\n                                        <td className=\"text-center\">\n                                            {item.times.join(\", \")}\n                                        </td>\n                                        <td>\n                                            <div className=\"action-area\">\n                                                <Button\n                                                    onClick={() => handleEdit(item)}\n                                                    text=\"\"\n                                                    icon={true}\n                                                    iconname={faEdit}\n                                                    theme=\"light\"\n                                                    className=\"time-save-btn\"\n                                                />\n                                                <Button\n                                                    onClick={() => handleDelete(item)}\n                                                    text=\"\"\n                                                    icon={true}\n                                                    iconname={faTrashAlt}\n                                                    theme=\"light\"\n                                                    className=\"time-save-btn\"\n                                                />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                )}\n            </div>\n            <div className=\"time-block-parent\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 col-12\">\n                        <div className=\"time-selection d-block\">\n                            {timeBlocks.map((timeBlock, index) => (\n                                <div key={index} className=\"row w-100 d-flex\">\n                                    <div className=\"col-md-6 col-6\">\n                                        <div className=\"action-box\">\n                                            <select\n                                                className=\"form-select\"\n                                                value={timeBlock.startTime}\n                                                onChange={(e) => handleTimeChange(index, \"startTime\", e.target.value)}\n                                            >\n                                                <option value=\"\">Select Time</option>\n                                                {times.map((time) => (\n                                                    <option key={time} value={time}>\n                                                        {time}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6 col-6\">\n                                        <div className=\"action-box\">\n                                            <select\n                                                className=\"form-select\"\n                                                value={timeBlock.endTime}\n                                                onChange={(e) => handleTimeChange(index, \"endTime\", e.target.value)}\n                                            >\n                                                <option value=\"\">Select Time</option>\n                                                {renderEndTimeOptions(index)}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"col-md-4 col-12\">\n                        <div className=\"d-flex time-save-btn-div\">\n                            {lastTimeBlockValid && (\n                                <>\n                                    <Button\n                                        onClick={handleAddTime}\n                                        text=\"Add\"\n                                        icon={true}\n                                        iconname={faPlus}\n                                        theme=\"dark\"\n                                        className=\"time-add-btn\"\n                                    />\n                                    <Button\n                                        onClick={handleClearTime}\n                                        text=\"Clear all\"\n                                        icon={true}\n                                        theme=\"dark\"\n                                        className=\"clear-btn\"\n                                    />\n                                </>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"time-selection\">\n                {dateError !== '' && (\n                    <div style={{ color: \"red\" }}>* {dateError}</div>\n                )}\n                <div className=\"save-action time-save-btn-div contentEnd\">\n                    {lastTimeBlockValid && (\n                        <Button\n                            onClick={handleSaveTime}\n                            text=\"Save\"\n                            icon={true}\n                            theme=\"dark\"\n                            className=\"\"\n                        />\n                    )}\n                    {lastTimeBlockValid && (\n                        <Button\n                            onClick={cancelEdit}\n                            text=\"Cancel\"\n                            icon={true}\n                            theme=\"dark\"\n                            className=\"mx-2\"\n                        />\n                    )}\n                </div>\n            </div>\n        </div >\n    );\n}\n","import { useState, useEffect } from \"react\";\nimport { Button } from \"../../../components/Button/Button\";\nimport moment from \"moment\";\nimport { useSaveWorkingHoursMutation, useGetWorkingHoursQuery, useUpdateWorkingHoursMutation, useDeleteWorkingHoursMutation } from \"../profileApiSlice\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport Swal from \"sweetalert2\";\nimport { idText } from \"typescript\";\n// Types\ntype TimeSlot = {\n    startTime: string;\n    endTime: string;\n};\n\ntype DaySelection = {\n    day: string;\n    times: TimeSlot[];\n};\ntype EditDaySelection = {\n    id: number;\n    day: string | string[];\n    times: TimeSlot[];\n};\ntype DisabledDays = {\n    day: string[];\n};\nexport function WorkingHour() {\n    const daysOfWeek: string[] = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const [selectedDays, setSelectedDays] = useState<DaySelection[]>([]);\n    const [showDays, setShowDays] = useState<EditDaySelection[]>([]);\n    const [disabledDays, setDisabledDays] = useState<DisabledDays[]>([]);\n    const [startTime, setStartTime] = useState<string>(\"\");\n    const [endTime, setEndTime] = useState<string>(\"\");\n    const [times, setTimes] = useState<string[]>([]);\n    const [isEditing, setIsEditing] = useState<number | null>(null);\n\n    const [saveWorkingHours] = useSaveWorkingHoursMutation();\n    const [updateWorkingHours] = useUpdateWorkingHoursMutation();\n    const [deleteWorkingHours] = useDeleteWorkingHoursMutation();\n    const { data: workingHourData, isSuccess, isLoading, refetch } = useGetWorkingHoursQuery({});\n\n    useEffect(() => {\n        if (isSuccess && workingHourData && isEditing === null) {\n            const existingData = workingHourData.working_hours;\n            const parsedData: [] = existingData.flatMap((item: { time: { split: (arg0: string) => [any, any]; }[]; days: any[]; }) => {\n                return {\n                    day: item.days,\n                }\n\n            });\n            const showParsedData = existingData.map((item: { id: number, time: { split: (arg0: string) => [any, any]; }[]; days: any; }) => {\n                // Extract start and end times from the \"time\" string\n                const [startTime, endTime] = item.time[0].split(\"-\");\n\n                // Return an object where \"day\" is an array of the days\n                return {\n                    id: item.id,\n                    day: item.days, // Combine all days into an array\n                    times: [{ startTime, endTime }] // Assuming you still need the times as well\n                };\n            });\n            setShowDays(showParsedData);\n            setDisabledDays(parsedData);\n            //setSelectedDays(workingHourData);\n\n        }\n    }, [isSuccess, workingHourData, refetch, isEditing]);\n\n    // Fetch available times (from 08:00 AM to end of the day with 60 min interval)\n    const getTimes = () => {\n        const startTime = moment('00:00', 'HH:mm');\n        const endTime = moment().endOf('day');\n        const interval = 60;\n        const _times: string[] = [];\n        let currentTime = moment(startTime);\n\n        while (currentTime.isBefore(endTime)) {\n            _times.push(currentTime.format('HH:mm'));\n            currentTime.add(interval, 'minutes');\n        }\n\n        setTimes(_times);\n    };\n    // Handle day selection (toggle on/off)\n    const handleDayClick = (day: string) => {\n        if (!disabledDays.some(disabled => disabled.day.includes(day))) {\n            if (!selectedDays.some(d => d.day === day)) {\n                setSelectedDays([...selectedDays, { day, times: [] }]);\n            } else {\n                const updatedDays = selectedDays.filter(d => d.day !== day);\n                setSelectedDays(updatedDays);\n            }\n        }\n    };\n\n    // Handle time saving (associate time slots with selected days)\n    const handleSaveTime = async () => {\n        const updatedDays = selectedDays.map(day => {\n            if (day.times.length === 0) {\n                return { ...day, times: [{ startTime, endTime }] };\n            }\n            return day;\n        });\n        setSelectedDays(updatedDays);\n\n        // Clear time selection for next\n        setStartTime(\"\");\n        setEndTime(\"\");\n\n        const workingHours = updatedDays.reduce((acc: any[], current) => {\n            const time = `${current.times[0].startTime}-${current.times[0].endTime}`;\n            const existing = acc.find(item => item.time[0] === time);\n\n            if (existing) {\n                existing.days.push(current.day);\n            } else {\n                acc.push({\n                    days: [current.day],\n                    time: [time],\n                });\n            }\n            return acc;\n        }, []);\n\n        if (isEditing) {\n\n            const data = {\n                id: isEditing,\n                working_hours: workingHours,\n            };\n            await updateWorkingHours(data).unwrap().then(response => console.log(response, 'Update SUCCESS')).catch(error => console.log(error, 'Error Response'));\n        } else {\n            const data = {\n                working_hours: workingHours,\n            };\n            await saveWorkingHours(data).unwrap().then(response => console.log(response, 'SUCCESS RESPONSE')).catch(error => console.log(error, 'ERROR RESPONSE'));\n        }\n\n        refetch();\n        setSelectedDays([]);\n        setIsEditing(null);\n    };\n\n    useEffect(() => {\n        getTimes();\n        refetch();\n    }, []);\n\n    const handleRemoveDays = (disabledDays: { day: string[] }[], editDays: string[]) => {\n        const updatedDisabledDays = disabledDays.map((item) => ({\n            day: item.day.filter((day) => !editDays.includes(day))\n        }));\n\n        const filteredDisabledDays = updatedDisabledDays.filter((item) => item.day.length > 0);\n\n        return filteredDisabledDays;\n    };\n\n    const handleEdit = async (item: EditDaySelection) => {\n        let editDays = item.day;\n        let times = item.times;\n        setStartTime(times[0].startTime);\n        setEndTime(times[0].endTime);\n        if (typeof editDays === 'string') {\n            editDays = editDays.split(',');\n        }\n\n        const updatedDays = editDays.map((day: string) => ({\n            day,\n            times: []\n        }));\n        setSelectedDays(updatedDays);\n\n        // Remove the selected item from the showDays list\n        const updatedShowDays = showDays.filter(showDay => showDay.id !== item.id);\n        setShowDays(updatedShowDays);\n\n        const result = handleRemoveDays(disabledDays, editDays);\n        setDisabledDays(result);\n\n        setIsEditing(item.id);\n    };\n\n    const handleDelete = async (id: number) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'This action will permanently Delete the day and working hours.',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, Delete it!',\n            cancelButtonText: 'Cancel',\n            backdrop: `\n          rgba(255, 255, 255, 0.5)\n          left top\n          no-repeat\n          filter: blur(5px);\n        `,\n            background: '#fff',\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                try {\n                    const data = {\n                        id: id,\n                    };\n                    const response = await deleteWorkingHours(data);\n                    if (\"error\" in response) {\n                        console.error(\"Error logging in:\", response.error);\n                    } else {\n                        Swal.fire({\n                            title: \"Deleted!\",\n                            text: \"The day and working hours deleted successfully\",\n                            icon: \"success\",\n                            timer: 3000,\n                            showConfirmButton: false,\n                            backdrop: `\n                    rgba(255, 255, 255, 0.5)\n                    left top\n                    no-repeat\n                    filter: blur(5px);\n                  `,\n                            background: '#fff',\n                        });\n                        if (refetch) {\n                            refetch();\n                        } else {\n                            console.warn(\"Refetch is null, cannot refetch data.\");\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Error archiving campaign:\", error);\n                }\n            }\n        });\n    }\n    return (\n        <div className=\"general-setting-text\">\n            <div className=\"mb-4\">\n                <h5 className=\"mb-4 d-block customHeading\">Set Working Hours</h5>\n                {daysOfWeek.map((day) => (\n                    <div\n                        className={`weeklyDiv ${selectedDays.some(d => d.day === day) ? 'active' : \"\"} ${disabledDays.some(disabled => disabled.day.includes(day)) ? 'disabled' : \"\"}`}\n                        key={day}\n                        onClick={() => handleDayClick(day)}\n                    >\n                        <span>{day}</span>\n                    </div>\n                ))}\n            </div>\n            {selectedDays.length > 0 && (\n                <div className=\"time-selection d-flex\">\n                    <div className=\"row w-100\">\n                        <div className=\"col-md-4 col-12\">\n                            <div className=\"action-box\">\n                                <label>Start Time:</label>\n                                <select\n                                    className=\"form-select\"\n                                    value={startTime}\n                                    onChange={(e) => {\n                                        setStartTime(e.target.value);\n                                        setEndTime(\"\");\n                                    }}\n                                >\n                                    <option value=\"\">Select Time</option>\n                                    {times.map((time) => (\n                                        <option key={time} value={time}>\n                                            {time}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 col-12\">\n                            <div className=\"action-box\">\n                                <label>End Time:</label>\n                                <select\n                                    className=\"form-select\"\n                                    value={endTime}\n                                    onChange={(e) => setEndTime(e.target.value)}\n                                    disabled={!startTime}\n                                >\n                                    <option value=\"\">Select Time</option>\n                                    {times\n                                        .filter((time) => startTime && moment(time, \"HH:mm\").isAfter(moment(startTime, \"HH:mm\")))\n                                        .map((time) => (\n                                            <option key={time} value={time}>\n                                                {time}\n                                            </option>\n                                        ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 col-12 px-2\">\n                            <div className=\"d-flex time-save-btn-div\">\n                                {startTime && endTime && (\n                                    <Button\n                                        onClick={handleSaveTime}\n                                        text=\"Save\"\n                                        icon={true}\n                                        theme=\"dark\"\n                                        className=\"working-hours\"\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            )}\n            <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12 px-0\">\n                    <div className=\"time-selection time-selection-block d-block mb-10\">\n                        <div className=\"working-hours-row row mx-0\">\n                            <div className=\"col-md-12 col-12\">\n                                <div className=\"table-workingHours\">\n                                    <table className=\"table\">\n                                        <tbody>\n                                            {showDays.map((item, index) => (\n                                                <tr key={index}>\n                                                    <td>\n                                                        {(Array.isArray(item.day) ? item.day.join(\", \") : item.day)}\n                                                    </td>\n                                                    <td className=\"text-center\">\n                                                        {item.times[0].startTime} - {item.times[0].endTime}\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"action-area\">\n                                                            <Button\n                                                                onClick={() => handleEdit(item)}\n                                                                text=\"\"\n                                                                icon={true}\n                                                                iconname={faEdit}\n                                                                theme=\"light\"\n                                                                className=\"time-save-btn\"\n                                                                disabled={isEditing !== null && isEditing !== item.id}\n                                                            />\n                                                            <Button\n                                                                onClick={() => handleDelete(item.id)}\n                                                                text=\"\"\n                                                                icon={true}\n                                                                iconname={faTrashAlt}\n                                                                theme=\"light\"\n                                                                className=\"time-save-btn\"\n                                                                disabled={isEditing !== null}\n                                                            />\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    );\n}\n","import { Heading } from \"../../../components/Heading/Heading\";\nimport { CallRates } from \"./CallRate\";\nimport { UnavailableDate } from \"./UnavailableDate\";\nimport { WorkingHour } from \"./WorkingHour\";\n\ntype DaysOfWeekMap = {\n    [key: number]: string;\n};\nexport function ExpertSettings() {\n\n\n    return (\n        <div className=\"col-md-12 col-12 py-2 General-Settings\">\n            <Heading tag=\"h3\">Expert</Heading>\n            <WorkingHour />\n            <UnavailableDate />\n            <CallRates />\n        </div>\n    );\n}\n","import { GeneralSettings } from \"./GeneralSettings\";\nimport { ExpertSettings } from \"./ExpertSettings\";\nimport { getUserData } from \"../../../utils/Utils\";\n\ninterface UserData {\n    Member_fullname: string;\n    Member_type: string;\n    Token: string;\n    members_profile_picture: string;\n    Member_id: string;\n    IsEmployer: string;\n    IsEmployee: string;\n    is_specialist: string;\n}\nexport function Settings() {\n\n    const userData: UserData | null = getUserData(\"userData\");\n    let is_specialist = \"\";\n    try {\n        if (userData !== null) {\n            is_specialist = userData.is_specialist;\n        } else {\n            console.error(\"User data not found in local storage\");\n        }\n    } catch (error) {\n        console.error(\"Error parsing user data:\", error);\n    }\n\n    return (\n        <div className=\"profile-page-content\">\n            <div className=\"container profile-div\">\n                <div style={{ maxWidth: \"700px\", margin: \"auto\", display: \"block\" }}>\n                    <GeneralSettings />\n                    {is_specialist === \"Y\" ? (\n                        <ExpertSettings />\n                    ) : \"\"}\n\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"../../components/Button/Button\";\nimport './Transaction.scss';\nimport { CDBCard, CDBCardBody, CDBDataTable, CDBContainer, CDBRow, CDBCol } from 'cdbreact';\nimport { useCreateStripeAccountMutation, useGetTransactionQuery, useRedeemAmountMutation } from \"./profileApiSlice\";\nimport { getUserData } from \"../../utils/Utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport DataTable from 'react-data-table-component';\n\ninterface TransactionData {\n    members_id: number;\n    amount_paid: string;\n    members_email: string;\n    members_fname: string;\n    members_lname: string;\n    payment_type: string;\n    transaction_type: string;\n    payment_date: string;\n    status: string;\n    from_currency: string;\n    to_currency: string;\n    stripe_url: string;\n    stripe_varify: boolean;\n    withdraw: string;\n    description: string;\n    transaction_id: string;\n    original_amount: string;\n    actual_amount: string;\n    reduced_amount: string;\n    converted_original_amount: string;\n    converted_reduced_amount: string;\n    converted_actual_amount: string;\n    connected_member: connected_member;\n    member: connected_member;\n    type: string;\n    rate: string;\n    connected_member_id: number | null;\n}\n\ninterface connected_member {\n    id: number;\n    members_fname: string;\n    members_lname: string;\n}\n\ninterface CurrencyAmounts {\n    [key: string]: number;\n}\n\ninterface CreateStripeResponse {\n    success: boolean;\n    account_link: string;\n    message: string;\n}\n\ninterface convertedAmount {\n    currency: string;\n    amount: GLfloat;\n    rate: string;\n    converted_amount: GLfloat;\n}\n\nexport const Transaction = () => {\n    const [totalRewards, setTotalRewards] = useState<number>(0);\n    const [availableRewards, setAvailableRewards] = useState<number>(0);\n    const [transactionDetails, setTransactionDetails] = useState<TransactionData[]>([]);\n    const [stripeVarify, setStripeVarify] = useState<boolean>(false);\n    const { data: transactionData, isLoading, isSuccess, refetch } = useGetTransactionQuery({});\n    const [totalEarned, setTotalEarned] = useState<GLfloat>(0);\n    const [escrowBalance, setEscrowBalance] = useState<GLfloat>(0);\n    const [redeemAmount, setRedeemAmount] = useState<GLfloat>(0);\n    const [stripeUrl, setStripeUrl] = useState('');\n    const [convertedAmount, setConvertedAmount] = useState<convertedAmount[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [expandedRows, setExpandedRows] = useState<string[]>([]);\n    const [currentPage, setCurrentPage] = useState(1); // Track current page\n\n    const [createStripe] = useCreateStripeAccountMutation({});\n\n    const userData = getUserData(\"userData\");\n    const navigate = useNavigate();\n    const currencySymbols: { [key: string]: string } = {\n        USD: \"$\",\n        EUR: \"€\",\n        GBP: \"£\",\n    };\n    let token = \"\";\n    let memberType = \"\";\n    let currencySymbol = \"GBP\";\n    try {\n        if (userData !== null) {\n            token = userData.Token;\n            memberType = userData.Member_type;\n            currencySymbol = userData.currency ? userData.currency : \"GBP\";\n        } else {\n            console.error(\"User data not found in local storage\");\n        }\n    } catch (error) {\n        console.error(\"Error parsing user data:\", error);\n    }\n\n    useEffect(() => {\n        refetch();\n    }, []);\n\n    useEffect(() => {\n        if (isSuccess && transactionData) {\n            setTransactionDetails(transactionData.data);\n            setEscrowBalance(transactionData.escrow_balance);\n            setRedeemAmount(transactionData.redeem_amount);\n            setTotalEarned(transactionData.total_earned);\n            setTotalRewards(transactionData.total_rewards);\n            setAvailableRewards(transactionData.available_rewards);\n            if (transactionData.converted_amount) {\n                setConvertedAmount(transactionData.converted_amount);\n            }\n            setStripeVarify(transactionData.stripe_verified);\n            setStripeUrl(transactionData.stripe_url);\n        }\n    }, [isSuccess, transactionData]);\n\n    const formatDate = (dateString: string): string => {\n        if (!dateString) {\n            return 'N/A';\n        }\n        const [year, month, day] = dateString.split('-');\n        return `${day}-${month}-${year}`;\n    };\n\n    const toggleRowExpansion = (transactionId: string) => {\n        setExpandedRows((prev) =>\n            prev.includes(transactionId)\n                ? prev.filter((id) => id !== transactionId)\n                : [...prev, transactionId]\n        );\n    };\n\n    const data = () => {\n        const rows = transactionDetails.flatMap((item: TransactionData) => {\n            const isExpanded = expandedRows.includes(item.transaction_id);\n            let classToShow = 'status-pending';\n            let addSymbol = '+';\n            if (item.transaction_type === \"Debit\") {\n                classToShow = 'status-completed';\n                addSymbol = '-';\n                if (item.status === 'Withdraw') {\n                    classToShow = 'status-pending';\n                    addSymbol = '+';\n                }\n            }\n            return [\n                {\n                    name: item.payment_date || \"N/A\",\n                    transaction: item.transaction_id,\n                    description: item.type,\n                    amount: (\n                        <span\n                            className={classToShow}\n                        >\n                            {addSymbol}{currencySymbols[currencySymbol]}{item.converted_actual_amount\n                                ? parseFloat(item.converted_actual_amount).toFixed(2)\n                                : \"0.00\"}\n                        </span>\n                    ),\n                    expand: (\n                        <button\n                            className=\"btn btn-light btn-sm\"\n                            onClick={() => toggleRowExpansion(item.transaction_id)}\n                        >\n                            {isExpanded ? <i className=\"fas fa-chevron-up\"></i> : <i className=\"fas fa-chevron-down\"></i>}\n                        </button>\n                    ),\n                },\n\n                ...(isExpanded\n                    ? [\n                        {\n                            name: \"\",\n                            transaction: \"\",\n                            description: (\n\n                                <div>\n                                    {\n                                        item.status === 'Completed' && item.type === 'Withdraw' ? (\n                                            <>\n                                                <p>\n                                                    Withdrawal of available to redeem amount :\n\n                                                </p>\n\n                                            </>\n                                        ) : ''\n                                    }\n\n                                    {\n                                        item.status === 'Completed' && item.type === 'Book A Call' ? (\n                                            <>\n                                                <p>\n                                                    Paid to {item.connected_member.members_fname} {item.connected_member.members_lname} for expert call :\n\n                                                </p>\n\n                                            </>\n                                        ) : ''\n                                    }\n                                    {\n                                        item.status === 'Withdraw' && item.type === 'Book A Call' ? (\n                                            <>\n                                                <p>\n                                                    Paid by {item.connected_member.members_fname} {item.connected_member.members_lname} for expert call :\n                                                    <span className=\"status-pending\">\n                                                        {'+'}{currencySymbols[item.from_currency]}{parseFloat(item.original_amount).toFixed(2)}\n                                                    </span>\n                                                </p>\n                                                <p>\n                                                    Fee for boat :\n                                                    <span className=\"status-completed\">\n                                                        {'-'}{currencySymbols[item.from_currency]}{parseFloat(item.reduced_amount).toFixed(2)}\n                                                    </span>\n                                                </p>\n                                                <p>\n                                                    Exchange Rate ($)\n                                                </p>\n                                                <p>\n                                                    Withdrawal request :\n                                                    <span className=\"status-completed\">\n                                                        {'-'}{currencySymbols[item.from_currency]}{parseFloat(item.actual_amount).toFixed(2)}\n                                                    </span>\n                                                </p>\n                                            </>\n                                        ) : ''\n                                    }\n\n\n                                    {\n                                        item.type === 'Refunded' ? (\n                                            <>\n                                                <p>\n                                                    Paid to {item.connected_member.members_fname} {item.connected_member.members_lname} for expert call :\n                                                    <span className=\"status-completed\">\n                                                        {'-'}{currencySymbols[item.from_currency]}{parseFloat(item.original_amount).toFixed(2)}\n                                                    </span>\n                                                </p>\n                                                <p>\n                                                    Fee for boat :\n                                                    <span className=\"status-pending\">\n                                                        {'+'}{currencySymbols[item.from_currency]}{parseFloat(item.reduced_amount).toFixed(2)}\n                                                    </span>\n                                                </p>\n                                                <p>\n                                                    Refund request :\n                                                    <span className=\"status-pending\">\n                                                        {'+'}{currencySymbols[item.from_currency]}{parseFloat(item.actual_amount).toFixed(2)}\n                                                    </span>\n                                                </p>\n                                            </>\n                                        ) : ''\n                                    }\n\n                                    {\n                                        item.type === 'Referral' ? (\n                                            <>\n                                                <p>\n                                                    Referred {item.connected_member.members_fname} {item.connected_member.members_lname} :\n                                                    <span className=\"status-pending\">{'('}{'+'}{currencySymbols[item.from_currency]}{parseFloat(item.actual_amount).toFixed(2)}{')'}</span>\n                                                </p>\n                                                <p> Exchange Rate :</p>\n                                            </>\n                                        ) : \"\"}\n                                    {item.type === 'Membership' ? (\n                                        <>\n                                            <p> Membership Fee:</p>\n                                            <p> Referral Discount {item.connected_member_id ? `(Referred By -  ${item.connected_member.members_fname} ${item.connected_member.members_lname})` : ''}:</p>\n                                            <p> Amount Paid:</p>\n                                        </>\n                                    ) : \"\"}\n                                </div >\n\n                            ),\n                            amount: (\n                                <div>\n                                    {\n                                        item.status === 'Completed' && item.type === 'Withdraw' ? (\n                                            <>\n                                                <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_original_amount).toFixed(2)}</p>\n                                            </>\n                                        ) : ''\n                                    }\n                                    {\n                                        item.status === 'Completed' && item.type === 'Book A Call' ? (\n                                            <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_original_amount).toFixed(2)}</p>\n                                        ) : ''\n                                    }\n\n                                    {\n                                        item.status === 'Withdraw' && item.type === 'Book A Call' ? (\n                                            <>\n                                                <p className=\"status-pending\">{'+'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_original_amount).toFixed(2)}</p>\n                                                <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_reduced_amount).toFixed(2)}</p>\n                                                <p className=\"status-pending\">{currencySymbols[currencySymbol]}{parseFloat(item.rate).toFixed(2)}</p>\n                                                <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_actual_amount).toFixed(2)}</p>\n                                            </>\n                                        ) : \"\"}\n                                    {\n                                        item.type === 'Refunded' ? (\n                                            <>\n                                                <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_original_amount).toFixed(2)}</p>\n                                                <p className=\"status-pending\">{'+'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_reduced_amount).toFixed(2)}</p>\n                                                <p className=\"status-pending\">{'+'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_actual_amount).toFixed(2)}</p>\n                                            </>\n                                        ) : \"\"}\n                                    {item.type === 'Referral' ? (\n                                        <>\n                                            <p className=\"status-pending\">{'+'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_original_amount).toFixed(2)}</p>\n                                            <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_reduced_amount).toFixed(2)}</p>\n                                            <p className=\"status-completed\">{currencySymbols[currencySymbol]}{parseFloat(item.rate).toFixed(2)}</p>\n                                            <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_actual_amount).toFixed(2)}</p>\n                                        </>\n                                    ) : \"\"}\n                                    {item.type === 'Membership' ? (\n                                        <>\n                                            <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_original_amount).toFixed(2)}</p>\n                                            <p className=\"status-pending\">{'+'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_reduced_amount).toFixed(2)}</p>\n                                            <p className=\"status-completed\">{'-'}{currencySymbols[currencySymbol]}{parseFloat(item.converted_actual_amount).toFixed(2)}</p>\n                                        </>\n                                    ) : \"\"}\n                                </div>\n                            ),\n                            expand: \"\",\n                        },\n                    ]\n                    : []),\n            ];\n        });\n\n        return {\n            columns: [\n                { name: \"Date\", selector: (row: { name: any; }) => row.name, width: \"150px\", sortable: false },\n                { name: \"Transaction\", selector: (row: { transaction: any; }) => row.transaction, width: \"150px\", sortable: false },\n                { name: \"Description\", selector: (row: { description: any; }) => row.description, width: \"300px\", sortable: false },\n                { name: \"Amount\", selector: (row: { amount: any; }) => row.amount, width: \"150px\", sortable: false },\n                { name: \"\", selector: (row: { expand: any; }) => row.expand, width: \"50px\", sortable: false },\n            ],\n            rows,\n        };\n    };\n\n    const handleFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const filterVal = event.target.value;\n        const filterdData = transactionData.data.filter((item: { type: string; }, index: any) => (\n            item.type?.toLowerCase() === filterVal.toLowerCase()\n        ));\n        if (filterVal === 'All') {\n            setTransactionDetails(transactionData.data);\n        } else {\n            setTransactionDetails(filterdData);\n        }\n    };\n\n    const handleSearchChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n        const searchQuery = event.target.value as string;\n        if (searchQuery !== '') {\n            const filterdData = transactionData.data.filter(\n                (item: { members_fname: string }) =>\n                    item.members_fname.toLowerCase().includes(searchQuery.toLowerCase())\n            );\n            setTransactionDetails(filterdData);\n        } else {\n            setTransactionDetails(transactionData.data);\n        }\n    };\n\n    const handleSubmit = async () => {\n        if (!stripeVarify && stripeUrl !== '') {\n            //console.log('test-----');\n        } else {\n            setLoading(true);\n            try {\n                const response: CreateStripeResponse = await createStripe({}).unwrap();\n                if (response.success && response.account_link) {\n                    setLoading(false);\n                    window.location.replace(response.account_link);\n                } else {\n                    console.error(\"Failed to create Stripe account:\", response.message);\n                }\n            } catch (error) {\n                console.error(\"Error fetching available jobs:\", error);\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    const [withdrawAmount] = useRedeemAmountMutation();\n    const handleRedeem = async () => {\n        if (redeemAmount > 25) {\n            setLoading(true);\n            try {\n                let formData = {\n                    withdraw_amount: redeemAmount,\n                    currency: currencySymbol\n                };\n                const response = await withdrawAmount(formData).unwrap();\n                if (response.status) {\n                    Swal.fire({\n                        title: \"Withdraw Success\",\n                        text: \"The amount has been withdrawn to your account\",\n                        icon: \"success\",\n                        showConfirmButton: true,\n                        backdrop: `\n                            rgba(255, 255, 255, 0.5)\n                            left top\n                            no-repeat\n                            filter: blur(5px);\n                        `,\n                        background: '#fff',\n                    });\n                    refetch();\n                }\n            } catch (error) {\n                console.error(\"Error fetching available jobs:\", error);\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            Swal.fire({\n                title: \"\",\n                text: \"You need a minimum amount of 25 to redeem\",\n                icon: \"warning\",\n                showConfirmButton: true,\n                backdrop: `\n                    rgba(255, 255, 255, 0.5)\n                    left top\n                    no-repeat\n                    filter: blur(5px);\n                `,\n                background: '#fff',\n            });\n        }\n    };\n\n    const handlePageChange = (page: number) => {\n        setCurrentPage(page); // Update current page\n    };\n\n    return (\n        <div className=\"transaction-contents\">\n            {loading ? (\n                <div className=\"page-loader\">\n                    <div className=\"page-innerLoader\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <img src={require(\"../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"container\">\n                    <div className=\"Transaction-details\">\n                        <div className=\"redeemcard\">\n                            <div className=\"card-content\">\n                                <div className=\"card-content-head\">\n                                    <div className=\"heading\">\n                                        <div className=\"content-head\">\n                                            <label className=\"title\">Escrow Balance</label>\n                                            <h3 className=\"customHeading text-start\">{currencySymbols[currencySymbol]}{escrowBalance}</h3>\n                                        </div>\n                                        <div className=\"content-head AvailabletoRedeem\">\n                                            <label className=\"title\">Available to Redeem</label>\n                                            <h3 className=\"customHeading text-start\">{currencySymbols[currencySymbol]}{redeemAmount}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"card-content-head total-earned\">\n                                    <div className=\"heading\">\n                                        <div className=\"content-head\">\n                                            <label className=\"title\">Total Earned</label>\n                                            <h3 className=\"customHeading text-start\">{currencySymbols[currencySymbol]}{totalEarned}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"redeem-option\">\n                                    {stripeVarify ? (\n                                        <Button\n                                            onClick={() => handleRedeem()}\n                                            text=\"Redeem Reward\"\n                                            icon={true}\n                                            theme=\"light\"\n                                            className=\"w-100\"\n                                        />\n                                    ) : (!stripeVarify && stripeUrl !== '') ? (\n                                        <Button\n                                            onClick={() => handleSubmit()}\n                                            text=\"Connect Stripe Account\"\n                                            icon={true}\n                                            theme=\"light\"\n                                            className=\"w-100\"\n                                        />\n                                    ) : (\n                                        <Button\n                                            onClick={() => handleSubmit()}\n                                            text=\"Connect Stripe Account\"\n                                            icon={true}\n                                            theme=\"light\"\n                                            className=\"w-100\"\n                                        />\n                                    )}\n                                </div>\n                                {convertedAmount.length > 0 && (\n                                    <div className=\"RedemptionRequirement\">\n                                        <h2 className=\"customHeading\">Your Earnings</h2>\n                                        <ul className=\"px-4 px-sm-0\">\n                                            {convertedAmount.map((item, index) => (\n                                                <div style={{ display: \"flex\", justifyContent: \"space-between\", color: \"white\" }}>\n                                                    <div className=\"col-4 p-1 currency-item\">{currencySymbols[item.currency]}{item.amount}</div>\n                                                    <div className=\"col-4 text-center currency-rate\">{item.rate}</div>\n                                                    <div className=\"col-4 text-end currencySymbol\">{currencySymbols[currencySymbol]}{item.converted_amount}</div>\n                                                </div>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                )}\n                                <div className=\"divider\"></div>\n                                <div className=\"RedemptionRequirement\">\n                                    <h2 className=\"customHeading\">Withdrawal Requirement</h2>\n                                    <p>A minimum of {currencySymbols[currencySymbol]}25 is required to withdraw your funds.</p>\n                                </div>\n                                <div className=\"divider\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"history-status\">\n                        <h2 className=\"customHeading\">Transaction History</h2>\n                    </div>\n                    <div className=\"transactionHistory-Table\">\n                        <div className=\"card\">\n                            <div className=\"select_dropDown\">\n                                <div className=\"selectDiv\">\n                                    <select className=\"form-select\" onChange={handleFilter}>\n                                        <option value=\"All\">All</option>\n                                        <option value=\"Book A Call\">Book A Call</option>\n                                        <option value=\"Membership\">Membership</option>\n                                        <option value=\"Referral\">Referral</option>\n                                        <option value=\"Refunded\">Refund</option>\n                                    </select>\n                                </div>\n                                <div className=\"searchDiv\">\n                                    <input\n                                        placeholder=\"Search\"\n                                        type=\"text\"\n                                        name=\"search\"\n                                        className=\"form-control\"\n                                        onChange={handleSearchChange}\n                                    />\n                                </div>\n                            </div>\n                            <DataTable\n                                columns={data().columns}\n                                data={data().rows}\n                                pagination\n                                paginationServer\n                                paginationTotalRows={transactionDetails.length}\n                                onChangePage={handlePageChange} // This will work in react-data-table-component\n                            />\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Transaction;","import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"../../components/Button/Button\";\nimport ConfirmModal from \"../../components/ConfirmModal/ConfirmModal\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../utils/GlobalModal\";\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport \"./MyReferrals.scss\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport { CDBCard, CDBCardBody, CDBDataTable, CDBContainer, CDBRow, CDBCol } from 'cdbreact';\nimport { useProfileMutation, useReferralListQuery, useCreateStripeAccountMutation, useRedeemAmountMutation } from \"./profileApiSlice\";\nimport { ProfileData, initialProfileData } from \"../../types/ProfileData\";\nimport { getUserData } from \"../../utils/Utils\";\nimport { QRCodeSVG } from \"qrcode.react\";\nimport Swal from \"sweetalert2\";\ninterface UserData {\n    Member_fullname: string;\n    Member_type: string;\n    Token: string;\n    members_profile_picture: string;\n    Member_id: string;\n    IsEmployer: string;\n    IsEmployee: string;\n    is_specialist: string;\n}\ninterface ReferralData {\n    id: number | null;\n    amount: string;\n    members_email: string;\n    members_fname: string;\n    members_lname: string;\n    members_type: string;\n    referred_at: string;\n    status: string;\n    currency: string;\n    stripe_url: string;\n    stripe_varify: boolean;\n}\n\ninterface CreateStripeResponse {\n    success: boolean;\n    account_link: string;\n    message: string;\n}\nexport const MyReferrals = () => {\n    const { data: referalData, error, isLoading, isSuccess, refetch } = useReferralListQuery({});\n\n    const [buttonCopied, setbuttonCopied] = useState<\"dark\" | \"light\" | \"grey\">('light');\n    const [urlCopied, seturlCopied] = useState<\"dark\" | \"light\" | \"grey\">('light');\n    const [buttonDisable, setbuttonDisable] = useState<boolean>(false);\n    const [urlDisable, seturlDisable] = useState<boolean>(false);\n    const userData = getUserData(\"userData\");\n    const [createStripe] = useCreateStripeAccountMutation({});\n    const [referralDetails, setReferralDetails] = useState<ReferralData[]>([]);\n    const [totalRewards, setTotalRewards] = useState<number>(0);\n    const [availableRewards, setAvailableRewards] = useState<number>(0);\n    const [referralBonus, setReferralBonus] = useState<number>(0);\n    const [referral_code, setReferral_code] = useState<string>('');\n    const [stripeVarify, setStripeVarify] = useState<boolean>(false);\n    const [stripeUrl, setStripeUrl] = useState('');\n    const currencySymbols: { [key: string]: string } = {\n        USD: \"$\",\n        EUR: \"€\",\n        GBP: \"£\",\n    };\n    let token = \"\";\n    let memberType = \"\";\n    let currencySymbol = \"GBP\";\n    try {\n        if (userData !== null) {\n            token = userData.Token;\n            memberType = userData.Member_type;\n            currencySymbol = userData.currency ? userData.currency : \"GBP\";\n\n        } else {\n            console.error(\"User data not found in local storage\");\n        }\n    } catch (error) {\n        console.error(\"Error parsing user data:\", error);\n    }\n    useEffect(() => {\n        refetch();\n    }, [])\n\n    useEffect(() => {\n        if (isSuccess && referalData) {\n            setReferralDetails(referalData.data);\n            setTotalRewards(referalData.total_rewards);\n            setAvailableRewards(referalData.available_rewards);\n            setReferralBonus(parseInt(referalData.referral_bonus));\n            setReferral_code(referalData.referral_code);\n            setStripeVarify(referalData.stripe_varify);\n            setStripeUrl(referalData.stripe_url);\n        }\n\n    }, [isSuccess, referalData]);\n\n    const handleCopyClick = (couponCode: string | undefined, from: string) => {\n        if (!couponCode) {\n            console.error(\"Coupon code is empty\");\n            return;\n        }\n        if (navigator.clipboard && navigator.clipboard.writeText) {\n            navigator.clipboard.writeText(couponCode)\n                .then(() => {\n                    if (from === 'url') {\n                        seturlCopied('grey');\n                        seturlDisable(true);\n                        setbuttonCopied('light');\n                        setbuttonDisable(false);\n                    } else {\n                        setbuttonCopied('grey');\n                        setbuttonDisable(true);\n                        seturlCopied('light');\n                        seturlDisable(false);\n                    }\n\n                })\n                .catch((error) => {\n                    console.error(\"Failed to copy text to clipboard:\", error);\n                });\n        } else {\n            console.error(\"Clipboard API not available\");\n            fallbackCopyTextToClipboard(couponCode, from);\n        }\n    };\n    const fallbackCopyTextToClipboard = (text: string, from: string) => {\n        const textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n        textArea.style.position = \"fixed\";\n        textArea.style.top = \"0\";\n        textArea.style.left = \"0\";\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        try {\n            document.execCommand(\"copy\");\n            if (from === 'url') {\n                seturlCopied('grey');\n                seturlDisable(true);\n                setbuttonCopied('light');\n                setbuttonDisable(false);\n            } else {\n                setbuttonCopied('grey');\n                setbuttonDisable(true);\n                seturlCopied('light');\n                seturlDisable(false);\n            }\n        } catch (err) {\n            console.error(\"Fallback: Oops, unable to copy\", err);\n        }\n        document.body.removeChild(textArea);\n    };\n\n    const handleSubmit = async () => {\n        if (!stripeVarify && stripeUrl !== '') {\n            //console.log('test-----');\n\n        } else {\n            const response: CreateStripeResponse = await createStripe({}).unwrap();\n            if (response.success && response.account_link) {\n                window.location.replace(response.account_link);\n            } else {\n                console.error(\"Failed to create Stripe account:\", response.message);\n            }\n        }\n\n    };\n\n    const [redeemAmount] = useRedeemAmountMutation();\n    const handleRedeem = async () => {\n        if (availableRewards > 25) {\n            let formData = {\n                withdraw_amount: availableRewards,\n                currency: currencySymbol\n            }\n            const response = await redeemAmount(formData).unwrap();\n            if (response.success) {\n                //console.log(response.success);\n            }\n        } else {\n            Swal.fire({\n                title: \"\",\n                text: \"You need minmum amount of 25 to redeem\",\n                icon: \"warning\",\n                showConfirmButton: true,\n                backdrop: `\n                rgba(255, 255, 255, 0.5)\n                left top\n                no-repeat\n                filter: blur(5px);\n              `,\n                background: '#fff',\n            });\n        }\n\n    }\n\n    const data = () => {\n        return {\n            columns: [\n                {\n                    label: 'Date',\n                    field: 'name',\n                    width: 150,\n                    attributes: {\n                        'aria-controls': 'DataTable',\n                        'aria-label': 'Name',\n                    },\n                },\n                {\n                    label: 'Referral',\n                    field: 'position',\n                    width: 270,\n                },\n                {\n                    label: 'Status',\n                    field: 'Status',\n                    sort: 'asc',\n                    width: 100,\n                },\n            ],\n            rows: referralDetails.map((item: ReferralData) => ({\n                name: item.referred_at || 'N/A',\n                position: item.members_email || 'N/A',\n                Status: (\n                    <span className={item.status === 'P' ? \"status-pending\" : \"status-completed\"}>\n                        {currencySymbols[item.currency]}{item.amount ? parseFloat(item.amount).toFixed(2) : '0.00'}\n                        <span>{item.status === 'P' ? 'Pending' : 'Earned'}</span>\n                    </span>\n                ),\n            })),\n        };\n    };\n\n\n    return (\n        <div className=\"MyRefferals-page\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    {/* <div className=\"col-md-6 col-sm-12\">\n                        <div className=\"card-content\">\n                            <div className=\"card-content-head\">\n                                <div className=\"heading\">\n                                    <div className=\"content-head\">\n                                        <label className=\"title\">Total Rewards</label>\n                                        <h3 className=\"customHeading text-end\">{currencySymbols[currencySymbol]}{totalRewards}</h3>\n                                    </div>\n                                    <div className=\"content-head AvailabletoRedeem\">\n                                        <label className=\"title\">Available to Redeem</label>\n                                        <h3 className=\"customHeading text-end\">{currencySymbols[currencySymbol]}{availableRewards}</h3>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"redeem-option\">\n                                {stripeVarify ? (\n                                    <Button\n                                        onClick={() => handleRedeem()}\n                                        text=\"Redeem Reward\"\n                                        icon={true}\n                                        theme=\"light\"\n                                        className=\"w-100\"\n                                    />\n                                ) : (!stripeVarify && stripeUrl !== '') ? (\n                                    < Button\n                                        onClick={() => handleSubmit()}\n                                        text=\"Connect Stripe Account\"\n                                        icon={true}\n                                        theme=\"light\"\n                                        className=\"w-100\"\n                                    />\n                                ) : (\n                                    <Button\n                                        onClick={() => handleSubmit()}\n                                        text=\"Connect Stripe Account\"\n                                        icon={true}\n                                        theme=\"light\"\n                                        className=\"w-100\"\n                                    />\n                                )}\n\n                            </div>\n                            <div className=\"RedemptionRequirement\">\n                                <h2 className=\"customHeading\">Redemption Requirement</h2>\n                                <p>A minimum of {currencySymbols[currencySymbol]}25 is required to redeem your funds.</p>\n                            </div>\n                            <div className=\"divider\"></div>\n                        </div>\n                    </div> */}\n                    <div className=\"col-md-12 col-sm-12\">\n                        <div className=\"card-content url-card\">\n                            <div className=\"card-content-head\">\n                                <div className=\"ReferralCode-options pb-0\">\n                                    <label className=\"labelhead\">Referral Code</label>\n                                    <div className=\"ReferralCode-text\">\n                                        {memberType === 'M' ? (\n                                            <>\n                                                <div className=\"ReferralCode\">\n                                                    <span>{referral_code}</span>\n                                                </div>\n                                                <div className=\"copy-code\">\n                                                    <Button\n                                                        onClick={() => handleCopyClick(referral_code, 'code')}\n                                                        text={\"Copy Code\"}\n                                                        icon={true}\n                                                        iconname={faCopy}\n                                                        className=\"copycode\"\n                                                        theme={buttonCopied}\n                                                        disabled={buttonDisable}\n                                                    />\n                                                </div>\n                                            </>\n                                        ) : \"\"}\n                                    </div>\n                                </div>\n                                <div className=\"ReferralCode-options\">\n                                    <label className=\"labelhead\">Referral Url</label>\n\n                                    <div className=\"ReferralCode-text\">\n                                        {memberType === 'M' ? (\n                                            <>\n                                                <div className=\"ReferralCode\">\n                                                    <span>{`${window.location.origin}/joinmembership/${referral_code}`}</span>\n                                                </div>\n                                                <div className=\"copy-code\">\n                                                    <Button\n                                                        onClick={() => handleCopyClick(`${window.location.origin}/joinmembership/${referral_code}`, 'url')}\n                                                        text={\"Copy Code\"}\n                                                        icon={true}\n                                                        className=\"copycode\"\n                                                        iconname={faCopy}\n                                                        theme={urlCopied}\n                                                        disabled={urlDisable}\n                                                    />\n                                                </div>\n                                            </>\n                                        ) : \"\"}\n                                    </div>\n\n                                </div>\n                                <div className=\"divider-green\"></div>\n                                <div className=\"RedemptionRequirement d-flex align-items-center\">\n                                    {memberType === 'M' ? (\n                                        <div className=\"qrcode\">\n                                            <QRCodeSVG value={`${window.location.origin}/joinmembership/${referral_code}`} />\n                                        </div>\n                                    ) : \"\"}\n                                    <div className=\"d-block qr-codetext\">\n                                        <h2 className=\"customHeading d-block\">Refer friends & earn up to {referralBonus}%</h2>\n                                        <p>Receive {referralBonus}% wish cash for each referral after their Joining</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {referralDetails && referralDetails.length > 0 ? (\n                        <div className=\"col-md-12 col-sm-12\">\n                            <div className=\"referral-table\">\n                                <div className=\"table-heading\">\n                                    <div className=\"Referral-table\">\n                                        <CDBContainer>\n                                            <h2 className=\"Referral\">Referral Status</h2>\n                                            <CDBRow>\n                                                <CDBCol md=\"12\" className=\"table-content\">\n                                                    <CDBCard>\n                                                        <CDBCardBody>\n                                                            <CDBDataTable\n                                                                striped\n                                                                bordered\n                                                                hover\n                                                                entriesOptions={[5, 20, 25]}\n                                                                entries={5}\n                                                                pagesAmount={4}\n                                                                data={data()}\n                                                                materialSearch={false}\n                                                                responsive\n                                                                searching={false}\n                                                            />\n                                                        </CDBCardBody>\n                                                    </CDBCard>\n                                                </CDBCol>\n                                            </CDBRow>\n                                        </CDBContainer>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <div style={{ marginBottom: \"20px\" }}></div>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyReferrals;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport '../../features/MemberSignup/MembershipSetup.scss';\nimport { useNavigate } from \"react-router-dom\";\nimport { MemebershipProps } from \"../../types\";\nimport { useGetUnsuscribePlanMutation } from \"./profileApiSlice\";\nimport { getUserData, setUserData } from \"../../utils/Utils\";\nimport Swal from \"sweetalert2\";\nimport moment from \"moment\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../utils/GlobalModal\";\nimport { useGetMemberCardDetailsQuery } from \"../Specialist/SpecialistApiSlice\";\n\ninterface SubscriptionProps {\n    heading: string;\n    membershipExpire?: string;\n    keyFeatures: string[];\n    membershipFee?: number;\n    yearlyFee?: number;\n    subscriptionPlan?: string;\n    memberType: string;\n    referral_code?: string;\n    discountAmount?: string;\n}\n\nexport const Subscription: React.FC<SubscriptionProps> = ({\n    referral_code,\n    heading,\n    membershipExpire,\n    keyFeatures,\n    membershipFee,\n    yearlyFee,\n    subscriptionPlan,\n    memberType,\n    discountAmount,\n}) => {\n    const navigate = useNavigate();\n    let Fee = 0;\n\n    if (subscriptionPlan === 'Annual') {\n        if (yearlyFee) Fee = yearlyFee;\n    } else {\n        if (membershipFee) Fee = membershipFee;\n    }\n\n    let showFee: string = String(Fee);\n    if (discountAmount) {\n        showFee = discountAmount;\n    }\n    const currencySymbols: { [key: string]: string } = {\n        USD: \"$\",\n        EUR: \"€\",\n        GBP: \"£\",\n    };\n    const [unSubscribePlan] = useGetUnsuscribePlanMutation();\n    const [showButton, setShowButton] = useState<boolean>(true);\n    const userData = getUserData(\"userData\");\n    let currencySymbol = \"GBP\";\n    let token = \"\";\n\n    if (userData !== null) {\n        token = userData.Token;\n        currencySymbol = userData.currency ? userData.currency : \"GBP\";\n\n    } else {\n        console.error(\"User data not found in local storage\");\n    }\n\n    useEffect(() => {\n        if (userData?.subscription_status === 'I') {\n            setShowButton(false);\n        }\n    }, [userData]);\n\n    const handleClick = () => {\n        if (memberType !== 'M') {\n            navigate(`/member-signup`, {\n                state: {\n                    referral_code: referral_code,\n                },\n            });\n        }\n    };\n\n    const handleCancelSubscription = async () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'This action will cancel your subscription.',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, cancel it!',\n            cancelButtonText: 'Cancel',\n            backdrop: `\n                rgba(255, 255, 255, 0.5)\n                left top\n                no-repeat\n                filter: blur(5px);\n            `,\n            background: '#fff',\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                const response = await unSubscribePlan(token);\n                if (\"error\" in response) {\n                    console.error(\"Error logging in:\", response.error);\n                } else {\n                    Swal.fire({\n                        title: \"Subscription Cancelled!\",\n                        text: `You can have the privileges till the subscription end date`,\n                        icon: \"success\",\n                        timer: 3000,\n                        showConfirmButton: false,\n                        backdrop: `\n                            rgba(255, 255, 255, 0.5)\n                            left top\n                            no-repeat\n                            filter: blur(5px);\n                        `,\n                        background: '#fff',\n                    });\n                    setShowButton(false);\n                    if (userData != null) {\n                        userData.subscription_status = 'I';\n                        setUserData(userData);\n                    }\n                }\n            }\n        });\n    };\n\n    const { data: cardDetails, isSuccess, isLoading: cardLoading, refetch } = useGetMemberCardDetailsQuery({});\n    useEffect(() => {\n        refetch();\n    }, [])\n    const [cardLast, setCardLast] = useState<string>('0');\n    useEffect(() => {\n        if (isSuccess && cardDetails) {\n            setCardLast(cardDetails.last_4);\n        }\n    }, [cardDetails, isSuccess])\n\n    const { hideModal, store } = useGlobalModalContext();\n    const { showModal } = useGlobalModalContext();\n    const handleChangeCard = async () => {\n        showModal(MODAL_TYPES.PAYMENT_MODAL, {\n            currencySymbol: currencySymbols[currencySymbol],\n            amount: 0,\n            onClose: () => {\n                refetch(); // Trigger refetch when the modal is closed\n            }\n        });\n    }\n\n    return (\n        <div className=\"subsscription-tabcondition\">\n            <div className=\"tabcondition\">\n                <h2 className=\"customHeading\">Your current Plan</h2>\n            </div>\n            {memberType !== \"M\" ? (\n                <div className={`Membership-cardtheme full-membershipcard`}>\n                    <div className=\"card-themeheader\"></div>\n                    <div className=\"card-content\">\n                        <div className=\"card-heading\">\n                            <h3 className=\"customHeading\">{heading}</h3>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"btn-groups\">\n                                <Button\n                                    onClick={handleClick}\n                                    text=\"Upgrade Membership\"\n                                    icon={true}\n                                    theme=\"light\"\n                                    className=\"w-100\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"full-membership\">\n                    <div className={`Membership-cardtheme free-membershipcard`}>\n                        <div className=\"card-themeheader\"></div>\n                        <div className=\"card-content\">\n                            <div className=\"card-heading\">\n                                <h3 className=\"customHeading\">full membership</h3>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"content\">\n                                    <div className=\"card-text\">\n                                        <span>Current Status</span>\n                                    </div>\n                                    <div className=\"card-text\">\n                                        <span className=\"active\">Active</span>\n                                    </div>\n                                </div>\n                                <div className=\"content\">\n                                    <div className=\"card-text\">\n                                        <span>Plan expires on</span>\n                                    </div>\n                                    <div className=\"card-text\">\n                                        <span>{membershipExpire ? moment(membershipExpire).format('DD MMM YYYY') : ''}</span>\n                                    </div>\n                                </div>\n                                <div className=\"amount-details\">\n                                    <div className=\"fullmembership-content\">\n                                        {String(Fee) !== String(showFee) ? (\n                                            <>\n                                                <h4 className=\"customHeading discountAmnt strike-through\">\n                                                    {currencySymbols[currencySymbol]}{Fee}\n                                                </h4>\n                                                <h4 className=\"customHeading\">\n                                                    {currencySymbols[currencySymbol]}{showFee}\n                                                </h4>\n                                            </>\n                                        ) : (\n                                            <h4 className=\"customHeading\">\n                                                {currencySymbols[currencySymbol]}{showFee}\n                                            </h4>\n                                        )}\n                                    </div>\n                                    <div className=\"cancel-time\">\n                                        <span>{subscriptionPlan ? subscriptionPlan : ''}</span>\n                                    </div>\n                                </div>\n                                <div className=\"card-text\">\n                                    <div className=\"content\">\n                                        <div className=\"card-text\">\n                                            <span>Saved Card</span>\n                                        </div>\n                                        <div className=\"card-text\">\n                                            <span style={{ float: \"left\", fontSize: \"25px\", marginTop: \"6px\" }}>**** **** **** </span>&nbsp;<span> {cardLast}</span>\n                                        </div>\n                                    </div>\n                                    <p className=\"row  ChangeCard justify-content-center active\" style={{ cursor: \"pointer\", color: \"#64F259\", textDecorationLine: \"underline\" }} onClick={handleChangeCard}>\n                                        Change Card\n                                    </p>\n                                </div>\n                                {showButton && (\n                                    <div className=\"amount-details\">\n                                        <Button\n                                            onClick={handleCancelSubscription}\n                                            text=\"Cancel Subscription\"\n                                            icon={true}\n                                            theme=\"light\"\n                                            className=\"w-100 book-call\"\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Subscription;\n","import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { Hero } from \"../../components/Hero/Hero\";\nimport { Heading } from \"../../components/Heading/Heading\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport \"./Components/Profile.scss\";\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { EditProfile } from \"./Components/EditProfile\";\nimport { useProfileMutation, useStatusUpdateMutation } from \"./profileApiSlice\";\nimport { getUserData, setUserData } from \"../../utils/Utils\";\nimport { ProfileData, initialProfileData } from \"../../types/ProfileData\";\nimport ConfirmModal from \"../../components/ConfirmModal/ConfirmModal\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../utils/GlobalModal\";\nimport { Button } from \"../../components/Button/Button\";\nimport { MyBookings } from \"./Components/MyBookings\";\nimport { Settings } from \"./Components/Settings\";\nimport Transaction from \"./Transaction\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { MyReferrals } from \"./MyReferrals\";\nimport Subscription from \"./Subscription\";\nimport { useMembershipFeeQuery } from \"../Login/authApiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\ninterface UserData {\n  Member_fullname: string;\n  Member_type: string;\n  Token: string;\n  members_profile_picture: string;\n  Member_id: string;\n  IsEmployer: string;\n  IsEmployee: string;\n  is_specialist: string;\n  currency?: string;\n}\n\nfunction Profile() {\n  const [statusUpdateMutation] = useStatusUpdateMutation();\n  const [memberShipFee, setMemberShipFee] = useState(0);\n  const [yearlyFee, setYearlyFee] = useState(0);\n  const getMemberShipFee = useMembershipFeeQuery({});\n  const location = useLocation();\n  const {\n    mainTab = '',\n    tabActive = '',\n  } = location.state || {};\n  const userData: UserData | null = getUserData(\"userData\");\n  useEffect(() => {\n    if (userData?.currency === 'USD') {\n      setMemberShipFee(getMemberShipFee?.data?.data.monthly_membership_fee_dollar);\n      setYearlyFee(getMemberShipFee?.data?.data.full_membership_fee_dollar);\n    } else if (userData?.currency === 'EUR') {\n      setMemberShipFee(getMemberShipFee?.data?.data.monthly_membership_fee_euro);\n      setYearlyFee(getMemberShipFee?.data?.data.full_membership_fee_euro);\n    } else {\n      setMemberShipFee(getMemberShipFee?.data?.data.monthly_membership_fee);\n      setYearlyFee(getMemberShipFee?.data?.data.full_membership_fee);\n    }\n  }, [getMemberShipFee?.data?.data])\n  const handleSwitchToggle = async (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n    let status = \"\";\n    if (checked) {\n      status = \"A\";\n    } else {\n      status = \"I\";\n    }\n    setProfileData((prevData) => ({\n      ...prevData,\n      displayStatus: {\n        ...prevData.displayStatus,\n        [name]: status,\n      },\n    }));\n\n    const updateData = {\n      field_name: name,\n      field_status: status,\n    };\n    const userData = await statusUpdateMutation(updateData);\n    if (\"error\" in userData) {\n      console.error(\"Error logging in:\", userData.error);\n    } else {\n      // console.log(userData.data.success, \"user\");\n      fetchData();\n    }\n  };\n\n  const { showModal } = useGlobalModalContext();\n\n  const [activeTab, setActiveTab] = useState(\"MyProfile\");\n  const handleTabClick = (tabName: string) => {\n    setActiveTab(tabName);\n    //console.log(tabName);\n  };\n  useEffect(() => {\n    // Check if state contains mainTab or tabActive\n    if (location.state && location.state.mainTab) {\n      setActiveTab(location.state.mainTab);\n    }\n  }, [location.state])\n  const handleSubmit = () => {\n    console.log(\"\");\n  }\n  const [modal, setModal] = useState(false);\n  const toggle = () => {\n    setModal(!modal);\n    fetchData();\n  };\n\n  const [profileMutation] = useProfileMutation();\n  const [profileData, setProfileData] =\n    useState<ProfileData>(initialProfileData);\n  let token = \"\";\n  let is_specialist = \"\";\n  let memberType = \"\";\n  try {\n    if (userData !== null) {\n      token = userData.Token;\n      is_specialist = userData.is_specialist;\n      memberType = userData.Member_type;\n    } else {\n      console.error(\"User data not found in local storage\");\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n  useEffect(() => {\n    // console.log(token, \"token\");\n\n    if (token) fetchData();\n  }, []);\n\n  useEffect(() => {\n    // console.log(token, \"token\");\n\n    if (mainTab) {\n      setActiveTab(mainTab);\n    }\n  }, [mainTab]);\n\n  const fetchData = async () => {\n    try {\n      const response = await profileMutation(token);\n      if (\"error\" in response) {\n        console.error(\"Error logging in:\", response.error);\n      } else {\n        setProfileData(response.data.data);\n        if (userData != null) {\n          userData.members_profile_picture =\n            response.data.data.members_profile_picture;\n          setUserData(userData);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      // Handle error (e.g., display error message to the user)\n    }\n  };\n  // console.log(profileData.members_dob, \"profileData\");\n  let originalDate = \"0000-00-00\";\n  if (profileData.members_dob) originalDate = profileData.members_dob;\n  const [year, month, day] = originalDate.split(\"-\");\n  const dateObject = new Date(`${year}-${month}-${day}`);\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const dateOfBirth = `${dateObject.getDate()} ${months[dateObject.getMonth()]\n    } ${dateObject.getFullYear()}`;\n\n  const [buttonCopied, setbuttonCopied] = useState<\"dark\" | \"light\" | \"grey\">('light');\n  const [urlCopied, seturlCopied] = useState<\"dark\" | \"light\" | \"grey\">('light');\n  const [buttonDisable, setbuttonDisable] = useState<boolean>(false);\n  const [urlDisable, seturlDisable] = useState<boolean>(false);\n  const handleCopyClick = (couponCode: string | undefined, from: string) => {\n    if (!couponCode) {\n      console.error(\"Coupon code is empty\");\n      return;\n    }\n\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n      navigator.clipboard.writeText(couponCode)\n        .then(() => {\n          if (from === 'url') {\n            seturlCopied('grey');\n            seturlDisable(true);\n            setbuttonCopied('light');\n            setbuttonDisable(false);\n          } else {\n            setbuttonCopied('grey');\n            setbuttonDisable(true);\n            seturlCopied('light');\n            seturlDisable(false);\n          }\n\n        })\n        .catch((error) => {\n          console.error(\"Failed to copy text to clipboard:\", error);\n        });\n    } else {\n      console.error(\"Clipboard API not available\");\n      fallbackCopyTextToClipboard(couponCode, from);\n    }\n  };\n\n  const fallbackCopyTextToClipboard = (text: string, from: string) => {\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.position = \"fixed\";\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n      document.execCommand(\"copy\");\n      if (from === 'url') {\n        seturlCopied('grey');\n        seturlDisable(true);\n        setbuttonCopied('light');\n        setbuttonDisable(false);\n      } else {\n        setbuttonCopied('grey');\n        setbuttonDisable(true);\n        seturlCopied('light');\n        seturlDisable(false);\n      }\n    } catch (err) {\n      console.error(\"Fallback: Oops, unable to copy\", err);\n    }\n    document.body.removeChild(textArea);\n  };\n  const settings = {\n    dots: false,\n    infinite: false,\n    slidesToShow: 6,\n    slidesToScroll: 1,\n    centerPadding: \"10px\",\n    variableWidth: false,\n    responsive: [\n      {\n        breakpoint: 768,\n        settings: {\n          dots: false,\n          infinite: false,\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          centerPadding: \"10px\",\n          variableWidth: false,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n  const fullFeatures = [\n    'Full access to the entire site and content',\n    'Discounts with Selected Partners',\n    'Book calls with boating experts',\n    'Browse and accept jobs on CRUZ',\n  ];\n  const freeFeatures = [\n    'Free for Life',\n    'Access to Weather Reporting',\n    'Access to Club House (Chat)',\n    'Monthly Email Newsletter',\n    'Access to selected online events',\n    'Post Job Opportunities within CRUZ',\n  ];\n\n  const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\n  const downloadPdf = async () => {\n    try {\n      axios.get(`${baseUrl}/member/generatePdf`, {\n        responseType: 'blob', // Specify that the response should be a Blob\n        headers: {\n          \"X-API-KEY\": \"493d25ea-24d9-4662-ae7b-c96255ecbbe6\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      })\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', 'membershipcard.pdf');\n          document.body.appendChild(link);\n          link.click();\n          link.remove();\n        })\n        .catch((error) => {\n          console.error('Error downloading file:', error);\n        });\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"profile-page-content\">\n        <Hero\n          source={require(\"../../assets/images/profile/banner-1.jpeg\")}\n          title={profileData.members_fname + \" \" + profileData.members_lname}\n        >\n          <div className=\"inner-child\" style={{ textAlign: \"center\" }}>\n            <div className=\"row w-100\"></div>\n          </div>\n\n          <div className=\"tab-menu tabmenu-slider\">\n            <ul className=\"tab-menu-ul d-block\">\n              <Slider {...settings}>\n\n                <div className=\"tab-menu-item\">\n                  <a\n                    className={activeTab === \"MyProfile\" ? \"active\" : \"\"}\n                    onClick={() => handleTabClick(\"MyProfile\")}\n                  >\n                    My Profile\n                  </a>\n                </div>\n                <div className=\"tab-menu-item\">\n                  <a\n                    className={activeTab === \"MyBookings\" ? \"active\" : \"\"}\n                    onClick={() => handleTabClick(\"MyBookings\")}\n                  >\n                    My Bookings\n                    {/* {is_specialist === \"Y\" ? \"Bookings\" : \"My Bookings\"} */}\n                  </a>\n                </div>\n                {memberType === 'M' ? (\n                  <div className=\"tab-menu-item\">\n                    <a\n                      className={activeTab === \"MyRefferals\" ? \"active\" : \"\"}\n                      onClick={() => handleTabClick(\"MyRefferals\")}\n                    >\n                      My Referral\n                    </a>\n                  </div>\n                ) : \"\"}\n\n\n                <div className=\"tab-menu-item\">\n                  <a\n                    className={activeTab === \"Settings\" ? \"active\" : \"\"}\n                    onClick={() => handleTabClick(\"Settings\")}\n                  >\n                    Settings\n                  </a>\n                </div>\n\n                <div className=\"tab-menu-item\">\n                  <a\n                    className={activeTab === \"Subscription\" ? \"active\" : \"\"}\n                    onClick={() => handleTabClick(\"Subscription\")}\n                  >\n                    Subscription\n                  </a>\n                </div>\n                <div className=\"tab-menu-item\">\n                  <a\n                    className={activeTab === \"Transaction\" ? \"active\" : \"\"}\n                    onClick={() => handleTabClick(\"Transaction\")}\n                  >\n                    Payments\n                  </a>\n                </div>\n              </Slider>\n            </ul>\n          </div>\n        </Hero>\n\n        {\n          activeTab === 'MyProfile' &&\n          <div className=\"container profile-div\" id=\"MyProfile\">\n            <div className=\"profile-image-container\">\n              {profileData.members_profile_picture ? (\n                <img\n                  src={profileData.members_profile_picture}\n                  alt=\"Profile\"\n                  className=\"profile-image\"\n                />\n              ) : (\n                <img\n                  src={require(\"../../assets/images/profile/Default.jpg\")}\n                  alt=\"Profile\"\n                  className=\"profile-image\"\n                />\n              )}\n            </div>\n            <div className=\"profile-text\">\n              <p>{profileData.members_biography}</p>\n            </div>\n            <div className=\"row w-100 mx-0\">\n              <div className=\"col-md-12 col-12 py-2 profile-parent\" style={{ maxWidth: '700px', margin: 'auto', display: 'block' }}>\n                <div className=\"profile-action\">\n                  <Heading tag=\"h3\" className=\"profile-heading\">\n                    Profile Information\n                  </Heading>\n                  <a\n                    onClick={toggle}\n                    style={{\n                      color: \"#FFF\",\n                      cursor: \"pointer\",\n                      borderBottom: \"1px solid\",\n                    }}\n                  >\n                    Edit Profile\n                  </a>\n\n\n                </div>\n\n                <div className=\"display-text\">\n                  <p>Display on public profile?</p>\n                </div>\n                <div className=\"list-details\">\n                  <div className=\"row w-100\">\n                    <div className=\"list\" style={{ paddingRight: '0px' }}>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Full Name</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span>\n                            {profileData.members_fname +\n                              \" \" +\n                              profileData.members_lname}\n                          </span>\n                        </div>\n\n                      </div>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Email Address</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span>\n                            {profileData.members_email}\n                          </span>\n                        </div>\n                        <div className=\"swicthaction\">\n                          <FormGroup switch>\n                            <Input\n                              type=\"switch\"\n                              checked={\n                                profileData.displayStatus.members_email === \"A\"\n                              }\n                              name=\"members_email\"\n                              onChange={handleSwitchToggle}\n                              id=\"switchEmail\"\n                            />\n                            <Label htmlFor=\"switchEmail\"></Label>\n                          </FormGroup>\n                        </div>\n                      </div>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Phone</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span>\n                            {profileData.members_phone !== null && (\n                              <a\n                                href={`tel:${profileData.members_dial_code}${profileData.members_phone}`}\n                                className=\"tel-text\"\n                              >\n\n                                {\n                                  profileData.members_dial_code +\n                                  \" - \" +\n                                  profileData.members_phone\n                                }\n\n\n                              </a>\n                            )}\n                          </span>\n                        </div>\n                        <div className=\"swicthaction\">\n                          <FormGroup switch>\n                            <Input\n                              type=\"switch\"\n                              checked={\n                                profileData.displayStatus.members_phone === \"A\"\n                              }\n                              name=\"members_phone\"\n                              onChange={handleSwitchToggle}\n                              id=\"switchPhone\"\n                            />\n                            <Label htmlFor=\"switchPhone\"></Label>\n                          </FormGroup>\n                        </div>\n                      </div>\n\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Address</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span className=\"capitalize-first-letter\">{profileData.members_address}</span>\n                        </div>\n                        <div className=\"swicthaction\">\n                          <FormGroup switch>\n                            <Input\n                              type=\"switch\"\n                              checked={\n                                profileData.displayStatus.members_address === \"A\"\n                              }\n                              name=\"members_address\"\n                              onChange={handleSwitchToggle}\n                              id=\"switchAddress\"\n                            />\n                            <Label htmlFor=\"switchAddress\"></Label>\n                          </FormGroup>\n                        </div>\n                      </div>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Town</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span className=\"capitalize-first-letter\">{profileData.members_town}  </span>\n                        </div>\n                        <div className=\"swicthaction\"></div>\n                      </div>\n\n\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Region / County</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span className=\"capitalize-first-letter\">{profileData.members_region}</span>\n                        </div>\n\n                      </div>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Postcode</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span>{profileData.members_postcode}</span>\n                        </div>\n                        <div className=\"swicthaction\"></div>\n                      </div>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Country</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span className=\"capitalize-first-letter\">{profileData.members_country}</span>\n                        </div>\n\n                      </div>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Current Employment</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span className=\"capitalize-first-letter\">{profileData.members_employment}</span>\n                        </div>\n                        <div className=\"swicthaction\"></div>\n                      </div>\n                      <div className=\"list-details-data EmploymentHistory\">\n                        <div className=\"headerName\">\n                          <span>Employment History</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span className=\"capitalize-first-letter\">{profileData.members_employment_history}</span>\n                        </div>\n                        <div className=\"swicthaction\"></div>\n                      </div>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>About Me</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span className=\"capitalize-first-letter\">{profileData.members_biography}</span>\n                        </div>\n\n                      </div>\n                      <div className=\"list-details-data\">\n                        <div className=\"headerName\">\n                          <span>Interests</span>\n                        </div>\n                        <div className=\"data-list\">\n                          <span className=\"capitalize-first-letter\">{profileData.members_interest}</span>\n                        </div>\n\n                      </div>\n\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"downloadpdf-section\">\n                <Button\n                  onClick={downloadPdf}\n                  text=\"DOWNLOAD MEMBERSHIP CARD\"\n                  icon={true}\n                  theme=\"light\"\n                />\n\n              </div>\n\n            </div>\n          </div>\n        }\n        <div className=\"profile-box\">\n          <div className=\"profile-box-inner\">\n            <Modal\n              isOpen={modal}\n              toggle={toggle}\n              centered\n              className=\"Profilebox-modal\"\n            >\n              <ModalBody>\n                <ModalHeader toggle={toggle}>\n                  <Heading tag=\"h3\" className=\"text-center\">\n                    Edit Profile\n                  </Heading>\n                </ModalHeader>\n                <EditProfile profileData={profileData} toggle={toggle} />\n              </ModalBody>\n            </Modal>\n          </div>\n        </div>\n        {\n          activeTab === 'MyBookings' &&\n          <div className=\"mybooking-tabs\" id=\"mybooking\">\n            <MyBookings tabActive={tabActive} />\n          </div>\n        }\n        {\n          activeTab === 'Settings' &&\n          <div className=\"mybooking-tabs\" id=\"settings\">\n            <Settings />\n          </div>\n        }\n        {activeTab === 'MyRefferals' &&\n          <div className=\"MyRefferals px-2\" id=\"MyRefferals\">\n            <MyReferrals />\n          </div>\n        }\n        {activeTab === 'Subscription' &&\n          <div className=\"Subscription px-2\" id=\"Subscription\">\n            <Subscription heading={\"Free Membership\"} membershipExpire={profileData.members_subscription_end_date} discountAmount={profileData.discount_amount} keyFeatures={fullFeatures} membershipFee={memberShipFee} yearlyFee={yearlyFee} subscriptionPlan={profileData.members_subscription_plan} memberType={memberType} referral_code={profileData.referral_code} />\n          </div>\n        }\n        {activeTab === 'Transaction' &&\n          <div className=\"Transaction\">\n            <Transaction />\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","export interface DobValues {\n  dobDay: string;\n  dobMonth: string;\n  dobYear: string;\n}\nexport interface StatusValues {\n  members_name: string;\n  members_email: string;\n  members_phone: string;\n  members_dob: string;\n  members_address: string;\n  members_country: string;\n  members_region: string;\n  members_biography: string;\n  members_about_me: string;\n  members_interest: string;\n}\nexport interface ProfileData {\n  members_name_title: string;\n  members_fname: string;\n  members_lname: string;\n  members_email: string;\n  members_status: string;\n  members_payment_status: string;\n  members_dob: string;\n  members_dob_data: DobValues;\n  members_phone_code: string;\n  members_phone: string;\n  members_address: string;\n  members_country: string;\n  members_region: string;\n  members_employment: string;\n  members_employment_history: string;\n  members_biography: string;\n  members_interest: string;\n  members_about_me: string;\n  members_type: string;\n  dobYear: string;\n  dobMonth: string;\n  dobDay: string;\n  members_profile_picture: string;\n  phone_code: string;\n  members_town: string;\n  members_street: string;\n  members_postcode: string;\n  members_dial_code: string;\n  displayStatus: StatusValues;\n  google_token?: string;\n  referral_code?: string;\n  members_subscription_end_date?: string;\n  members_subscription_plan?: string;\n  discount_amount?: string;\n}\nexport const initialProfileData: ProfileData = {\n  members_name_title: \"\",\n  members_fname: \"\",\n  members_lname: \"\",\n  members_email: \"\",\n  members_status: \"\",\n  members_payment_status: \"\",\n  members_dob: \"\",\n  members_dob_data: {\n    dobDay: \"\",\n    dobMonth: \"\",\n    dobYear: \"\",\n  },\n  members_phone_code: \"\",\n  members_phone: \"\",\n  members_address: \"\",\n  members_country: \"\",\n  members_region: \"\",\n  members_employment: \"\",\n  members_employment_history: \"\",\n  members_biography: \"\",\n  members_interest: \"\",\n  members_about_me: \"\",\n  members_type: \"\",\n  dobYear: \"\",\n  dobMonth: \"\",\n  dobDay: \"\",\n  members_profile_picture: \"\",\n  phone_code: \"\",\n  members_town: \"\",\n  members_street: \"\",\n  members_postcode: \"\",\n  members_dial_code: \"\",\n  displayStatus: {\n    members_name: \"\",\n    members_email: \"\",\n    members_phone: \"\",\n    members_dob: \"\",\n    members_address: \"\",\n    members_country: \"\",\n    members_region: \"\",\n    members_biography: \"\",\n    members_about_me: \"\",\n    members_interest: \"\",\n  },\n};\n"],"names":["fileUploadApiSlice","apiSlice","injectEndpoints","endpoints","builder","uploadFile","mutation","query","data","url","method","headers","body","formData","useUploadFileMutation","_ref","image","onCropComplete","onCancel","crop","setCrop","useState","x","y","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropCompleteHandler","useCallback","croppedArea","_jsx","className","children","_jsxs","Cropper","aspect","onCropChange","onZoomChange","id","type","value","min","max","step","onChange","e","Number","target","onClick","async","canvas","document","createElement","img","Image","src","Promise","resolve","onload","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","Error","drawImage","croppedImageUrl","toDataURL","console","error","chunkSize","ProfileFileUpload","getFileName","folderName","from","dropzoneActive","setDropzoneActive","files","setFiles","currentFileIndex","setCurrentFileIndex","lastUploadedFileIndex","setLastUploadedFileIndex","currentChunkIndex","setCurrentChunkIndex","loading","setLoading","errors","setError","fileInputRef","useRef","showCropper","setShowCropper","imageToEdit","setImageToEdit","handleNewFile","file","reader","FileReader","result","readAsDataURL","readAndUploadCurrentChunk","to","blob","slice","readerEvent","_readerEvent$target","blobData","Blob","Uint8Array","FormData","append","name","size","toString","Math","ceil","unwrap","then","response","fileSize","chunks","finalFilename","catch","uploadChunk","useEffect","isLastFile","length","_Fragment","role","require","alt","ImageCropper","fetch","croppedImage","File","onDragOver","preventDefault","onDragLeave","onDrop","droppedFiles","Array","dataTransfer","handleDrop","current","click","FontAwesomeIcon","icon","faPlus","ref","style","display","map","fileIndex","progress","uploading","round","EditProfile","profileData","toggle","profileDatas","setProfileData","errorMsg","setErrorMsg","members_phone_code","prevData","phone_code","fileName","setFileName","userData","getUserData","token","memberType","Token","Member_type","form","useForm","defaultValues","register","control","handleSubmit","formState","originalDate","members_dob","year","month","day","split","parsedValue","parseInt","updateProfile","isLoading","useUpdateProfileMutation","showUpload","setShowUpload","profileMutation","useProfileMutation","getProfile","removePicture","useRemovePictureMutation","showModal","useGlobalModalContext","handleModalClose","country","setCountry","members_country","countryError","setCountryError","Heading","tag","members_profile_picture","NavLink","removePicModal","MODAL_TYPES","CONFIRM_MODAL","title","details","confirmBtn","onCloseCallback","FormProvider","onSubmit","credentials","_userData$error$data","noValidate","CustomInput","placeholder","registerConfig","required","message","TelephoneField","initialValue","changePassword","CHANGE_PASSWORD_MODAL","color","CountryPicker","handleChange","Swal","text","showConfirmButton","backdrop","background","Button","log","theme","cursor","deleteModal","MyBookingsApiSlice","specbookings","memberbookings","acceptStatus","booking_id","cancelStatus","_ref2","videoCallDuration","passData","overrideExisting","useSpecbookingsMutation","useMemberbookingsMutation","useAcceptStatusMutation","useCancelStatusMutation","useVideoCallDurationMutation","SingleBookingCard","SinglecardDetail","SinglecardDetailButtons","handleSub","timezone","setTimezone","formattedNumber","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","fee","concat","btnClassname","trim","histclassName","is_specialistval","bookingTab","btnText","hideAccept","call_status","btnClassName","showCall","btnTheme","buttonTextShow","member_image","process","firstName","lastName","time","currency","call_scheduled_reason","showCancel","event","btnSmallText","showRearrange","disabled","UpcomingBooking","upcomingBookingData","upcomingButtonDetails","upcomingClassName","countcons","detail","index","History","bookingHistoryData","HistoryButtonDetails","BookingRequest","newBookingData","BookingreqButtonDetails","isOpen","singlecard","userImage","afterCancel","CancelStatusupdation","percentage","hourDifference","Modal","ModalBody","borderRadius","scheduleDate","scheduledTime","stepIndex","cancelBooking","afterAccept","AcceptStatusupdation","accpetBooking","MyBookings","tabActive","useNavigate","setUserImage","setIsShowEnvelopeIcon","useSocket","stripeVerified","setStripeVerified","currencySymbol","memberdp","memberid","is_specialist","Member_id","currencySymbols","USD","EUR","GBP","MyBookingsSec","baseUrl","setIsLoading","newBooking","setnewBooking","upcomingBooking","setupcomingBooking","bookingHistory","setbookingHistory","combinedDateTime","setCombinedDateTime","setStepIndex","modal","setModal","today","moment","toDate","selectedDate","setSelectedDate","selectedTime","setSelectedTime","SelectedTimezone","setSelectedTimezone","ErrorMsg","SuccessMsg","setSuccessMsg","specialistDp","setImage","specialistId","setSpecId","specialistfee","setSpecialistFee","specialistName","setSpecialistName","specialistFName","setSpecialistFName","specialistLName","setSpecialistLName","timeSlot","setTimeSlot","userMemId","setUserMemId","bookingId","setbookingId","modalOpen","setModalOpen","modalOpen1","setModalOpen1","buttonClicked","setButtonClicked","bookAgain","setBookAgain","activeTabSpec","setActiveTabSpec","activeTab","setActiveTab","setFrom","isRearrange","setIsRearrange","toggleModal","toggleModal1","handleTabClick","tabName","fetchMyBookingsApi","handleDateSelect","userId","useParams","callSchedule","useCallScheduleMutation","bookedTimes","setTimes","BookSpecialist","useBookSpecialistMutation","SpecialistProfile","useSpecialistProfileMutation","hideModal","store","isModalOpen","setIsModalOpen","handleDateSelectRearrange","date","SpecialistID","formattedDate","user_mem_id","undefined","specialist_id","call_scheduled_date","transformedTime","item","call_scheduled_time","handlebuttonSub","buttonText","currentTarget","innerText","toLowerCase","callDate","meeting_id","meeting_link","callDatecheck","Date","callEndTimecheck","getTime","duration","nowcheck","convertToUKTime","postParams","subject","call_date","is_expert","queryString","URLSearchParams","window","open","toLocaleString","timeZone","stripe_verified","formatTime","timeString","startHour","startMinute","startHourInt","startMinuteInt","formattedStartTime","padStart","totalMinutes","endHourInt","floor","endMinuteInt","formattedEndTime","defaultLocale","formatDate","dateObject","days","options","toLocaleDateString","formatScheduleTime","period","getFullFromDate","DateTimeFormat","newBookingsItems","upcomingBookingsItems","historyBookingsItems","forEach","editdate","uk_scheduled_time","nowTime","minuteDifference","diff","callStatus","callduration","timeSlotselected","String","member_rearrange","formattedItem","call_fee","members_fname","members_lname","push","UpcomingButtonDetails","BookModal","toggleClose","handleCloseModal","specialistLastName","changeTimeSlot","timeslot","reason","specialistFee","AcceptBooking","handleAfterAccept","timer","CancelBooking","handleAfterCancel","GeneralSettings","fontSize","deactivateModal","CallRates","callRateData","setCallRateData","isSuccess","useGetCallRateQuery","rate","extra_GBP","half_GBP","one_GBP","extra_EUR","half_EUR","one_EUR","extra_USD","half_USD","one_USD","getValues","reset","saveRate","useSaveCallRateMutation","formValues","UnavailableDate","_timeBlocks$","_timeBlocks$2","add","times","timeBlocks","setTimeBlocks","startTime","endTime","highlightDates","setHighlightDates","deleteId","setDeleteId","cleared","setCleared","enabled","setEnabled","saveUnavailableHours","useSaveUnavailableHoursMutation","deleteUnavailableHours","useDeleteUnavailableHoursMutation","unavailableData","refetch","useGetUnavailableHoursQuery","unavailableTimes","setUnavailableTimes","selectedDates","setSelectedDates","editSelectedDates","setEditSelectedDates","dateError","setDateError","datesArray","initialUnavailableTimes","getDeleteId","Object","entries","dates","dateInfo","addUnavailableTime","timeRange","prev","existingEntries","unavailableDates","keys","blocks","handleTimeChange","field","updatedTimeBlocks","selectedStartTime","isAfter","renderEndTimeOptions","filter","timeMoment","isValid","getTimes","endOf","_times","currentTime","isBefore","lastTimeBlockValid","unavailableRanges","_unavailableTimes$ran","_unavailableTimes$ran2","_unavailableTimes$ran3","_unavailableTimes$ran4","sort","rangeStart","rangeEnd","previousTimeRanges","ids","i","_unavailableTimes$cur","currentDate","currentEntry","currentTimeRanges","currentId","isConsecutiveDate","isSameTimeRanges","JSON","stringify","listUnavailableTimes","DatePicker","selectsMultiple","minDate","now","inline","join","startDate","endDate","includes","trimmedStartDate","trimmedEndDate","isSameOrBefore","reduce","acc","range","block","handleEdit","iconname","faEdit","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","warn","handleDelete","faTrashAlt","timeBlock","handleAddTime","lastTimeBlock","lastEndTime","availableTimes","handleClearTime","updatedUnavailableTimes","selectedDatesSet","Set","datesToDelete","has","excluded_dates","cancelEdit","WorkingHour","selectedDays","setSelectedDays","showDays","setShowDays","disabledDays","setDisabledDays","setStartTime","setEndTime","isEditing","setIsEditing","saveWorkingHours","useSaveWorkingHoursMutation","updateWorkingHours","useUpdateWorkingHoursMutation","deleteWorkingHours","useDeleteWorkingHoursMutation","workingHourData","useGetWorkingHoursQuery","existingData","working_hours","parsedData","flatMap","showParsedData","some","d","updatedDays","handleDayClick","workingHours","existing","find","isArray","editDays","updatedShowDays","showDay","handleRemoveDays","ExpertSettings","Settings","maxWidth","margin","Transaction","totalRewards","setTotalRewards","availableRewards","setAvailableRewards","transactionDetails","setTransactionDetails","stripeVarify","setStripeVarify","transactionData","useGetTransactionQuery","totalEarned","setTotalEarned","escrowBalance","setEscrowBalance","redeemAmount","setRedeemAmount","stripeUrl","setStripeUrl","convertedAmount","setConvertedAmount","expandedRows","setExpandedRows","currentPage","setCurrentPage","createStripe","useCreateStripeAccountMutation","escrow_balance","redeem_amount","total_earned","total_rewards","available_rewards","converted_amount","stripe_url","columns","selector","row","sortable","transaction","description","amount","expand","rows","isExpanded","transaction_id","classToShow","addSymbol","transaction_type","status","payment_date","converted_actual_amount","parseFloat","toFixed","toggleRowExpansion","transactionId","connected_member","from_currency","original_amount","reduced_amount","actual_amount","connected_member_id","converted_original_amount","converted_reduced_amount","success","account_link","location","replace","withdrawAmount","useRedeemAmountMutation","withdraw_amount","handleRedeem","justifyContent","filterVal","filterdData","_item$type","searchQuery","DataTable","pagination","paginationServer","paginationTotalRows","onChangePage","page","MyReferrals","referalData","useReferralListQuery","buttonCopied","setbuttonCopied","urlCopied","seturlCopied","buttonDisable","setbuttonDisable","urlDisable","seturlDisable","referralDetails","setReferralDetails","referralBonus","setReferralBonus","referral_code","setReferral_code","referral_bonus","stripe_varify","handleCopyClick","couponCode","navigator","clipboard","writeText","fallbackCopyTextToClipboard","textArea","position","top","left","appendChild","focus","select","execCommand","err","removeChild","faCopy","origin","QRCodeSVG","CDBContainer","CDBRow","CDBCol","md","CDBCard","CDBCardBody","CDBDataTable","striped","bordered","hover","entriesOptions","pagesAmount","label","attributes","referred_at","members_email","Status","materialSearch","responsive","searching","marginBottom","heading","membershipExpire","keyFeatures","membershipFee","yearlyFee","subscriptionPlan","discountAmount","navigate","Fee","showFee","unSubscribePlan","useGetUnsuscribePlanMutation","showButton","setShowButton","subscription_status","cardDetails","cardLoading","useGetMemberCardDetailsQuery","cardLast","setCardLast","last_4","handleClick","state","float","marginTop","textDecorationLine","PAYMENT_MODAL","onClose","setUserData","_getMemberShipFee$dat7","statusUpdateMutation","useStatusUpdateMutation","memberShipFee","setMemberShipFee","setYearlyFee","getMemberShipFee","useMembershipFeeQuery","useLocation","mainTab","_getMemberShipFee$dat","_getMemberShipFee$dat2","monthly_membership_fee_dollar","full_membership_fee_dollar","_getMemberShipFee$dat3","_getMemberShipFee$dat4","monthly_membership_fee_euro","full_membership_fee_euro","_getMemberShipFee$dat5","_getMemberShipFee$dat6","monthly_membership_fee","full_membership_fee","handleSwitchToggle","checked","displayStatus","updateData","field_name","field_status","fetchData","initialProfileData","getDate","getMonth","getFullYear","Hero","source","textAlign","Slider","dots","infinite","slidesToShow","slidesToScroll","centerPadding","variableWidth","breakpoint","settings","members_biography","borderBottom","paddingRight","FormGroup","switch","Input","Label","htmlFor","members_phone","href","members_dial_code","members_address","members_town","members_region","members_postcode","members_employment","members_employment_history","members_interest","axios","get","responseType","URL","createObjectURL","link","setAttribute","remove","centered","ModalHeader","Subscription","members_subscription_end_date","discount_amount","members_subscription_plan","members_name_title","members_status","members_payment_status","members_dob_data","dobDay","dobMonth","dobYear","members_about_me","members_type","members_street","members_name"],"sourceRoot":""}