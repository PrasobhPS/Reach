{"version":3,"file":"static/js/452.a3736fa3.chunk.js","mappings":"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","sources":["components/CustomSelect/CustomSelect.tsx","components/CustomSlider/CustomSlider.tsx","components/FileUpload/FileUploadApiSlice.tsx","features/Cruz/components/Sidebar/Sidebar.tsx","features/Cruz/Api/CruzMainApiSlice.tsx","components/Layout/CruzLayout.tsx","features/Cruz/Api/CampaignApiSlice.tsx","features/Cruz/components/SingleCampaign/SingleCampaign.tsx","features/Cruz/components/CampaignList/CampaignList.tsx","features/Cruz/pages/Employer/ViewCampaign.tsx","features/Cruz/components/EmployeeProfile/EmployeeProfile.tsx","features/Cruz/components/Modal/ProfileMatch.tsx","features/Cruz/components/Modal/WhatHappen.tsx","features/Cruz/components/EmployerProfile/EmployerProfileApiSlice.tsx","features/Cruz/components/Breadcrumbs/Breadcrumbs.tsx","features/Cruz/pages/Employer/ViewProfile.tsx","features/Cruz/pages/Employer/Register.tsx","components/MultiStepForm/Option.tsx","components/FileUpload/FileUpload.tsx","components/MultiStepForm/Step.tsx","components/MultiStepForm/MultiStepForm.tsx","features/Cruz/pages/Employer/PostJob.tsx","features/Cruz/components/EmployerProfile/EmployerProfile.tsx","features/Cruz/components/ReviewEmployeeProfile/EmployeeProfileApiSlice.tsx","features/Cruz/components/LikeCard/LikeCard.tsx","features/Cruz/pages/Employer/MyMatches.tsx","features/Cruz/pages/Employee/ProfilesetUp.tsx","components/Card/Card.tsx","pages/Cruz/Cruz.tsx","features/Cruz/Api/ProfileApiSlice.tsx","features/Cruz/pages/Employee/Dashboard.tsx","features/Cruz/pages/Employee/EmployeeMyMaches.tsx","features/Cruz/components/ReviewEmployeeProfile/EmployeeReviewProfile.tsx","features/Cruz/pages/Employee/ReviewEmployeeProfile.tsx","features/Cruz/pages/Employer/ReviewEmployerProfile.tsx","features/Cruz/pages/Employee/Job.tsx","features/Cruz/pages/Employee/EmployeeMatchProfile.tsx","components/MultiForm/Option.tsx","components/ReactDatePicker/ReactDatePicker.tsx","components/DobPicker/JobDatePicker.tsx","components/Multiselect/Multiselect.tsx","components/MultiForm/SalaryPicker.tsx","components/MultiForm/ShowImages.tsx","components/MultiForm/MultiUploads.tsx","components/MultiForm/DynamicTextFields.tsx","components/CustomPickerDate/CustomModalDate.tsx","components/MultiForm/Steps.tsx","features/Cruz/components/ReviewJobEmployerProfile/ReviewJobEmployerProfile.tsx","features/Cruz/pages/Employer/ReviewEmployerPost.tsx","components/MultiForm/MultiForm.tsx","features/Cruz/pages/Employer/Job.tsx","features/Cruz/pages/Employer/JobPostStatus.tsx","features/Cruz/pages/Employee/EmployeeJobpostStatus.tsx","features/Cruz/pages/Employee/SetStatus.tsx","features/Cruz/pages/Employer/ViewJob.tsx","components/MultiForm/ProfileSetup.tsx","features/Cruz/pages/Employee/CreateProfile.tsx","features/Cruz/pages/Employee/EmployerViewsJobs.tsx","features/Cruz/pages/Employer/PreviewEmployee.tsx","features/Cruz/pages/Employee/EmployeeLikedJobs.tsx","features/Cruz/pages/Employer/MyLikedProfile.tsx","features/Cruz/pages/Employee/EmployeeDisLikedJobs.tsx","features/Cruz/pages/Employer/MyDislikedProfile.tsx","features/Cruz/pages/Notification/Notification.tsx","features/Cruz/routes/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CustomSelectProps } from '../../types';\nimport './CustomSelect.scss';\nimport { useFormContext, useFormState } from 'react-hook-form';\n\nconst CustomSelect: React.FC<CustomSelectProps> = ({ name, options, registerConfig, placeholder, handleChange }) => {\n  const { register } = useFormContext();\n  const { errors } = useFormState();\n  const error = errors[name]?.message;\n  const [selectName, setSelectName] = useState<string>('Select');\n  useEffect(() => {\n    if (placeholder) {\n      setSelectName(placeholder);\n    }\n  }, [placeholder])\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = event.target.value;\n    if (handleChange)\n      handleChange(selectedValue);\n\n  };\n\n  return (\n    <div className={`form-group custom-select ${error ? 'has-error' : ''}`}>\n      <select className='form-control' {...register(name, registerConfig)} defaultValue=\"\" onChange={handleSelectChange}>\n        <option value=\"\" disabled>{selectName}</option>\n        {options.map(option => (\n          <option key={option.value} value={option.value}>{option.label}</option>\n        ))}\n      </select>\n      {error && <span className='error'>{`${error}`}</span>}\n    </div>\n  );\n};\n\nexport default CustomSelect;\n","import React, { forwardRef, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./CustomSlider.scss\";\nimport { CustomSliderProps } from \"../../types\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { Heading } from \"../Heading/Heading\";\nimport ReactPlayer from \"react-player\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport const CustomSlider = forwardRef<Slider, CustomSliderProps>((props, ref) => {\n  const { settings, items, className, isVideo } = props;\n  const [modal, setModal] = useState(false);\n  const [videoUrl, setVideoUrl] = useState<string | undefined>(undefined);\n  const [videoTitle, setTitle] = useState<string | undefined>(undefined);\n  const [embedUrl, setEmbededUrl] = useState<string | undefined>(undefined);\n  const toggle = () => {\n    setModal(!modal);\n  };\n  // let embedUrl: string | undefined = undefined;\n  const playVideo = (video: string | undefined, title: string | undefined) => {\n    setVideoUrl(video);\n    setTitle(title);\n    toggle();\n  };\n  const navigate = useNavigate();\n  return (\n    <div className=\"custom-slider-wrapper action-up-arrow\">\n      <Slider ref={ref} {...settings} className={className} >\n        {items &&\n          items.map((item, index) => {\n            return (\n              <div className={`item cursor-pointer ${item?.active ? 'chat-slider-active' : ''}`} key={`slide-${index}`} onClick={() => { if (props.clickCallback && item.room_id) props.clickCallback(item.room_id); }}>\n                {isVideo ? (\n                  <div className=\"video-wrapper\">\n                    {item.thumbnail ? (\n                      <div className=\"image-wrap\">\n                        <img\n                          src={item.thumbnail}\n                          alt={item?.alt}\n                          className=\"img-fluid\"\n                        />\n                        <a\n                          className=\"play-button\"\n                          onClick={() => playVideo(item.video, item.title)}\n                        >\n                          <FontAwesomeIcon icon={faPlay} />\n                        </a>\n                      </div>\n                    ) : (\n                      <div>\n                        <video\n                          className=\"w-100\"\n                          controls={false}\n                          playsInline\n                          src={item.video}\n                        ></video>\n                        <a\n                          className=\"play-button\"\n                          onClick={() => playVideo(item.video, item.title)}\n                        >\n                          <FontAwesomeIcon icon={faPlay} />\n                        </a>\n                      </div>\n                    )}\n                    {/* <video\n                    className=\"w-100\"\n                    controls={false}\n                    playsInline\n                    src={item.video}\n                  ></video>\n                  <a\n                    className=\"play-button\"\n                    onClick={() => playVideo(item.video)}\n                  >\n                    <FontAwesomeIcon icon={faPlay} />\n                  </a> */}\n                  </div>\n                ) : (item.isLink && item.url ? (\n                  <Link to={item.url} className={item?.active ? 'active' : ''}>\n                    <img src={item.image} alt={item?.alt} className=\"img-fluid\" />\n                  </Link>\n                ) : (\n                  <a onClick={() => navigate(`/chandlery`, {\n                    state: {\n                      chandlery_id: item.partner_id,\n                    },\n                  }\n                  )\n                  } target=\"_blank\" className={item?.active ? 'active' : ''}>\n                    <img src={item.image} alt={item?.alt} className=\"img-fluid\" />\n                  </a>)\n                )}\n                {item.title && <h6 className=\"itemlist-heading\">{item.title}</h6>}\n                {item.text && <p className=\"item-text\">{item.text}</p>}\n                {item.details && <p className=\"item-details\">{item.details}</p>}\n\n                {/* {item.title && <h6 className=\"itemlist-heading\">{item.text}</h6>}\n              {item.text && <p className=\"item-text\">{item.title}</p>}\n              {item.details && <p className=\"item-details\">{item.details}</p>} */}\n\n              </div>\n            )\n          })}\n      </Slider>\n      <div className=\"\">\n        <Modal\n          isOpen={modal}\n          toggle={toggle}\n          centered\n          className=\"videobox-modal\"\n        >\n          <ModalBody>\n            <ModalHeader toggle={toggle}>\n              <Heading tag=\"h3\" className=\"text-center\">\n                {videoTitle}\n              </Heading>\n            </ModalHeader>\n            <div className=\"video-player\">\n              <ReactPlayer url={videoUrl} controls={true} />\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>\n  );\n});\nexport default CustomSlider;","import { apiSlice } from \"../../app/apiSlice\";\n\nexport const fileUploadApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    uploadFile: builder.mutation<FileUploadResponse, FormData>({\n      query: (data) => ({\n        url: \"/member/addProfilePicture\",\n        method: \"POST\",\n        headers: {\n          // \"Content-Type\": \"multipart/form-data; boundary=---BOUNDARY\",\n        },\n        body: data,\n        formData: true,\n      }),\n    }),\n  }),\n});\n\nexport const { useUploadFileMutation } = fileUploadApiSlice;\n\ninterface FileUploadResponse {\n  finalFilename: string;\n}\n","import { NavLink } from 'react-router-dom';\nimport { Button } from '../../../../components/Button/Button';\nimport React, { useState, useEffect } from \"react\";\nimport ListAccordion from \"../../../../components/ListAccordion/ListAccordion\";\nimport './Sidebar.scss';\ninterface CruzMenuSingle {\n  text: string;\n  target?: string;\n  className?: string;\n  count?: number;\n}\nexport interface CruzMenuProps {\n  CruzMenu: CruzMenuSingle[];\n  pageLink: string;\n}\n\nexport const Sidebar: React.FC<CruzMenuProps> = ({\n  CruzMenu,\n  pageLink\n}) => {\n\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n  const toggleAccordion = (index: number) => {\n    setOpenIndex(openIndex === index ? null : index);\n  };\n  return (\n    <div>\n\n      <ListAccordion\n        title=\"Menu\"\n        list={CruzMenu}\n        pageLink={pageLink}\n        isOpen={openIndex === 0}\n        toggleAccordion={() => toggleAccordion(0)}\n\n      />\n\n    </div>\n    // <div className='cruz-sidebar'>\n    //     <Button onClick={()=>console.log('Hello')} text='New Campaign' icon={true} theme='light'/>\n    //     <ul className=\"sidebar-navitems\">\n    //         <li className=\"active\">\n    //             <NavLink className=\"navLink\" to={'/'}>All Posts</NavLink>\n    //         </li>\n    //         <li>\n    //             <NavLink className=\"navLink\" to={'/'}>My Posts</NavLink>\n    //         </li>\n    //         <li>\n    //             <NavLink className=\"navLink\" to={'/'}>Drafts</NavLink>\n    //         </li>\n    //         <li>\n    //             <NavLink className=\"navLink\" to={'/'}>Saved</NavLink>\n    //         </li>\n    //     </ul>\n    // </div>\n  )\n}","import { apiSlice } from \"../../../app/apiSlice\";\n\nexport const CruzMainApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        getJobQuestions: builder.query({\n            query: () => ({\n                url: \"/employer/getPostJobDetails\",\n                method: \"GET\",\n            }),\n        }),\n        saveJob: builder.mutation({\n            query: (jobData) => ({\n                url: \"/employer/post-job\",\n                method: \"POST\",\n                body: jobData,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }),\n            invalidatesTags: ['SideMenu'],\n        }),\n        getJobDetails: builder.mutation({\n            query: ({ id }) => ({\n                url: `/employer/editPostJobDetails/${id}`,\n                method: \"GET\",\n            }),\n        }),\n        removeImage: builder.mutation({\n            query: (imageData) => ({\n                url: \"/employer/removeImage\",\n                method: \"POST\",\n                body: imageData,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }),\n        }),\n\n\n        getProfileQuestions: builder.query({\n            query: () => ({\n                url: \"/employee/setUpProfile\",\n                method: \"GET\",\n            }),\n        }),\n\n        saveProfile: builder.mutation({\n            query: (profileData) => ({\n                url: \"/employee/saveProfile\",\n                method: \"POST\",\n                body: profileData,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }),\n            invalidatesTags: ['SideMenu'],\n        }),\n\n        getProfileDetails: builder.mutation({\n            query: ({ id }) => ({\n                url: `/employee/editsetUpProfile/${id}`,\n                method: \"GET\",\n            }),\n        }),\n\n        getChatMember: builder.mutation({\n            query: (profileData) => ({\n                url: \"/member/getChatMemberDetails\",\n                method: \"POST\",\n                body: profileData,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }),\n        }),\n\n        getDashboardCount: builder.query({\n            query: () => ({\n                url: \"/member/getDashboardCount\",\n                method: \"GET\",\n\n            }),\n            providesTags: ['SideMenu'],\n        }),\n\n    }),\n    overrideExisting: true,\n});\n\nexport const {\n    useGetJobQuestionsQuery,\n    useSaveJobMutation,\n    useGetJobDetailsMutation,\n    useRemoveImageMutation,\n    useGetProfileQuestionsQuery,\n    useSaveProfileMutation,\n    useGetProfileDetailsMutation,\n    useGetChatMemberMutation,\n    useGetDashboardCountQuery,\n} = CruzMainApiSlice;\n","import Footer from \"../Footer/Footer\";\nimport Header from \"../Header/Header\";\nimport { CruzLayoutProps } from \"../../types\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Sidebar } from \"../../features/Cruz/components/Sidebar/Sidebar\";\nimport \"../../assets/scss/cruz.scss\";\nimport { useLocation } from \"react-router-dom\";\nimport { getUserData } from \"../../utils/Utils\";\nimport { useGetDashboardCountQuery } from \"../../features/Cruz/Api/CruzMainApiSlice\";\nimport { useSocket } from \"../../contexts/SocketContext\";\n\ntype MenuItem = {\n  text: string;\n  target: string;\n  className: string;\n  count?: number;\n  button?: boolean;\n  label?: boolean;\n};\nexport const CruzLayout = (props: CruzLayoutProps) => {\n  const { socket, cruzPendingMsgCount, setCruzPendingMsgCount } = useSocket();\n  const userData = getUserData(\"userData\");\n  let IsEmployer = \"\";\n  let IsEmployee = \"\";\n  let token = \"\";\n  try {\n    if (userData !== null) {\n      token = userData.Token;\n      IsEmployer = userData.IsEmployer;\n      IsEmployee = userData.IsEmployee;\n    } else {\n      console.error(\"User data not found in local storage\");\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n  let sidebar = '';\n  if (IsEmployer === 'Y' && IsEmployee === 'Y') {\n    sidebar = 'both';\n  } else if (IsEmployer === 'Y') {\n    sidebar = 'Employer';\n  } else if (IsEmployee === 'Y') {\n    sidebar = 'Employee';\n  }\n  const location = useLocation();\n  let CruzMenu: MenuItem[] = [];\n  const { data, error, isLoading, isSuccess } = useGetDashboardCountQuery({}, { skip: !token });\n  const allCounts = data?.data || [];\n\n\n  if (sidebar !== '') {\n\n    if (sidebar === \"Employee\") {\n      CruzMenu = [\n        {\n          text: \"INTERVIEWS/MESSAGES\",\n          target: \"/cruz/notification\",\n          className: \"link Notification\",\n          count: allCounts['notification_count'] + cruzPendingMsgCount\n        },\n        {\n          text: \"FIND A JOB\",\n          target: \"#\",\n          className: \"personal-caption\",\n          label: true,\n        },\n        {\n          text: \"Dashboard\",\n          target: \"/cruz/employeedashboard\",\n          className: \"second-menu\"\n        },\n        {\n          text: \"Set Status\",\n          target: \"/cruz/setupstatus\",\n          className: \"second-menu\"\n        },\n        {\n          text: \"View Available Jobs\",\n          target: \"/cruz/employeejobs\",\n          className: \"link second-menu\",\n          count: allCounts['available_jobs'],\n        },\n        {\n          text: \"My Matches\",\n          target: \"/cruz/employeemymatches\",\n          className: \"link second-menu\",\n          count: allCounts['my_matches'],\n        },\n        {\n          text: \"Liked Jobs\",\n          target: \"/cruz/likedjobs\",\n          className: \"link second-menu\",\n          count: allCounts['liked_jobs'],\n        },\n        {\n          text: \"Disliked Jobs\",\n          target: \"/cruz/dislikedjobs\",\n          className: \"link second-menu\",\n          count: allCounts['disliked_jobs'],\n        },\n        {\n          text: \"Manage Profile\",\n          target: \"/cruz/reviewemployeeprofile\",\n          className: \"second-menu\"\n        },\n      ];\n    } else if (sidebar === \"Employer\") {\n      CruzMenu = [\n        {\n          text: \"INTERVIEWS/MESSAGES\",\n          target: \"/cruz/notification\",\n          className: \"link Notification\",\n          count: allCounts['notification_count'] + cruzPendingMsgCount\n        },\n        {\n          text: \"FIND CREW\",\n          target: \"#\",\n          className: \"BUSINESS-caption\",\n          button: true,\n          // button: {\n          //   text: \"Add Business\",\n          //   onClick: () => {\n          //     console.log(\"Add Business button clicked\");\n          //   }\n          // }\n        },\n        {\n          text: \"New Campaign\",\n          target: \"/cruz/job\",\n          className: \"NewCampaign newCampaign-business firstmenu\"\n        },\n        {\n          text: \"Live Campaigns\",\n          target: \"/cruz/viewcampaign/livecampaign\",\n          className: \"link firstmenu\",\n          count: allCounts['live_campaigns'],\n        },\n        {\n          text: \"Draft Campaigns\",\n          target: \"/cruz/viewcampaign/draftcampaign\",\n          className: \"link firstmenu\",\n          count: allCounts['draft_campaigns'],\n        },\n        {\n          text: \"Campaign Archive\",\n          target: \"/cruz/viewcampaign/archivecampaign\",\n          className: \"link firstmenu\",\n          count: allCounts['archive_campaigns'],\n        },\n      ];\n\n    } else {\n      CruzMenu = [\n        {\n          text: \"INTERVIEWS/MESSAGES\",\n          target: \"/cruz/notification\",\n          className: \"link Notification\",\n          count: allCounts['notification_count'] + cruzPendingMsgCount\n        },\n        {\n          text: \"FIND CREW\",\n          target: \"#\",\n          className: \"BUSINESS-caption \",\n          button: true,\n          label: false,\n          // button: {\n          //   text: \"Add Business\",\n          //   onClick: () => {\n          //     console.log(\"Add Business button clicked\");\n          //   }\n          // }\n        },\n        {\n          text: \"New Campaign\",\n          target: \"/cruz/job\",\n          className: \"NewCampaign newcampaign-menuoption firstmenu\"\n        },\n        {\n          text: \"New Campaign\",\n          target: \"/cruz/job\",\n          className: \"NewCampaign new-campaignbox firstmenu\"\n        },\n        {\n          text: \"Live Campaigns\",\n          target: \"/cruz/viewcampaign/livecampaign\",\n          className: \"link firstmenu\",\n          count: allCounts['live_campaigns'],\n        },\n        {\n          text: \"Draft Campaigns\",\n          target: \"/cruz/viewcampaign/draftcampaign\",\n          className: \"link firstmenu\",\n          count: allCounts['draft_campaigns'],\n        },\n        {\n          text: \"Campaign Archive\",\n          target: \"/cruz/viewcampaign/archivecampaign\",\n          className: \"link firstmenu\",\n          count: allCounts['archive_campaigns'],\n        },\n        {\n          text: \"FIND A JOB\",\n          target: \"#\",\n          className: \"personal-caption\",\n          button: false,\n          label: true,\n        },\n\n        {\n          text: \"Dashboard\",\n          target: \"/cruz/employeedashboard\",\n          className: \"second-menu\"\n        },\n        {\n          text: \"Set Status\",\n          target: \"/cruz/setupstatus\",\n          className: \"second-menu\"\n        },\n        {\n          text: \"View Available Jobs\",\n          target: \"/cruz/employeejobs\",\n          className: \"link second-menu\",\n          count: allCounts['available_jobs'],\n        },\n        {\n          text: \"My Matches\",\n          target: \"/cruz/employeemymatches\",\n          className: \"link second-menu\",\n          count: allCounts['my_matches'],\n        },\n        {\n          text: \"Liked Jobs\",\n          target: \"/cruz/likedjobs\",\n          className: \"link second-menu\",\n          count: allCounts['liked_jobs'],\n        },\n        {\n          text: \"Disliked Jobs\",\n          target: \"/cruz/dislikedjobs\",\n          className: \"link second-menu\",\n          count: allCounts['disliked_jobs'],\n        },\n        {\n          text: \"Manage Profile\",\n          target: \"/cruz/reviewemployeeprofile\",\n          className: \"second-menu\"\n        },\n\n      ];\n    }\n  }\n\n  // console.log(location.pathname);\n  return (\n    <>\n      <div className=\"cruz-contents\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            {CruzMenu.length > 0 ? (\n              <div className=\"col-xl-3 col-md-4 col-12 cruz-custom\">\n\n                <Sidebar CruzMenu={CruzMenu} pageLink={props.link} />\n              </div>\n            ) : \"\"}\n            <div className={`col-xl-9 col-md-8 col-12 cruz-layoutChild-section ${CruzMenu.length > 0 ? 'cruz-customdesign' : 'cruz-emptyMenu'}`}>\n              {props.children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { apiSlice } from \"../../../app/apiSlice\";\n\nexport const CampaignApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getLiveCampaigns: builder.query({\n      query: () => ({\n        url: \"/employer/getLiveCampaigns\",\n        method: \"GET\",\n      }),\n    }),\n    pauseCampaign: builder.mutation({\n      query: ({ id, jobStatus }: { id: number; jobStatus: string }) => ({\n        url: `/employer/pauseCampaign/${id}/${jobStatus}`,\n        method: \"GET\",\n      }),\n    }),\n    deleteCampaign: builder.mutation({\n      query: (id) => ({\n        url: `/employer/deleteCampaign/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: ['SideMenu'],\n    }),\n    activateCampaign: builder.mutation({\n      query: (id) => ({\n        url: `/employer/activateCampaign/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: ['SideMenu'],\n    }),\n    removeCampaign: builder.mutation({\n      query: (id) => ({\n        url: `/employer/removeCampaign/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: ['SideMenu'],\n    }),\n    myMatchesList: builder.query({\n      query: ({ id }) => ({\n        url: `/employer/myMatchesList/${id}`,\n        method: \"GET\",\n      }),\n    }),\n    getDraftCampaigns: builder.query({\n      query: () => ({\n        url: \"/employer/getDraftCampaigns\",\n        method: \"GET\",\n      }),\n    }),\n    getArchiveCampaigns: builder.query({\n      query: () => ({\n        url: \"/employer/getArchiveCampaigns\",\n        method: \"GET\",\n      }),\n    }),\n    myLikedList: builder.query({\n      query: ({ id }) => ({\n        url: `/employer/myLikedList/${id}`,\n        method: \"GET\",\n      }),\n    }),\n    myUnLikedList: builder.query({\n      query: ({ id }) => ({\n        url: `/employer/myDislikedList/${id}`,\n        method: \"GET\",\n      }),\n    }),\n    employerVarification: builder.mutation({\n      query: () => ({\n        url: \"/member/createStripeVerification\",\n        method: \"GET\",\n      }),\n    }),\n    getVarificationStatus: builder.mutation({\n      query: () => ({\n        url: \"/member/getDocVerificationStatus\",\n        method: \"GET\",\n      }),\n    }),\n  }),\n  overrideExisting: true,\n});\n\nexport const {\n  useGetLiveCampaignsQuery,\n  usePauseCampaignMutation,\n  useDeleteCampaignMutation,\n  useRemoveCampaignMutation,\n  useActivateCampaignMutation,\n  useMyMatchesListQuery,\n  useGetDraftCampaignsQuery,\n  useGetArchiveCampaignsQuery,\n  useMyLikedListQuery,\n  useMyUnLikedListQuery,\n  useEmployerVarificationMutation,\n  useGetVarificationStatusMutation,\n} = CampaignApiSlice;\n","import { Button } from \"../../../../components/Button/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CustomSelect from \"../../../../components/CustomSelect/CustomSelect\";\nimport {\n  faEye,\n  faPauseCircle,\n  faEdit,\n  faTrashAlt,\n  faSearch,\n  faAngleRight,\n  faEllipsisH,\n  faClone,\n  faPlayCircle,\n  faThumbsDown,\n  faThumbsUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./SingleCampaign.scss\";\nimport profileimage from \"../../../../assets/images/campaign-profile.png\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport {\n  useGetLiveCampaignsQuery,\n  usePauseCampaignMutation,\n  useDeleteCampaignMutation,\n  useRemoveCampaignMutation,\n  useGetDraftCampaignsQuery,\n  useGetArchiveCampaignsQuery,\n  useActivateCampaignMutation,\n} from \"../../Api/CampaignApiSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport eyeImage from \"../../../../assets/images/cruz/eye.png\";\nimport search from \"../../../../assets/images/cruz/search.png\";\nimport Eye from \"../../../../assets/images/cruz/icon/eye.png\";\nimport edit from \"../../../../assets/images/cruz/icon/edit.png\";\nimport activate from \"../../../../assets/images/cruz/icon/activate.png\";\nimport editparameter from \"../../../../assets/images/cruz/edit.png\";\nimport trash from \"../../../../assets/images/cruz/icon/Trash.png\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\n\ninterface formValues {\n  username: string;\n  email: string;\n}\ninterface CampaignProps {\n  id: number;\n  job_role: string;\n  vessel_size: string;\n  job_duration: string;\n  job_location: string;\n  created_at: string;\n  matches: number;\n  job_seen_count: number;\n  job_images: string;\n  job_status: string;\n  is_deleted: string;\n  employee_ids: number;\n  employee_count: number;\n}\ninterface PauseBoxClasses {\n  [key: number]: string;\n}\nexport const SingleCampaign = () => {\n  const navigate = useNavigate();\n  const { params } = useParams();\n  const liveCampaignsQuery = useGetLiveCampaignsQuery({});\n  const draftCampaignsQuery = useGetDraftCampaignsQuery({});\n  const archiveCampaignQuery = useGetArchiveCampaignsQuery({});\n  const [isVisible, setIsVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [showBackdrop, setShowBackdrop] = useState(false);\n  const [dynamicId, setDynamicId] = useState<string | undefined>(undefined);\n  const [selectedCampaign, setSelectedCampaign] = useState<{ id: number, status: string } | null>(null);\n  const liveCampaigns =\n    params === \"livecampaign\"\n      ? liveCampaignsQuery.data\n      : params === \"draftcampaign\"\n        ? draftCampaignsQuery.data\n        : params === \"archivecampaign\"\n          ? archiveCampaignQuery.data\n          : null;\n\n  const refetch =\n    params === \"livecampaign\"\n      ? liveCampaignsQuery.refetch\n      : params === \"draftcampaign\"\n        ? draftCampaignsQuery.refetch\n        : params === \"archivecampaign\"\n          ? archiveCampaignQuery.refetch\n          : null;\n  const [pauseCampaignMutation] = usePauseCampaignMutation();\n  const [deleteCampaignMutation] = useDeleteCampaignMutation();\n  const [activateCampaignMutation] = useActivateCampaignMutation();\n  const [removeCampaignMutation] = useRemoveCampaignMutation();\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n  const [campaigns, setCampaigns] = useState<CampaignProps[]>(\n    liveCampaigns?.data || []\n  );\n  useEffect(() => {\n    if (refetch) {\n      refetch();\n    }\n  }, [params])\n  useEffect(() => {\n    setCampaigns([]);\n    if (liveCampaigns?.data) {\n      setCampaigns(liveCampaigns.data);\n    }\n  }, [liveCampaigns]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  //console.log(\"campaign-----\", campaigns);\n  // mobilebutton text\n  const [isMobiletext, setIsMobiletext] = useState(window.matchMedia('(max-width: 767px)').matches);\n  const [dropdownOpen, setDropdownOpen] = useState<Record<number, boolean>>({});\n  const toggleDropdown = (index: number) => {\n    setDropdownOpen((prevState) => ({\n      ...prevState,\n      [index]: !prevState[index],\n    }));\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.matchMedia('(max-width: 767px)').matches);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const buttonText = isMobiletext ? 'Edit Campaign' : 'Edit';\n  const form = useForm<formValues>();\n  const { handleSubmit } = form;\n  const [visibleActionSteps, setVisibleActionSteps] = useState<number | null>(\n    null\n  );\n  const [pauseBoxClasses, setPauseBoxClasses] = useState<PauseBoxClasses>({});\n  const toggleMenu = (index: number) => {\n    setVisibleActionSteps((prevIndex) => (prevIndex === index ? null : index));\n    setPauseBoxClasses((prevClasses) => ({\n      ...prevClasses,\n      [index]: prevClasses[index] === 'pausebox-add' ? '' : 'pausebox-add'\n    }));\n  };\n  const options = [\n    { value: \"option1\", label: \"Option 1\" },\n    { value: \"option2\", label: \"Option 2\" },\n    { value: \"option3\", label: \"Option 3\" },\n  ];\n  const onSubmit = (data: formValues) => {\n    //console.log(\"Form Submitted\", data);\n  };\n  const pauseCampaign = async (id: number, status: string) => {\n    let jobStatus = \"\";\n    if (status === \"A\") jobStatus = \"I\";\n    else jobStatus = \"A\";\n    const response = await pauseCampaignMutation({ id, jobStatus });\n    if (\"error\" in response) {\n      console.error(\"Error logging in:\", response.error);\n    } else {\n      if (refetch) {\n        refetch();\n      } else {\n        console.warn(\"Refetch is null, cannot refetch data.\");\n      }\n    }\n  };\n  const deleteCampaign = async (id: number) => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'This action will archive the campaign and delete all related details. This cannot be undone.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, archive it!',\n      cancelButtonText: 'Cancel',\n      backdrop: `\n    rgba(255, 255, 255, 0.5)\n    left top\n    no-repeat\n    filter: blur(5px);\n  `,\n      background: '#fff',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        try {\n          const response = await deleteCampaignMutation(id);\n          if (\"error\" in response) {\n            console.error(\"Error logging in:\", response.error);\n          } else {\n            Swal.fire({\n              title: \"Archived!\",\n              text: \"The Campaign is Archived successfully\",\n              icon: \"success\",\n              timer: 3000,\n              showConfirmButton: false,\n              backdrop: `\n              rgba(255, 255, 255, 0.5)\n              left top\n              no-repeat\n              filter: blur(5px);\n            `,\n              background: '#fff',\n            });\n            if (refetch) {\n\n              refetch();\n            } else {\n              console.warn(\"Refetch is null, cannot refetch data.\");\n            }\n          }\n        } catch (error) {\n          console.error(\"Error archiving campaign:\", error);\n        }\n      }\n    });\n\n  };\n\n  const removeCampaign = async (id: number) => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'This action will permanently Delete the campaign. This cannot be undone.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, Delete it!',\n      cancelButtonText: 'Cancel',\n      backdrop: `\n    rgba(255, 255, 255, 0.5)\n    left top\n    no-repeat\n    filter: blur(5px);\n  `,\n      background: '#fff',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        try {\n          const response = await removeCampaignMutation(id);\n          if (\"error\" in response) {\n            console.error(\"Error logging in:\", response.error);\n          } else {\n            Swal.fire({\n              title: \"Deleted!\",\n              text: \"The Campaign deleted successfully\",\n              icon: \"success\",\n              timer: 3000,\n              showConfirmButton: false,\n              backdrop: `\n              rgba(255, 255, 255, 0.5)\n              left top\n              no-repeat\n              filter: blur(5px);\n            `,\n              background: '#fff',\n            });\n            if (refetch) {\n              refetch();\n            } else {\n              console.warn(\"Refetch is null, cannot refetch data.\");\n            }\n          }\n        } catch (error) {\n          console.error(\"Error archiving campaign:\", error);\n        }\n      }\n    });\n  }\n\n\n  const activateCampaign = async (id: number) => {\n    const response = await activateCampaignMutation(id);\n    if (\"error\" in response) {\n      console.error(\"Error logging in:\", response.error);\n    } else {\n      Swal.fire({\n        title: \"Activated!\",\n        text: \"The Campaign is Reactivated as a new Campaign\",\n        icon: \"success\",\n        timer: 3000,\n        showConfirmButton: false,\n        backdrop: `\n        rgba(255, 255, 255, 0.5)\n        left top\n        no-repeat\n        filter: blur(5px);\n      `,\n        background: '#fff',\n      });\n      navigate(`/cruz/job/${id}`)\n    }\n  };\n\n  const jobView = (id: number) => {\n    navigate(`/cruz/viewsinglecampaign/${id}`);\n  };\n  const handleToggle = (event: React.MouseEvent<HTMLAnchorElement>, data: { id: number, status: string } | null) => {\n    event.preventDefault();\n    setSelectedCampaign(data);\n    if (isMobile) {\n      const newVisibility = !isVisible;\n      setIsVisible(newVisibility);\n      setShowBackdrop(!showBackdrop);\n      setDynamicId(newVisibility ? `dynamic-id-${Date.now()}` : undefined);\n    }\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 767);\n      if (window.innerWidth > 767) {\n        setIsVisible(true);\n        setShowBackdrop(false);\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    const createBackdrop = () => {\n      if (showBackdrop) {\n        const backdrop = document.createElement(\"div\");\n        backdrop.classList.add(\"backdrop\");\n        backdrop.addEventListener(\"click\", () => {\n          document.body.removeChild(backdrop);\n          setIsVisible(!isVisible);\n          setShowBackdrop(false);\n        });\n        document.body.appendChild(backdrop);\n      }\n    };\n    createBackdrop();\n    return () => {\n      const existingBackdrop = document.querySelector(\".backdrop\");\n      if (existingBackdrop) {\n        existingBackdrop.remove();\n      }\n    };\n  }, [showBackdrop]);\n\n  return (\n    <div>\n      <div className=\"page-path\">\n        <div className=\"parent-direction\">\n          <label>Dashboard</label>\n        </div>\n        <span className=\"direction-arrow\">\n          <FontAwesomeIcon icon={faAngleRight} />\n        </span>\n      </div>\n      <div className=\"employer-single-campaign\">\n        <div className=\"w-100\">\n          <div className=\"heading-content d-flex align-items-center justify-content-between flex-wrap\">\n            <h2 className=\"customHeading\">\n              {params === \"livecampaign\"\n                ? \"live campaigns\"\n                : params === \"draftcampaign\"\n                  ? \"Draft campaigns\"\n                  : \"Archived campaigns\"}\n            </h2>\n            <div>\n              {/* <FormProvider {...form}>\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\n                  <CustomSelect\n                    name=\"myoption\"\n                    options={options}\n                    registerConfig={{\n                      required: { value: true, message: \"Select is required\" },\n                    }}\n                  />\n                </form>\n              </FormProvider> */}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          {campaigns?.map((campaign, index) => (\n            <div className=\"col-lg-6 col-12 campaigncard-parent\" key={index}>\n              <div className=\"campaign-card\">\n                {campaign.job_status === \"I\" ?\n                  <div className={`Pause-box ${pauseBoxClasses[index] || ''}`}>\n                    <div className=\"iconpause\">\n                      <img src={require(\"../../../../assets/images/cruz/pause.png\")} alt=\"\" className=\"img-fluid\" />\n                      <h2 className=\"customHeading\">campaign paused</h2>\n                    </div>\n                  </div>\n                  : \"\"}\n                <div className=\"campaign-card-head\">\n                  <div className=\"card-image\">\n                    {campaign.job_images ? (\n                      <img\n                        src={baseUrl + campaign.job_images}\n                        alt=\"\"\n                        className=\"img-fluid\"\n                      />\n                    ) : (\n                      <img\n                        src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                        alt=\"Profile\"\n                        className=\"imgfluid\"\n                      />\n                    )}\n                  </div>\n                  <div className=\"card-text\">\n                    <h4 className=\"customHeading\">{campaign.job_role}</h4>\n                    <div className=\"listed-text\">\n                      <p>{campaign.vessel_size}</p>\n                      <p>{campaign.job_duration}</p>\n                      <p>{campaign.job_location}</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"campaign-card-body\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12 col-sm-12\">\n                      <div className=\"view-box\">\n                        <div className=\"content-details-box\">\n                          <div className=\"content\">\n                            <div className=\"content-body\">\n                              <div className=\"heading-sec\">\n                                <div className=\"numberof-view\">\n                                  <h2 className=\"customHeading\">\n                                    {campaign.matches}\n                                  </h2>\n                                </div>\n                                <div>\n                                  <h2 className=\"customHeading mt-1\">Matches</h2>\n                                </div>\n                              </div>\n                              <div className=\"view-action\">\n                                <Button\n                                  onClick={() => {\n                                    if (campaign.job_status === \"A\") {\n                                      if (campaign.matches !== 0) {\n                                        navigate(`/cruz/mymatches`, {\n                                          state: {\n                                            id: campaign.id,\n                                            job_role: campaign.job_role,\n                                          }\n                                        });\n                                      } else {\n                                        Swal.fire({\n                                          title: \"No Match!\",\n                                          text: \"There is no matches\",\n                                          icon: \"info\",\n                                          timer: 3000,\n                                          showConfirmButton: false,\n                                          backdrop: `\n                                          rgba(255, 255, 255, 0.5)\n                                          left top\n                                          no-repeat\n                                          filter: blur(5px);\n                                        `,\n                                          background: '#fff',\n                                        });\n                                      }\n                                    }\n                                  }}\n                                  text=\"view\"\n                                  icon={false}\n                                  iconname={faEye}\n                                  className=\"button-reverse\"\n                                  theme=\"light\"\n                                  img={eyeImage}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"content-details-box find-crew-box\">\n                          <div className=\"content\">\n                            <div className=\"content-body col-12\">\n                              <div className=\"heading-sec\">\n                                <div>\n                                  <h2 className=\"customHeading\">Find Crew</h2>\n                                </div>\n                              </div>\n                              <div className=\"view-action\">\n                                <Button\n                                  onClick={() => {\n                                    if (campaign.job_status === \"A\") {\n                                      campaign.employee_count > 0\n                                        ? navigate(\"/cruz/matchedprofile\", {\n                                          state: {\n                                            job_id: campaign.id,\n                                            employee_ids: campaign.employee_ids,\n                                            employee_count: campaign.employee_count\n                                          },\n                                        })\n                                        : Swal.fire({\n                                          title: \"No Crews!\",\n                                          text: \"There is no matched crew profiles Found\",\n                                          icon: \"info\",\n                                          timer: 3000,\n                                          showConfirmButton: false,\n                                          backdrop: `\n                                          rgba(255, 255, 255, 0.5)\n                                          left top\n                                          no-repeat\n                                          filter: blur(5px);\n                                        `,\n                                          background: '#fff',\n                                        })\n                                    }\n                                  }}\n                                  text=\"Go\"\n                                  icon={false}\n                                  className=\"button-reverse\"\n                                  theme=\"light\"\n                                  img={search}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"view-postedSection\">\n                          <div className=\"posted\">\n                            <span>Posted : {campaign.created_at}</span>\n                          </div>\n                          <div className=\"Seen\">\n                            <span>\n                              Seen by {campaign.job_seen_count} Members\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {campaign.job_status === \"A\" || campaign.job_status === \"I\" ? (\n                      <div className=\"col-md-12 campaign-column\">\n                        <div className=\"view-details\">\n                          <h4 className=\"customHeading manage-campaign\">\n                            MANAGE Campaign\n                          </h4>\n                          <div className=\"menu-click\">\n                            <div className=\"link-text\">\n                              <a className=\"manage-campainlink\" onClick={(event) => handleToggle(event, { id: campaign.id, status: campaign.job_status })}>Manage Campaign</a>\n                            </div>\n                          </div>\n                          {(isMobile && isVisible) || !isMobile ? (\n                            <div id={dynamicId} className=\"button-groups\">\n                              <div className=\"manage-campaigntext d-md-none\">\n                                <span>Manage Campaign</span>\n                              </div>\n                              <Button\n                                onClick={() =>\n                                  campaign.job_status !== \"D\"\n                                    ? jobView(campaign.id)\n                                    : \"\"\n                                }\n                                text=\"view\"\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={Eye}\n                              />\n                              <Button\n                                onClick={() =>\n                                  campaign.is_deleted === \"N\"\n                                    ? navigate(`/cruz/job/${campaign.id}`)\n                                    : \"\"\n                                }\n                                text={buttonText}\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={edit}\n                              />\n                              <div className=\"edit-parameteroption\">\n\n                                <Button\n                                  onClick={() =>\n                                    campaign.is_deleted === \"N\"\n                                      ? navigate(`/cruz/job/${campaign.id}`,\n                                        {\n                                          state: {\n                                            firstIndex: 3,\n                                            secondIndex: 0,\n                                          },\n                                        })\n                                      : \"\"\n                                  }\n                                  text=\"Edit Search Parameters\"\n                                  icon={false}\n                                  className=\"button-reverse\"\n                                  theme=\"light\"\n                                  img={editparameter}\n                                />\n                              </div>\n                              <div className=\"edit-parameteroption\">\n                                <Button\n                                  onClick={() =>\n                                    navigate(\n                                      `/cruz/mylikedprofile`,\n                                      {\n                                        state: {\n                                          id: campaign.id,\n                                          job_role: campaign.job_role,\n                                        }\n                                      }\n                                    )\n                                  }\n                                  text=\"Liked Profiles\"\n                                  icon={true}\n                                  iconname={faThumbsUp}\n                                  className=\"button-reverse liked-view\"\n                                  theme=\"light\"\n                                />\n                                <Button\n                                  onClick={() =>\n                                    navigate(\n                                      `/cruz/mydislikedprofile`,\n                                      {\n                                        state: {\n                                          id: campaign.id,\n                                          job_role: campaign.job_role,\n                                        }\n                                      }\n                                    )\n                                  }\n                                  text=\"Disliked Profiles\"\n                                  icon={true}\n                                  className=\"button-reverse\"\n                                  theme=\"light\"\n                                  iconname={faThumbsDown}\n                                />\n                              </div>\n                              <Button\n                                onClick={() => {\n                                  if (selectedCampaign && selectedCampaign.status !== \"D\") {\n                                    pauseCampaign(selectedCampaign.id, selectedCampaign.status);\n                                  } else if (campaign && campaign.job_status !== \"D\") {\n                                    pauseCampaign(campaign.id, campaign.job_status);\n                                  }\n                                }}\n\n                                text={\n                                  campaign.job_status === \"I\" ? isMobile ? \"Unpause Campaign\" : \"Unpause\"\n                                    : isMobile ? \"Pause Campaign\" : \"Pause\"\n                                }\n                                icon={true}\n                                iconname={\n                                  campaign.job_status === \"I\"\n                                    ? faPlayCircle\n                                    : faPauseCircle\n                                }\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                              />\n                              <Button\n                                onClick={() =>\n                                  campaign.job_status !== \"D\"\n                                    ? toggleMenu(index)\n                                    : \"\"\n                                }\n                                text=\"\"\n                                icon={true}\n                                iconname={faEllipsisH}\n                                className=\"button-reverse btn-togglemenu d-none\"\n                                theme=\"light\"\n                              />\n                              <div className=\"archive-camapaignoption\">\n                                <Button\n                                  onClick={() => deleteCampaign(campaign.id)}\n                                  text=\"End / Archive Campaign\"\n                                  icon={false}\n                                  iconname={faTrashAlt}\n                                  className=\"button-reverse\"\n                                  theme=\"light\"\n                                  img={trash}\n                                />\n                              </div>\n                              <Dropdown\n                                key={index}\n                                isOpen={dropdownOpen[index] || false}\n                                toggle={() => {\n                                  if (campaign.job_status !== \"D\") {\n                                    toggleDropdown(index);\n                                  }\n                                }}\n                                className=\"d-sm-none d-md-block\"\n                                direction=\"down\"\n                              >\n                                <DropdownToggle caret key={index}>\n                                  <FontAwesomeIcon icon={faEllipsisH} />\n                                </DropdownToggle>\n                                <DropdownMenu container=\"body\" key={index}>\n                                  <DropdownItem onClick={function noRefCheck() { }}>\n                                    <Button\n                                      onClick={() => console.log(\"Hello\")}\n                                      text=\"Clone this Campaign\"\n                                      icon={true}\n                                      iconname={faClone}\n                                      className=\"button-reverse d-none\"\n                                      theme=\"light\"\n                                    />\n                                  </DropdownItem>\n                                  <DropdownItem onClick={function noRefCheck() { }}>\n                                    <Button\n                                      onClick={() =>\n                                        campaign.is_deleted === \"N\"\n                                          ? navigate(`/cruz/job/${campaign.id}`,\n                                            {\n                                              state: {\n                                                firstIndex: 3,\n                                                secondIndex: 0,\n                                              },\n                                            })\n                                          : \"\"\n                                      }\n                                      text=\"Edit Search Parameters\"\n                                      icon={false}\n                                      className=\"button-reverse\"\n                                      theme=\"light\"\n                                      img={editparameter}\n                                    />\n                                  </DropdownItem>\n                                  <DropdownItem key={index} onClick={function noRefCheck() { }}>\n                                    <Button\n                                      onClick={() =>\n                                        navigate(\n                                          `/cruz/mylikedprofile`,\n                                          {\n                                            state: {\n                                              id: campaign.id,\n                                              job_role: campaign.job_role,\n                                            }\n                                          }\n                                        )\n                                      }\n                                      text=\"My Liked Profiles\"\n                                      icon={true}\n                                      iconname={faThumbsUp}\n                                      className=\"button-reverse liked-view\"\n                                      theme=\"light\"\n                                    />\n                                  </DropdownItem>\n                                  <DropdownItem key={index} onClick={function noRefCheck() { }}>\n                                    <Button\n                                      onClick={() =>\n                                        navigate(\n                                          `/cruz/mydislikedprofile`,\n                                          {\n                                            state: {\n                                              id: campaign.id,\n                                              job_role: campaign.job_role,\n                                            }\n                                          }\n                                        )\n                                      }\n                                      text=\"Disliked Profiles\"\n                                      icon={true}\n                                      className=\"button-reverse dislike\"\n                                      theme=\"light\"\n                                      iconname={faThumbsDown}\n                                    />\n                                  </DropdownItem>\n                                  <DropdownItem key={index} onClick={function noRefCheck() { }}>\n                                    <Button\n                                      onClick={() => deleteCampaign(campaign.id)}\n                                      text=\"End / Archive Campaign\"\n                                      icon={false}\n                                      className=\"button-reverse\"\n                                      theme=\"light\"\n                                      img={trash}\n                                    />\n                                  </DropdownItem>\n                                </DropdownMenu>\n                              </Dropdown>\n                            </div>\n                          ) : null}\n                        </div>\n\n\n                        {visibleActionSteps === index && (\n                          <div className=\"action-steps\">\n                            <div className=\"button-groups\">\n                              <Button\n                                onClick={() => console.log(\"Hello\")}\n                                text=\"Clone this Campaign\"\n                                icon={true}\n                                iconname={faClone}\n                                className=\"button-reverse d-none\"\n                                theme=\"light\"\n                              />\n                              <Button\n                                onClick={() =>\n                                  campaign.is_deleted === \"N\"\n                                    ? navigate(`/cruz/job/${campaign.id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 3,\n                                          secondIndex: 0,\n                                        },\n                                      })\n                                    : \"\"\n                                }\n                                text=\"Edit Search Parameters\"\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={editparameter}\n                              />\n                              <Button\n                                onClick={() =>\n                                  navigate(\n                                    `/cruz/mylikedprofile`,\n                                    {\n                                      state: {\n                                        id: campaign.id,\n                                        job_role: campaign.job_role,\n                                      }\n                                    }\n                                  )\n                                }\n                                text=\"Liked Profiles\"\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={Eye}\n                              />\n                              <Button\n                                onClick={() =>\n                                  navigate(\n                                    `/cruz/mydislikedprofile`,\n                                    {\n                                      state: {\n                                        id: campaign.id,\n                                        job_role: campaign.job_role,\n                                      }\n                                    }\n                                  )\n                                }\n                                text=\"Disliked Profiles\"\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={Eye}\n                              />\n                              <Button\n                                onClick={() => deleteCampaign(campaign.id)}\n                                text=\"End / Archive Campaign\"\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={trash}\n                              />\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ) : campaign.job_status === \"D\" ?\n                      (\n                        <div>\n                          {campaign.is_deleted === \"N\" ? (\n                            <div className=\"d-flex button-archive\">\n                              <Button\n                                onClick={() =>\n                                  navigate(`/cruz/job/${campaign.id}`)\n                                }\n                                text={buttonText}\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={edit}\n                              />\n                              <Button\n                                onClick={() => deleteCampaign(campaign.id)}\n                                text=\"End / Archive Campaign\"\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={trash}\n                              />\n                            </div>\n                          ) : (\n                            <div className=\"d-flex button-archive\">\n                              <Button\n                                onClick={() => activateCampaign(campaign.id)}\n                                text={\"Reactivate\"}\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={activate}\n                              />\n                              <Button\n                                onClick={() => removeCampaign(campaign.id)}\n                                text=\"Delete Campaign\"\n                                icon={false}\n                                className=\"button-reverse\"\n                                theme=\"light\"\n                                img={trash}\n                              />\n                            </div>\n                          )}\n                        </div>\n                      ) : \"\"}\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { SingleCampaign } from \"../SingleCampaign/SingleCampaign\";\nimport \"./CampaignList.scss\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const CampaignList = () => {\n  return (\n    <div className=\"employer-campaign-list\">\n      <SingleCampaign />\n    </div>\n  );\n};\n","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { CampaignList } from \"../../components/CampaignList/CampaignList\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  useGlobalModalContext,\n  MODAL_TYPES,\n} from \"../../../../utils/GlobalModal\";\nimport { getUserData } from \"../../../../utils/Utils\";\nimport { useEffect } from \"react\";\n\nexport const ViewCampaign = () => {\n  const userData = getUserData(\"userData\");\n  let memberType = \"\";\n  try {\n    if (userData !== null) {\n      memberType = userData.Member_type;\n    } else {\n      console.error(\"User data not found in local storage\");\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n  const { showModal } = useGlobalModalContext();\n  const memberModal = () => {\n    showModal(MODAL_TYPES.MEMBERSHIP_MODAL);\n  };\n  useEffect(() => {\n    if (!memberType) memberModal();\n  }, []);\n  const { params } = useParams();\n  return (\n    <div className=\"ViewCampaign-pageComponent\">\n      <div className=\"heading-content\">\n        <h2 className=\"customHeading\">\n          {params === \"livecampaign\"\n            ? \"live campaigns\"\n            : params === \"draftcampaign\"\n              ? \"Draft campaigns\"\n              : \"Archived campaigns\"}\n        </h2>\n      </div>\n      <CruzLayout link=\"Employer\">\n        <CampaignList />\n      </CruzLayout>\n    </div>\n\n  );\n};\n","import { CustomSlider } from \"../../../../components/CustomSlider/CustomSlider\";\nimport { Heading } from \"../../../../components/Heading/Heading\";\nimport \"./EmployeeProfile.scss\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useEmployeeProfileQuery } from \"../ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport React from \"react\";\n\n\ninterface Media {\n    id: number;\n    media_file: string;\n}\ninterface Slide {\n    image: string;\n    url: string;\n    alt: string;\n    isLink: boolean;\n}\ninterface Referrance {\n    id: string;\n    name: string;\n}\ninterface EmployeeProfile {\n    employee_id: number;\n    members_name: string;\n    members_fname: string;\n    members_lname: string;\n    employee_passport: string;\n    employee_location: string;\n    employee_experience: string;\n    employee_avilable: string;\n    employee_salary_expection: string;\n    employee_visa: string;\n    employee_dob: string;\n    employee_gender: string;\n    employee_last_role: string;\n    employee_interest: string;\n    employee_about: string;\n    employee_intro: string;\n    employee_role: string;\n    employee_qualification: string;\n    employee_languages: string;\n    employee_position: string;\n    employee_vessel: string;\n    is_liked: string;\n    is_match: string;\n    referrance: Referrance[];\n}\n\ninterface EmployeeProfileProps {\n    employeeProfile: EmployeeProfile | null;\n    medias: Media[];\n}\nexport const EmployeeProfile: React.FC<EmployeeProfileProps> = ({\n    employeeProfile,\n    medias\n}) => {\n\n    const calculateAge = (dob: string | undefined): number => {\n        if (dob != undefined) {\n            const birthDate = new Date(dob);\n            const today = new Date();\n            const age = today.getFullYear() - birthDate.getFullYear();\n            const monthDifference = today.getMonth() - birthDate.getMonth();\n\n            if (\n                monthDifference < 0 ||\n                (monthDifference === 0 && today.getDate() < birthDate.getDate())\n            ) {\n                return age - 1;\n            }\n\n            return age;\n        }\n        return 0;\n    };\n    const navigate = useNavigate();\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    let slides: Slide[] = [];\n    let imageNum = 1;\n\n    if (Array.isArray(medias)) {\n        imageNum = medias.length;\n        slides = medias\n            .filter((media: Media) => {\n                const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'];\n                const extension = media.media_file.split('.').pop()?.toLowerCase();\n                return imageExtensions.includes(extension || '');\n            })\n            .map((media: Media) => ({\n                image: baseUrl + media.media_file,\n                url: '#',\n                alt: `Image ${media.id}`,\n                isLink: true,\n            }));\n    }\n    const slidesettings = {\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        infinite: slides.length > 1,\n        dots: true,\n        centerPadding: \"100%\",\n        responsive: [\n            {\n                breakpoint: 767,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                    dots: true,\n                    centerPadding: \"10%\",\n                    arrows: false,\n                },\n            },\n        ],\n    };\n\n\n\n    return (\n        <div className=\"profile-section\">\n            <div className=\"view-profile-section\">\n                <div className=\"profile-box\">\n                    <div className=\"profile-box-header\">\n                        <div className=\"profile-name\">\n                            <Heading>\n                                {employeeProfile?.members_fname +\n                                    \" \" +\n                                    employeeProfile?.members_lname}\n                            </Heading>\n                            <div className=\"location\">{employeeProfile?.employee_location}</div>\n                        </div>\n                        {employeeProfile?.is_liked && employeeProfile?.is_liked === 'Y' && employeeProfile?.is_match !== 'Y' && (\n                            <div className=\"profile-status\">\n                                <span className=\"d-block\">Available</span>\n                                <div className=\"Matched \">\n                                    <span className=\"Matched-names\">I’M KEEN</span>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"profile-box-body\">\n                        <ul className=\"quick-details\">\n                            <li>{employeeProfile?.employee_role}</li>\n                            <li>{calculateAge(employeeProfile?.employee_dob)} years</li>\n                            <li>{employeeProfile?.employee_gender}</li>\n                        </ul>\n                        <div className=\"profile-overview\" style={{ whiteSpace: \"pre-line\" }}>\n                            <p>{employeeProfile?.employee_intro} </p>\n                        </div>\n                        {slides?.length > 0 ? (\n                            <CustomSlider settings={slidesettings} items={slides} />\n                        ) : (\n                            \"\"\n                        )}\n                        <div className=\"employer-custom-card\">\n                            <div className=\"employer-custom-card-title\">\n                                <Heading>Essentials</Heading>\n                            </div>\n                            <div className=\"employer-custom-card-body\">\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Name:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span> {employeeProfile?.members_fname +\n                                                \" \" +\n                                                employeeProfile?.members_lname}\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Role :</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_role}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-3'>\n                                        <label>Nationality:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-md-3 col-5'>\n                                        <div className=\"view-data\">\n                                            <span> {employeeProfile?.employee_passport}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Available:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_avilable}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Age:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{calculateAge(employeeProfile?.employee_dob)}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Location:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_location}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"employer-custom-card\">\n                            <div className=\"employer-custom-card-title\">\n                                <Heading>interested in</Heading>\n                            </div>\n                            <div className=\"employer-custom-card-body\">\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Duration:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_position}</span>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Vessel Type:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_vessel}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Salary:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_salary_expection}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"employer-custom-card\">\n                            <div className=\"employer-custom-card-title\">\n                                <Heading>HISTORY</Heading>\n                            </div>\n                            <div className=\"employer-custom-card-body\">\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Years experience:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_experience}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Last Role:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <span style={{ whiteSpace: \"pre-line\" }}>{employeeProfile?.employee_last_role}</span>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Qualifications:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_qualification}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"employer-custom-card\">\n                            <div className=\"employer-custom-card-title\">\n                                <Heading>OTHER</Heading>\n                            </div>\n                            <div className=\"employer-custom-card-body\">\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Languages:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_languages}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Visas:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_visa}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Interests:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>{employeeProfile?.employee_interest}</span>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"item-box row\">\n                                    <div className='options-heading col-md-3 col-5'>\n                                        <label>Reference:</label>\n                                    </div>\n                                    <div className='col-xl-9 col-6'>\n                                        <div className=\"view-data\">\n                                            <span>\n                                                {employeeProfile?.referrance\n                                                    .map((ref, index) => (\n                                                        <React.Fragment key={ref.id}>\n                                                            <a style={{ cursor: \"pointer\" }}\n                                                                onClick={() =>\n                                                                    navigate(`/publicprofile`, {\n                                                                        state: ref.id,\n                                                                    })\n                                                                }\n                                                            >\n                                                                {ref.name}\n                                                            </a>\n                                                            {index < employeeProfile.referrance.length - 1 && ', '}\n                                                        </React.Fragment>\n                                                    ))}\n                                            </span>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"employer-custom-card\">\n                            <div className=\"employer-custom-card-title\">\n                                <Heading>Bio</Heading>\n                            </div>\n                            <div className=\"employer-custom-card-body\">\n                                <div className=\"item-box\">\n                                    <span style={{ whiteSpace: \"pre-line\" }}>{employeeProfile?.employee_about} </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import { Button } from \"../../../../components/Button/Button\";\nimport { useState, useEffect } from \"react\";\nimport \"./ModalMatch.scss\";\nimport { getUserData } from \"../../../../utils/Utils\";\ninterface ProfileMatchProps {\n  handleChat?: () => void;\n  handleSubmitNext?: () => void;\n  profilePic?: string;\n}\nexport const ProfileMatch: React.FC<ProfileMatchProps> = ({\n  handleChat = () => { },\n  handleSubmitNext = () => { },\n  profilePic,\n}) => {\n\n  const userData = getUserData(\"userData\");\n  let memberProfilePic = \"\";\n  try {\n    if (userData !== null) {\n      memberProfilePic = userData.members_profile_picture;\n    } else {\n      // console.error(\"User data not found in local storage\");\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n  // if (profilePic)\n  //   console.log(\"profilepic\", baseUrl + profilePic);\n  return (\n    <div className=\"Employee-ProfilematchModal\">\n      <div className=\"row\">\n        <h2 className=\"customHeading\">IT’S A MATCH!</h2>\n        <div className=\"text-para\">\n          <p>You’re both interested in each other.</p>\n        </div>\n        <div className=\"imagegrid\">\n          <div className=\"grid\">\n            {memberProfilePic ? (\n              <img\n                src={memberProfilePic}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            ) : (\n              <img\n                src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                alt=\"Profile\"\n                className=\"img-fluid\"\n              />\n            )}\n\n\n          </div>\n          <div className=\"grid\">\n            {profilePic ? (\n              <img\n                src={baseUrl + profilePic}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            ) : (\n              <img\n                src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                alt=\"Profile\"\n                className=\"img-fluid\"\n              />\n            )}\n\n          </div>\n        </div>\n        <div className=\"chatOption-btn\">\n          <Button\n            onClick={handleChat}\n            text=\"Chat with the Employee\"\n            icon={true}\n            className=\"chat-optionbtn\"\n          />\n          <a onClick={handleSubmitNext} className=\"chatlater\">\n            Continue & chat later\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ProfileMatch;","import { Button } from \"../../../../components/Button/Button\";\nimport { useState, useEffect } from \"react\";\nimport \"./ModalMatch.scss\";\ninterface WhatHappenProps {\n  handleSubmit?: () => void;\n}\nexport const WhatHappen: React.FC<WhatHappenProps> = ({\n  handleSubmit = () => { },\n}) => {\n\n  return (\n    <div className=\"Employee-Profilemodal\">\n      <div className=\"row\">\n        <h2 className=\"customHeading\">what happens next?</h2>\n        <div className=\"text-para\">\n          <p>\n            We’ve let the person know you’re interested in them, if they’re interested too, you’ll be connected.\n            If you want to learn more about how CRUZ works, tap the link below.\n          </p>\n        </div>\n        <div className=\"modal-actions\">\n          <Button\n            onClick={() => handleSubmit()}\n            text=\"Continue\"\n            icon={true}\n            theme=\"light\"\n            className=\"w-100 btn-dark\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default WhatHappen;","import { apiSlice } from \"../../../../app/apiSlice\";\n\nexport const employerProfileApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    employerProfile: builder.query({\n      query: ({ id }) => ({\n        url: `/employer/previewJobAdvert/${id}`,\n        method: \"GET\",\n      }),\n    }),\n\n    campaignMatchesList: builder.mutation({\n      query: (jobData) => ({\n        url: \"/employer/campaignMatchesList\",\n        method: \"POST\",\n        body: jobData,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }),\n    }),\n\n    likeCampaign: builder.mutation({\n      query: (jobData) => ({\n        url: \"/employer/likeCampaign\",\n        method: \"POST\",\n        body: jobData,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }),\n      invalidatesTags: [{ type: 'SideMenu' }],\n    }),\n\n    unLikeCampaign: builder.mutation({\n      query: (jobData) => ({\n        url: \"/employer/unlikeCampaign\",\n        method: \"POST\",\n        body: jobData,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }),\n      invalidatesTags: [{ type: 'SideMenu' }],\n    }),\n\n\n  }),\n  overrideExisting: true,\n});\n\nexport const {\n  useEmployerProfileQuery,\n  useCampaignMatchesListMutation,\n  useLikeCampaignMutation,\n  useUnLikeCampaignMutation,\n} = employerProfileApiSlice;\n","import { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface BreadcrumbsProps {\n    mainbreadcrumb: string;\n    secondbreadcrumb: string | null;\n    thirdbreadcrumb?: string;\n    redirectUrl: string;\n}\nexport const Breadcrumbs: React.FC<BreadcrumbsProps> = ({\n    mainbreadcrumb,\n    secondbreadcrumb,\n    thirdbreadcrumb,\n    redirectUrl,\n}) => {\n\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"page-path\">\n            <div className=\"parent-direction\">\n                <label><a style={{ cursor: \"pointer\" }} onClick={() => navigate(`${redirectUrl}`)}>{mainbreadcrumb}</a></label>\n            </div>\n            <span className=\"direction-arrow\">\n                <FontAwesomeIcon icon={faAngleRight} />\n            </span>\n            <div className=\"child-direction\">\n                <label>{secondbreadcrumb}</label>\n            </div>\n            {thirdbreadcrumb && thirdbreadcrumb ? (\n                <>\n                    <span className=\"direction-arrow\">\n                        <FontAwesomeIcon icon={faAngleRight} />\n                    </span>\n                    <div className=\"child-direction\">\n                        <label>{thirdbreadcrumb}</label>\n                    </div>\n                </>\n            ) : \"\"}\n        </div>\n    )\n\n}","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { EmployerProfile } from \"../../components/EmployerProfile/EmployerProfile\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { Modal, ModalBody } from \"reactstrap\";\nimport { useState, useEffect } from \"react\";\nimport { EmployeeProfile } from \"../../components/EmployeeProfile/EmployeeProfile\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { ProfileMatch } from \"../../components/Modal/ProfileMatch\"\nimport { WhatHappen } from \"../../components/Modal/WhatHappen\"\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useEmployeeProfileQuery } from \"../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport { useCampaignMatchesListMutation, useLikeCampaignMutation, useUnLikeCampaignMutation } from \"../../components/EmployerProfile/EmployerProfileApiSlice\";\nimport SingleChatMain from \"../../../Chat/PrivateChat/SingleChatMain/SingleChatMain\";\nimport { EmployeeInterface, MemberInterface } from \"../../../../types/PrivateChatInterfaces\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\nimport { useSocket } from \"../../../../contexts/SocketContext\";\n\ninterface EmpDetails {\n  job_id: number;\n  employee_ids: number[];\n  employee_count: number;\n}\ninterface Media {\n  id: number;\n  media_file: string;\n}\n\nexport const ViewProfile = () => {\n  const [modal1Open, setModal1Open] = useState(false);\n  const [modal2Open, setModal2Open] = useState(false);\n  const [modalCall, setModalCall] = useState(true);\n\n  const toggleModal1 = () => {\n    setModal1Open(!modal1Open);\n  };\n\n  const toggleModal2 = () => {\n    setModal2Open(!modal2Open);\n  };\n  const location = useLocation();\n  const [page, setPage] = useState(1);\n  const [employeeProfile, setEmployeeProfile] = useState(null);\n  const [medias, setMedias] = useState<Media[]>([]);\n  const [employeeId, setEmployeeId] = useState(null);\n  const [employeeDetails, setEmployeeDetails] = useState<EmpDetails>(location.state as EmpDetails);\n  const [availableProfile] = useCampaignMatchesListMutation();\n  const [likeCampaign] = useLikeCampaignMutation();\n  const [unLikeCampaign] = useUnLikeCampaignMutation();\n  const [empProfilePic, setEmpProfilePic] = useState();\n  const [loading, setLoading] = useState(false);\n  const [employeeName, setEmployeeName] = useState(null);\n  const { setIsChatVisible, setPrivateChatMember, setIsInterview, setEmployeeDetails: socketSetEmployeeDetails, setChatType } = useSocket();\n  const [pageDetails, setPageDetails] = useState('');\n  const [isMatch, setIsmMatch] = useState<boolean>(false);\n  const [profilePic, setProfilePic] = useState();\n  const Loading = () => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 300);\n    return () => clearTimeout(timer);\n  }\n  useEffect(() => {\n    const fetchAvailableJobs = async () => {\n      if (employeeDetails.employee_ids && employeeDetails.job_id) {\n        let jobData = {\n          employee_ids: employeeDetails.employee_ids,\n          job_id: employeeDetails.job_id,\n          page: page,\n        };\n        setLoading(true);\n        try {\n          const response = await availableProfile(jobData);\n          if ('data' in response && response.data) {\n            setEmployeeProfile(response.data.data[0]);\n            setMedias(response.data.data[0].employee_images);\n            setEmployeeName(response.data.data[0].members_name)\n            setEmployeeId(response.data.data[0].employee_id);\n            if (response.data.data[0].is_match === 'Y') {\n              setIsmMatch(true);\n\n              setEmpProfilePic(response.data.data[0].member_profile_picture);\n              setIsInterview(true);\n              setChatType('CRUZ');\n              setPrivateChatMember(response.data.data[0].member);\n              setIsChatVisible(true);\n              socketSetEmployeeDetails({\n                employee_id: response.data.data[0].employee_id,\n                job_id: employeeDetails.job_id\n              });\n              toggleModal2();\n\n            }\n          }\n        } catch (error) {\n          console.error(\"Error fetching available jobs:\", error);\n        } finally {\n          Loading();\n        }\n      }\n    };\n\n    fetchAvailableJobs();\n    setPageDetails(`Viewing ${page} of ${employeeDetails.employee_count} matching profiles`);\n  }, [employeeDetails.employee_ids, employeeDetails.job_id, page, availableProfile]);\n\n  const navigate = useNavigate();\n  const handleNext = async () => {\n    if (page < employeeDetails.employee_count) {\n      setPage(prevPage => prevPage + 1);\n    } else {\n      setPageDetails('No more Profiles to show');\n      const timer = setTimeout(() => {\n        navigate('/cruz/viewcampaign/livecampaign');\n      }, 700);\n    }\n\n\n  }\n  const handleBack = async () => {\n    if (page > 1) {\n      setPage(prevPage => prevPage - 1);\n    }\n\n  }\n  const handleLike = async () => {\n    try {\n      //setLoading(true);\n      let profileData = {\n        job_id: employeeDetails.job_id,\n        employee_id: employeeId,\n      }\n      const response = await likeCampaign(profileData);\n      if ('data' in response && response.data) {\n        if (response.data.is_match === 'Y') {\n          setEmpProfilePic(response.data.data.member_profile_picture);\n          setIsInterview(true);\n          setChatType('CRUZ');\n          setPrivateChatMember(response.data.data);\n          setIsChatVisible(true);\n          if (profileData.employee_id && profileData.job_id) {\n            socketSetEmployeeDetails({\n              employee_id: profileData.employee_id,\n              job_id: profileData.job_id\n            });\n          }\n          toggleModal2();\n        } else {\n          if (modalCall === true) {\n            toggleModal1();\n          }\n          setModalCall(false);\n          if (page - 1 < employeeDetails.employee_count) {\n            handleNext();\n          } else {\n            handleBack();\n          }\n        }\n\n      }\n    } catch (error) {\n      console.error(\"Error fetching available jobs:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const handleDisLike = async () => {\n    try {\n      //setLoading(true);\n      let profileData = {\n        job_id: employeeDetails.job_id,\n        employee_id: employeeId,\n      }\n      const response = await unLikeCampaign(profileData);\n      if ('data' in response && response.data) {\n        handleNext();\n      }\n    } catch (error) {\n      console.error(\"Error fetching available jobs:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const handleSubmit = () => {\n    toggleModal1();\n\n  };\n\n  const handleSubmitNext = () => {\n    toggleModal2();\n    setIsChatVisible(false);\n    if (page - 1 < employeeDetails.employee_count) {\n      handleNext();\n    } else {\n      handleBack();\n    }\n  };\n\n  const handleChat = () => {\n    toggleModal2();\n    if (page - 1 < employeeDetails.employee_count) {\n      handleNext();\n    } else {\n      handleBack();\n    }\n  };\n  const [isEnvelopePresent, setIsEnvelopePresent] = useState(false);\n  useEffect(() => {\n    const checkForEnvelope = () => {\n      const hasEnvelopeWrapper = document.body.contains(document.querySelector('.envolope-wrapper'));\n      setIsEnvelopePresent(hasEnvelopeWrapper);\n    };\n    checkForEnvelope();\n    const observer = new MutationObserver(checkForEnvelope);\n    observer.observe(document.body, { childList: true, subtree: true });\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <div className=\"viewProfile employer-profileparent view-profile-componentPage\">\n      <div className=\"d-flex align-items-center justify-content-between d-md-none profile-componentPage\">\n        <div className=\"findjobs\">\n          <span>Find Jobs</span>\n          <span className=\"direction-arrow\">\n            <FontAwesomeIcon icon={faAngleRight} />\n          </span>\n        </div>\n        <div className=\"d-md-none d-sm-block count-employeecount\">\n          <p>{page} of {employeeDetails.employee_count}</p>\n        </div>\n      </div>\n      <CruzLayout link=\"Employer\">\n        {loading ? (\n          <div className=\"page-loader\">\n            <div className=\"page-innerLoader\">\n              <div className=\"spinner-border\" role=\"status\">\n                <img src={require(\"../../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"center-layout\">\n            <div className=\"d-flex align-items-center justify-content-between\">\n              <Breadcrumbs\n                mainbreadcrumb=\"Live Campaign\"\n                secondbreadcrumb={employeeName}\n                redirectUrl=\"/cruz/viewcampaign/liveCampaign\"\n              />\n            </div>\n            <EmployeeProfile employeeProfile={employeeProfile} medias={medias} />\n          </div>\n        )}\n        {!isMatch && (\n          <div className=\"layout-action\">\n            <div className={`action-options ${isEnvelopePresent ? 'active-menu' : ''}`}>\n              <a onClick={() => handleDisLike()}>\n                <img\n                  src={require(\"../../../../assets/images/cruz/close-icon.png\")}\n                  alt=\"\"\n                  className=\"img-fluid\"\n                />\n              </a>\n              <a onClick={() => handleBack()}>\n                <img\n                  src={require(\"../../../../assets/images/cruz/direction.png\")}\n                  alt=\"\"\n                  className=\"img-fluid\"\n                />\n              </a>\n              <a onClick={() => handleLike()}>\n                <img\n                  src={require(\"../../../../assets/images/cruz/Tick.png\")}\n                  alt=\"\"\n                  className=\"img-fluid\"\n                />\n              </a>\n            </div>\n            <div className=\"views\">\n              <p>{pageDetails}</p>\n            </div>\n          </div>\n        )}\n      </CruzLayout>\n      <Modal\n        isOpen={modal1Open}\n        toggle={toggleModal1}\n        className=\"sidebar-modal\"\n        fade={false}\n        backdrop=\"static\"\n      >\n        <ModalBody>\n          <WhatHappen handleSubmit={handleSubmit} />\n        </ModalBody>\n      </Modal>\n      <Modal\n        isOpen={modal2Open}\n        toggle={toggleModal2}\n        className=\"sidebar-modal\"\n        fade={false}\n      >\n        <ModalBody>\n          <ProfileMatch handleChat={handleChat} handleSubmitNext={handleSubmitNext} profilePic={empProfilePic} />\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\nexport default ViewProfile;\n","import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from 'axios';\nimport { Button } from '../../../../components/Button/Button';\nimport { useEmployerVarificationMutation, useGetVarificationStatusMutation } from '../../Api/CampaignApiSlice';\nimport { EmployerRegister } from '../../components/EmployerRegister/EmployerRegister';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { Heading } from '../../../../components/Heading/Heading';\nimport \"../../components/EmployerRegister/EmployerRegister.scss\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useSaveJobMutation } from '../../Api/CruzMainApiSlice';\n\nexport const Register = () => {\n\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showLoaderMessage, setShowLoaderMessage] = useState(false);\n    const [verificationStatus, setVerificationStatus] = useState<boolean>(false);\n    const [employerVarification] = useEmployerVarificationMutation();\n    const [getVarificationStatus] = useGetVarificationStatusMutation();\n    const [saveJob] = useSaveJobMutation();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { jobId, jobRole } = location.state || {};\n    const handleSubmit = async () => {\n        let job_status = 'D';\n        if (verificationStatus) {\n            job_status = 'A';\n        }\n        let formData = {\n            id: jobId,\n            job_role: jobRole,\n            job_status: job_status,\n        }\n        const response = await saveJob(formData);\n        if (job_status === 'A') {\n            navigate('/cruz/viewcampaign/livecampaign');\n        } else {\n            navigate('/cruz/viewcampaign/draftcampaign');\n        }\n\n    }\n\n    const BtnSave = async () => {\n        try {\n            let job_status = 'D';\n\n            let formData = {\n                id: jobId,\n                job_role: jobRole,\n                job_status: job_status,\n            }\n            const response = await saveJob(formData);\n\n            navigate('/cruz/viewcampaign/draftcampaign');\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        }\n    };\n\n\n    const handleGoBack = () => {\n        navigate(-1);\n    };\n    const handleUpload = async () => {\n        setShowLoaderMessage(true);\n        setVerificationStatus(false);\n\n        try {\n            // Call backend to create verification session\n            const response = await employerVarification({});\n            if ('data' in response) {\n                const data = response.data;\n\n                const stripePromise = loadStripe(data.client_secret);\n\n                const stripe = await stripePromise;\n\n                // Initiate Stripe verification\n                if (stripe) {\n                    const { error } = await stripe.verifyIdentity(data.client_secret);\n\n                    if (error) {\n                        console.error('Verification failed:', error);\n                        setShowSuccessMessage(true);\n                        setVerificationStatus(false);\n                    } else {\n\n                        const varifyResponse = await getVarificationStatus({});\n                        if ('data' in varifyResponse) {\n                            setShowLoaderMessage(true);\n                            setShowSuccessMessage(true);\n                            const status = varifyResponse.data;\n                            if (status.is_doc_verified) {\n                                setVerificationStatus(true);\n                            } else {\n                                setVerificationStatus(false);\n                            }\n\n                        } else {\n                            setShowLoaderMessage(true);\n                            setShowSuccessMessage(true);\n                            setVerificationStatus(false);\n                        }\n                    }\n                }\n            }\n\n\n        } catch (error) {\n            console.error('Error creating verification session:', error);\n            setVerificationStatus(false);\n        }\n\n    };\n\n    return (\n        <div className=\"cruz-register cruz-registerparent\">\n            <div className=\"container\">\n                <div className=\"row  cruz-registerinner-content\">\n                    <div className=\"col-xl-6 col-12\">\n                        <div className=\"page-path\">\n                            <div className=\"parent-direction\">\n                                <label>Campaigns</label>\n                            </div>\n                            <span className=\"direction-arrow\">\n                                <FontAwesomeIcon icon={faAngleRight} />\n                            </span>\n\n                        </div>\n                        <div className=\"step-verification\">\n                            <span>Final Step - Verification</span>\n                        </div>\n                        {!showLoaderMessage && (\n                            <div className=\"employer-register\">\n                                <Heading>register and VERIFY AS AN EMPLOYER</Heading>\n                                <p className=\"text-para\">\n                                    To post job opportunities we require all employers to verify their\n                                </p>\n                                <div className=\"registration-form\">\n                                    <h2 className=\"customHeading\">VERIFY IDENTITY</h2>\n                                    <div className=\"description-text\">\n                                        <p>To protect our members, before we make your advert live please verify your identity. You will only have to do this once.</p>\n                                    </div>\n                                    <div className=\"proofUpload\">\n                                        <Button\n                                            onClick={handleUpload}\n                                            text=\"Verify Identity\"\n                                            theme=\"light\"\n                                            className=\"w-100\"\n                                        />\n                                    </div>\n\n                                </div>\n                            </div>\n                        )}\n                        {showLoaderMessage && (\n                            <div className=\"waiting-page\">\n                                <div className=\"contents-page\">\n                                    {!showSuccessMessage ? (\n                                        <div className=\"Wait-section\">\n                                            <h2 className=\"customHeading\">Please Wait</h2>\n                                            <div className=\"details\">\n                                                <span>We’re just confirming your details.</span>\n                                            </div>\n                                            <div className=\"page-innerLoader\">\n                                                <div className=\"spinner-border\" role=\"status\">\n                                                    <img\n                                                        src={require(\"../../../../assets/images/cruz/Frame.png\")}\n                                                        alt=\"\"\n                                                        className=\"img-fluid\"\n                                                    />\n                                                </div>\n                                                <div className=\"content-txt\">\n                                                    <span>CHECKING...</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ) : null}\n\n                                    {showSuccessMessage ? (\n                                        verificationStatus ? (\n                                            <div className=\"success-message\">\n                                                <h2 className=\"customHeading\">Success</h2>\n                                                <p>Your details have been confirmed.</p>\n                                            </div>\n                                        ) : (\n                                            <div className=\"sorry-message\">\n                                                <h2 className=\"customHeading\">Sorry</h2>\n                                                <p>Your details don’t match.</p>\n                                                <p>Please get in touch with a member of the REACH team to discuss.</p>\n                                            </div>\n                                        )\n                                    ) : null}\n                                </div>\n\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"col-xl-6 col-12\">\n                        <div className=\"action-field\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"card-content\">\n                                        <div className=\"btn-action\">\n                                            <Button\n                                                onClick={() => handleSubmit()}\n                                                text=\"Continue\"\n                                                icon={true}\n                                                theme=\"light\"\n                                                className=\"w-100\"\n                                            />\n                                        </div>\n                                        <div className=\"action-button\">\n                                            <div className=\"d-flex align-items-center justify-content-between\">\n                                                <div className=\"goback\">\n                                                    <a style={{ cursor: \"pointer\" }} onClick={handleGoBack}>Go back</a>\n\n\n                                                </div>\n                                                <div className=\"goback\">\n                                                    <a style={{ cursor: \"pointer\" }} onClick={BtnSave}>Save and exit</a>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n};\n\nexport default Register;\n","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\n\ninterface Props {\n  children: string;\n  checked?: boolean;\n  value: string\n  active: boolean;\n  name: string | undefined;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\nconst MyCheckbox: React.FC<Props> = ({ active, value, children, checked, onChange, name }) => (\n  <label>\n    <input\n      type=\"radio\"\n      className=\"Question-checkbox\"\n      checked={checked}\n      value={children}\n      onChange={onChange}\n      name={name ?? undefined}\n    />\n    <CardBody>{children}</CardBody>\n  </label>\n);\n\nexport default MyCheckbox;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./FileUpload.scss\";\nimport { getUserData } from \"../../utils/Utils\";\nimport { useUploadFileMutation } from \"./FileUploadApiSlice\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst chunkSize: number = 5 * 1024 * 1024;\n\ninterface CustomFile extends File {\n  finalFilename?: string;\n}\ninterface ProfileProps {\n  getFileName?: (name: string | null) => void;\n  folderName: string;\n  from?: string;\n}\n\nexport const FileUpload: React.FC<ProfileProps> = ({\n  getFileName = () => { },\n  folderName,\n  from,\n}) => {\n  const [uploadFile] = useUploadFileMutation();\n  const [dropzoneActive, setDropzoneActive] = useState<boolean>(false);\n  const [files, setFiles] = useState<CustomFile[]>([]);\n  const [currentFileIndex, setCurrentFileIndex] = useState<number | null>(null);\n  const [lastUploadedFileIndex, setLastUploadedFileIndex] = useState<\n    number | null\n  >(null);\n  const [currentChunkIndex, setCurrentChunkIndex] = useState<number | null>(\n    null\n  );\n\n  const [loading, setLoading] = useState(false);\n  const [errors, setError] = useState(\"\");\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  function handleDrop(e: React.DragEvent<HTMLDivElement>): void {\n    setLoading(true);\n    e.preventDefault();\n    const newFiles: File[] = Array.from(e.dataTransfer.files);\n    setFiles([...files, ...newFiles]);\n    setDropzoneActive(false); // Ensure dropzone is deactivated after dropping files\n  }\n\n  function readAndUploadCurrentChunk(): void {\n\n    const reader = new FileReader();\n    const file = files[currentFileIndex as number];\n    if (!file) {\n      return;\n    }\n    const from: number = (currentChunkIndex as number) * chunkSize;\n    const to: number = from + chunkSize;\n    const blob: Blob = file.slice(from, to);\n    reader.onload = (e: ProgressEvent<FileReader>) => uploadChunk(e);\n    reader.readAsDataURL(blob);\n  }\n  function uploadChunk(readerEvent: ProgressEvent<FileReader>): void {\n    const file: CustomFile = files[currentFileIndex as number];\n    const data: string | ArrayBuffer | null =\n      readerEvent.target?.result || null;\n\n    if (data === null) return;\n\n    let blobData: Blob;\n    if (typeof data === \"string\") {\n      // Convert string data to Blob\n      blobData = new Blob([data], { type: \"text/plain\" }); // Adjust the type as per your data\n    } else {\n      // If data is already ArrayBuffer, create Blob directly\n      blobData = new Blob([new Uint8Array(data as ArrayBuffer)]);\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", blobData, file.name);\n    formData.append(\"name\", file.name);\n    formData.append(\"folderName\", folderName);\n    formData.append(\"size\", file.size.toString());\n    formData.append(\n      \"currentChunkIndex\",\n      (currentChunkIndex as number).toString()\n    );\n    formData.append(\"totalChunks\", Math.ceil(file.size / chunkSize).toString());\n\n    uploadFile(formData)\n      .unwrap()\n      .then((response) => {\n        const fileSize: number = files[currentFileIndex as number].size;\n        const chunks: number = Math.ceil(fileSize / chunkSize) - 1;\n        const isLastChunk: boolean = (currentChunkIndex as number) === chunks;\n\n        if (isLastChunk) {\n          const finalFilename: string = response.finalFilename;\n          file.finalFilename = finalFilename;\n          setLastUploadedFileIndex(currentFileIndex);\n          setCurrentChunkIndex(null);\n        } else {\n          setCurrentChunkIndex((currentChunkIndex as number) + 1);\n        }\n        getFileName(response.finalFilename);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.error(\"File upload failed:\", error);\n      });\n  }\n\n  function handleManualUpload(): void {\n    setCurrentChunkIndex(0);\n    readAndUploadCurrentChunk();\n  }\n\n  function handleDragAreaClick(): void {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  }\n\n  useEffect(() => {\n    if (lastUploadedFileIndex === null) {\n      return;\n    }\n    const isLastFile: boolean = lastUploadedFileIndex === files.length - 1;\n    const nextFileIndex: number | null = isLastFile\n      ? null\n      : (currentFileIndex as number) + 1;\n    setCurrentFileIndex(nextFileIndex);\n  }, [lastUploadedFileIndex, files]);\n\n  useEffect(() => {\n    if (files.length > 0) {\n      if (currentFileIndex === null) {\n        setCurrentFileIndex(\n          lastUploadedFileIndex === null\n            ? 0\n            : (lastUploadedFileIndex as number) + 1\n        );\n      }\n    }\n  }, [files.length, lastUploadedFileIndex]);\n\n  useEffect(() => {\n    if (currentFileIndex !== null) {\n      setCurrentChunkIndex(0);\n    }\n  }, [currentFileIndex]);\n  useEffect(() => {\n    if (currentChunkIndex !== null) {\n      readAndUploadCurrentChunk();\n    }\n  }, [currentChunkIndex]);\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"page-loader\">\n          <div className=\"page-innerLoader\">\n            <div className=\"spinner-border\" role=\"status\">\n              <img src={require(\"../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"container\">\n          <div className=\"file-uploads\">\n            <div\n              onDragOver={(e) => {\n                setDropzoneActive(true);\n                e.preventDefault();\n              }}\n              onDragLeave={(e) => {\n                setDropzoneActive(false);\n                e.preventDefault();\n              }}\n              onDrop={(e) => handleDrop(e)}\n              onClick={handleDragAreaClick}\n              className={\"dropzone\" + (dropzoneActive ? \" active\" : \"\")}\n            >\n              <div className=\"icon-logo\">\n                {folderName === \"chat\" ?\n                  <FontAwesomeIcon icon={faPlus} />\n                  :\n                  <img src={require(\"../../assets/images/upload-icone.png\")} alt=\"\" />\n                }\n              </div>\n              {folderName === \"chat\" ?\n                <label className=\"label-for\">Upload Image</label>\n                :\n                folderName === \"employers\" ?\n                  <label className=\"label-for\">Upload <span className=\"files\">file PDF, Word Doc, Excel, JPG</span></label>\n                  :\n                  <label className=\"label-for\">Drop your files here</label>\n              }\n            </div>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              style={{ display: \"none\" }}\n              onChange={(e) => {\n                const newFiles: File[] = Array.from(e.target.files || []);\n                if (\n                  folderName === \"profile-images\" || folderName === \"employers\" || folderName === \"job-images\") {\n                  if (\n\n                    (newFiles[0].type === \"image/png\" ||\n                      newFiles[0].type === \"image/jpg\" ||\n                      newFiles[0].type === \"image/jpeg\" ||\n                      newFiles[0].type === \"image/gif\")\n                  ) {\n                    setError(\"\");\n                    setFiles([...files, ...newFiles]);\n                  } else\n                    setError(\"Invalid file format. Recommended:JPG, PNG, or GIF\");\n                }\n              }}\n            />\n            {from !== 'multiform' ? (\n              <div className=\"files\">\n                {files.map((file, fileIndex) => {\n                  let progress: number = 0;\n                  if (file.finalFilename) {\n                    progress = 100;\n                  } else {\n                    const uploading: boolean = fileIndex === currentFileIndex;\n                    const chunks: number = Math.ceil(file.size / chunkSize);\n                    if (uploading) {\n                      progress = Math.round(\n                        ((currentChunkIndex as number) / chunks) * 100\n                      );\n                    } else {\n                      progress = 0;\n                    }\n                  }\n                  return (\n                    <div key={fileIndex} className=\"file\">\n                      <div className=\"name\">{file.name}</div>\n                      <div\n                        className={\"progress \" + (progress === 100 ? \"done\" : \"\")}\n                        style={{ width: progress + \"%\" }}\n                      >\n                        {progress}%\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            ) : \"\"}\n            {errors && <p className=\"error\">{errors}</p>}\n            {/* <button\n          onClick={handleManualUpload}\n          className=\"button-style upload-btn\"\n        >\n          Upload\n        </button> */}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\n// export default FileUpload;\n","import React, { useState, ChangeEvent } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Option from './Option';\nimport CustomInput from \"../CustomInput/CustomInput\";\nimport { DobPicker } from \"../DobPicker/DobPicker\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport { FileUpload } from \"../FileUpload/FileUpload\";\ninterface StepProps {\n  title: string;\n  name: string | undefined;\n  Qsoptions: string[];\n  // formfields?: { type: string; placeholder: string }[];\n  formfields?: { type: string; name: string; placeholder: string; options?: { value: string; label: string }[] }[];\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  selectedDatas: {\n    name: string;\n    value: string;\n  }[];\n  stepIndex: number\n}\n\nconst Step: React.FC<StepProps> = ({ title, name, selectedDatas, stepIndex, Qsoptions, formfields, onChange, ...rest }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  let currentData = selectedDatas[stepIndex];\n  const [originalDate] = useState(\"0000-00-00\");\n  const [year, month, day] = originalDate.split(\"-\").map((value) => {\n    const parsedValue = parseInt(value, 10);\n    return parsedValue < 10 ? parsedValue.toString() : parsedValue;\n  }) as [number, number, number];\n  const [fileName, setFileName] = useState<string | null>(null);\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event);\n    if (currentData) {\n      currentData.value = event.target.value;\n    }\n    setActiveIndex(Qsoptions.findIndex(optionss => optionss === event.target.value));\n  };\n  const getFileName = (name: string | null) => {\n    setFileName(name);\n  };\n  const options = [\n    { value: \"option1\", label: \"Option 1\" },\n    { value: \"option2\", label: \"Option 2\" },\n    { value: \"option3\", label: \"Option 3\" },\n  ];\n\n  return (\n    <Container {...rest}>\n      <Row>\n        <Col className=\"StepQuestion\">\n          <h2 className=\"customHeading\">{title}</h2>\n        </Col>\n      </Row>\n      <Row>\n        {Qsoptions.map((option, index) => (\n          <div className=\"col-md-6 col-6 Question\" key={index} onClick={() => { setActiveIndex(index) }}>\n            <Option\n              active={index === activeIndex}\n              onChange={handleChange}\n              value={option}\n              checked={currentData && currentData.value == option}\n              name={name ?? undefined}\n            >\n              {option}\n            </Option>\n          </div>\n        ))}\n      </Row>\n      {formfields && (\n        <Row>\n          {formfields.map((field, index) => (\n            <div key={index}>\n              {field.type === 'textarea' ? (\n                <Col key={index}>\n                  <CustomInput\n                    type=\"text\"\n                    rows={4}\n                    name=\"Describe\"\n                    placeholder={field.placeholder}\n                    registerConfig={{\n                      required: { value: true, message: 'Description is required' },\n                    }}\n                    className='footer-subscription'\n                  />\n                </Col>\n              )\n                : field.type === 'text' ? (\n                  Qsoptions.length <= 0 && (\n                    <Col key={index}>\n                      <CustomInput\n                        type=\"text\"\n                        name=\"Describe\"\n                        placeholder={field.placeholder}\n                        registerConfig={{\n                          required: { value: true, message: 'Description is required' },\n                        }}\n                        className='footer-subscription'\n                      />\n                    </Col>\n                  )\n                )\n                  : field.type === 'select' ? (\n                    Qsoptions.length <= 0 && (\n                      <div className='Qsoptions-select'>\n                        <Col key={index}>\n                          <CustomSelect\n                            name=\"myoption\"\n                            options={options}\n                            registerConfig={{\n                              required: { value: false, message: \"Select is required\" }\n                            }}\n                          />\n                        </Col>\n                      </div>\n                      //   <Col key={index}>\n                      //   {field.type === 'select' && field.options && (\n                      //     <CustomSelect\n                      //       name={field.name ?? \"\"}\n                      //       options={field.options}\n                      //       registerConfig={{\n                      //         required: { value: false, message: \"Select is required\" }\n                      //       }}\n                      //     />\n                      //   )}\n                      // </Col>\n                    )\n                  ) : field.type === 'image' ? (\n                    Qsoptions.length <= 0 && (\n                      <Col key={index} className='multistepform-upload'>\n                        <div className=\"Current-Profile\">\n                          <div className=\"profile-image\">\n                            <img src={field.placeholder} alt=\"\" />\n                          </div>\n                          <div className='Current-Profiletxt'>\n                            <span>Use Current Profile image</span>\n                          </div>\n                        </div>\n                        <div className='text-content'>\n                          <p>or</p>\n                        </div>\n                        <FileUpload getFileName={getFileName} folderName=\"employers\" />\n                      </Col>\n                    )\n                  ) :\n                    (\n                      <Col key={index}>\n                        <DobPicker\n                          registerConfig={{\n                            required: { value: true, message: \"DOB is required\" },\n                          }}\n                        // initialValues={{\n                        //   dobDay: day,\n                        //   dobMonth: month,\n                        //   dobYear: year,\n                        // }}\n                        />\n                      </Col>\n                    )}\n            </div>\n          ))}\n        </Row>\n      )}\n\n\n    </Container>\n  );\n};\n\nexport default Step;\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Progress } from 'reactstrap';\nimport Step from \"./Step\";\nimport \"./MultiStepForm.scss\";\nimport { Button } from \"../../components/Button/Button\";\nimport { MultiStepFormProps } from \"../../types/MultiStepFormInterface\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { getUserData } from '../../utils/Utils';\ninterface FormData {\n  [key: string]: string;\n}\ninterface formValues {\n  Question: string;\n  answers: string;\n  Describe: string;\n  name: string;\n  myoption: string;\n}\n\nexport const MultiStepForm = (props: MultiStepFormProps) => {\n\n  const userData = getUserData(\"userData\");\n  let memberdp = \"\";\n  try {\n    if (userData !== null) {\n      memberdp = userData.members_profile_picture;\n    } else {\n      console.error(\"User data not found in local storage\");\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n\n  const steps = [\n    {\n      title: ' JOB DETAILS',\n      questions: [\n        {\n          title: 'What’s the main job role?',\n          name: 'jobRoles',\n          options: ['Chief Engineer / month', 'Deck Hand', '2nd Engineer', 'Captain', 'Head Chef', 'First Officer', 'Sous Chef', 'Second Officer', 'Boson', 'Chief Steward / Stewardess', 'Purser', 'Steward / Stewardess']\n\n        },\n        {\n          title: 'TYPE OF BOAT',\n          name: 'boatType',\n          options: ['Private', 'Charter', 'Other']\n        },\n        {\n          title: 'duration',\n          name: 'jobDuration',\n          options: ['Permanent', 'Seasonal', 'Temporary']\n        },\n        {\n          title: 'start date',\n          formfields: [\n            { label: '', type: '', name: '', placeholder: '', required: false }\n          ]\n        },\n      ]\n    },\n    {\n      title: 'Summary',\n      questions: [\n        {\n          title: 'Summary of the role',\n          formfields: [\n            { label: '', type: 'textarea', name: 'Describe', placeholder: \"Type details of the job here, dates, responsibilities, salary, location, experience required etc.\", required: false }\n          ]\n        },\n        {\n          title: 'image',\n          formfields: [\n            { label: '', type: 'image', name: 'Describe', placeholder: memberdp, required: false }\n          ]\n        },\n        {\n          title: 'Search parameters',\n          formfields: [\n            { label: '', type: 'select', name: 'myoption1', placeholder: \"\", required: false, },\n            { label: '', type: 'select', name: 'myoption2', placeholder: \"\", required: false },\n            { label: '', type: 'select', name: 'myoption3', placeholder: \"\", required: false },\n            { label: '', type: 'select', name: 'myoption4', placeholder: \"\", required: false },\n          ]\n        },\n      ]\n    },\n    {\n      title: 'The Boat',\n      questions: [\n        {\n          title: 'Vessel',\n          formfields: [\n            { label: '', type: 'textarea', name: 'Describe', placeholder: \"Describe the boat here.\", required: false }\n          ]\n        },\n        {\n          title: 'Location',\n          name: 'boatLocation',\n          options: ['Mediterranean', 'North America', 'Caribbean', 'Northern Europe', 'Africa', 'Australia', 'Asia', 'South America']\n        },\n        {\n          title: 'Motor or sail',\n          name: 'boat',\n          options: ['Motor', 'sail']\n        },\n        {\n          title: 'vessel Size',\n          name: 'vessel',\n          options: ['M'],\n        }\n      ]\n    }\n  ];\n\n\n  const form = useForm<formValues>();\n  const [stepIndex, setStepIndex] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [formData, setFormData] = useState<FormData>({});\n  const [formErrors, setFormErrors] = useState({});\n  const [selectedOption, setSelectedOption] = useState<string>('');\n  const { register, control, handleSubmit, formState, watch } = form;\n  const { errors } = formState;\n  const [errorMessage, setErrorMsg] = useState(\"\");\n  const [formDataByStep, setFormDataByStep] = useState<Array<FormData>>(Array(steps.length).fill({}));\n  const [datas, setDatas] = useState<{ name: string; value: string; }[]>([]);\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    form.setValue(name as \"Question\" | \"name\", value);\n    const updatedFormData = { ...formDataByStep };\n    updatedFormData[stepIndex] = { ...updatedFormData[stepIndex], [name]: value };\n    setFormDataByStep(updatedFormData);\n    setFormErrors({ ...formErrors, [name]: '' });\n    setSelectedOption(value);\n    setDatas(prevState => [...prevState, { name: name, value: value }]);\n  };\n  const toggleStep = () => {\n    const errors = validateForm();\n    if (Object.keys(errors).length === 0) {\n      if (questionIndex < steps[stepIndex].questions.length - 1) {\n        setQuestionIndex(questionIndex + 1);\n      } else if (stepIndex < steps.length - 1) {\n        setStepIndex(stepIndex + 1);\n        setQuestionIndex(0);\n      }\n    } else {\n      setFormErrors(errors);\n    }\n  };\n  const goBack = () => {\n    if (questionIndex > 0) {\n      setQuestionIndex(questionIndex - 1);\n    } else {\n      if (stepIndex > 0) {\n        setStepIndex(stepIndex - 1);\n        setFormDataByStep({ ...formDataByStep, [stepIndex]: formData });\n        setQuestionIndex(steps[stepIndex - 1].questions.length - 1);\n      }\n    }\n  };\n  const BtnSave = async () => {\n    let answeredQuestionsCount = 0;\n    const answeredQuestionsDetails: { [key: string]: string }[] = [];\n    Object.keys(formDataByStep[stepIndex]).forEach(key => {\n      const question = steps[stepIndex].questions.find(question => {\n        if (question.options) {\n          return question.options.includes(formDataByStep[stepIndex][key]);\n        } else if (question.formfields) {\n          return question.formfields.some(field => field.name === key);\n        }\n        return false;\n      });\n      if (question) {\n        answeredQuestionsCount++;\n        answeredQuestionsDetails.push({ [question.title]: formDataByStep[stepIndex][key] });\n      }\n    });\n  };\n\n  const resetStep = () => {\n    setStepIndex(0);\n    setQuestionIndex(0);\n    setFormData({});\n    setFormErrors({});\n    setSelectedOption('');\n  };\n\n  const validateForm = () => {\n    const errors: { [key: string]: string } = {};\n    const currentQuestion = steps[stepIndex].questions[questionIndex];\n    if (currentQuestion.formfields) {\n      currentQuestion.formfields.forEach((field) => {\n        if (field.required && !formData[field.name]) {\n          errors[field.name] = `${field.label} is required`;\n        }\n      });\n    }\n    return errors;\n  };\n\n  return (\n    <div className=\"multistepForm\">\n      <Container className=\"text-center multistepForm-parent\">\n        <Row>\n          <FormProvider {...form}>\n            <form\n              className=\"MultiQuestionForm\"\n              onSubmit={handleSubmit(BtnSave)}\n              noValidate\n            >\n              <Col className=\"col-lg-7 col-12\">\n                <div className=\"step-count\">\n                  <p>\n                    Step {stepIndex + 1}  <span className=\"Caption\"> - {steps[stepIndex].title}</span>\n                  </p>\n                </div>\n                <Progress value={((questionIndex + 1) / steps[stepIndex].questions.length) * 100} />\n                <div className=\"Stepper\">\n                  <Step\n                    title={steps[stepIndex].questions[questionIndex].title}\n                    name={steps[stepIndex].questions[questionIndex].name ?? undefined}\n                    Qsoptions={steps[stepIndex].questions[questionIndex].options || []}\n                    formfields={steps[stepIndex].questions[questionIndex].formfields}\n                    onChange={(event: any) => handleInputChange(event)}\n                    selectedDatas={datas}\n                    stepIndex={questionIndex}\n                  />\n                </div>\n              </Col>\n              <Col className=\"action-groups col-lg-5 col-12\">\n                <div className=\"action-steps\">\n                  <div className=\"continue-action\">\n                    <Button\n                      text={stepIndex === steps.length - 1 ? 'Continue' : 'Continue'}\n                      icon={true}\n                      theme=\"light\"\n                      className=\"btn-continue\"\n                      onClick={toggleStep}\n                      disabled={!formData || (stepIndex === steps.length - 1 && questionIndex === steps[stepIndex].questions.length - 1)}\n                    />\n                  </div>\n                  <div className=\"prev-action\">\n                    <Button\n                      text=\"Go back\"\n                      icon={false}\n                      className=\"btn-prev\"\n                      onClick={goBack}\n                      disabled={stepIndex === 0 && questionIndex === 0}\n                    />\n                    <Button\n                      onClick={BtnSave}\n                      text=\"Save and exit\"\n                      icon={false}\n                      className=\"btn-save\"\n                    />\n                  </div>\n                  {stepIndex === steps.length - 1 && questionIndex === steps[stepIndex].questions.length - 1 && (\n                    <Button onClick={resetStep} className='d-none'>Reset</Button>\n                  )}\n                </div>\n              </Col>\n            </form>\n          </FormProvider>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\nimport \"../../../../assets/scss/cruz.scss\";\nimport {MultiStepForm} from \"../../../../components/MultiStepForm/MultiStepForm\";\nexport const PostJob = () =>{\n    return(\n        // <CruzLayout></CruzLayout>\n        <div className=\"PostJob-parent\">\n           <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"page-path\">\n                        <div className=\"parent-direction\">\n                            <label>Campaigns</label>\n                        </div>\n                        <span className=\"direction-arrow\">\n                            <FontAwesomeIcon icon={faAngleRight} />\n                        </span>\n                        <div className=\"child-direction\">\n                            <label>Post a new Campaign</label>\n                        </div>\n                    </div>\n                    <MultiStepForm children={undefined}></MultiStepForm>\n                </div>\n           </div>\n        </div>\n    )\n}\nexport default PostJob;","import { CustomSlider } from \"../../../../components/CustomSlider/CustomSlider\";\nimport { Heading } from \"../../../../components/Heading/Heading\";\nimport \"./EmployerProfile.scss\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { useEmployerProfileQuery } from \"./EmployerProfileApiSlice\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Breadcrumbs } from \"../Breadcrumbs/Breadcrumbs\";\ninterface Media {\n  media_file: string;\n}\ninterface JobProfile {\n  members_fname?: string;\n  members_lname?: string;\n  vessel_size?: number;\n  job_duration?: string;\n  boat_location?: string;\n  employee_intro?: string;\n  job_role?: string;\n  boat_type?: string;\n  job_start_date?: string;\n  vessel_desc?: string;\n  vessel_type?: string;\n  job_summary?: string;\n  is_match?: string;\n  is_liked?: string;\n}\n\ninterface EmployerProfileProps {\n  jobProfile: JobProfile | null;\n  medias: Media[];\n  from?: string;\n}\nexport const EmployerProfile: React.FC<EmployerProfileProps> = ({\n  jobProfile,\n  medias,\n  from\n}) => {\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n  const [slides, setSlides] = useState<{ image: string; alt: string }[]>([]);\n\n  useEffect(() => {\n    if (medias?.length > 0) {\n      const newSlides = medias.map((media: Media) => ({\n        image: baseUrl + \"/\" + media.media_file,\n        alt: \"Image\",\n        url: '#',\n        isLink: true,\n      }));\n      setSlides(newSlides);\n    }\n  }, [medias]);\n\n  // const slides = [\n  //   {\n  //     image: require(\"../../../../assets/images/partners/banner-1.png\"),\n  //     alt: \"Image 1\",\n  //   },\n  //   {\n  //     image: require(\"../../../../assets/images/partners/banner-1.png\"),\n  //     alt: \"Image 2\",\n  //   },\n  //   {\n  //     image: require(\"../../../../assets/images/partners/banner-1.png\"),\n  //     alt: \"Image 2\",\n  //   },\n  // ];\n\n  const slidesettings = {\n    slidesToShow: 2,\n    dots: true,\n    slidesToScroll: 1,\n    infinite: slides.length > 1,\n    centerPadding: \"100%\",\n    responsive: [\n      {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          centerPadding: \"10%\",\n          arrows: false,\n        },\n      },\n    ],\n  };\n  let redirect = '/cruz/employeedashboard';\n  if (from === 'Employer') {\n    redirect = \"/cruz/viewcampaign/livecampaign\";\n  }\n  return (\n    <div className=\"profile-section\">\n      <Breadcrumbs\n        mainbreadcrumb=\"Dashboard\"\n        secondbreadcrumb={`${jobProfile?.job_role} for ${jobProfile?.job_duration} in the ${jobProfile?.boat_location}`}\n        redirectUrl={redirect}\n      />\n\n      <div className=\"view-profile-section\">\n        <div className=\"profile-box\">\n          <div className=\"profile-box-header\">\n            <div className=\"profile-name\">\n              <Heading>\n                {jobProfile?.job_role}\n              </Heading>\n              {/* <div className=\"location\">{jobProfile?.location_name}</div> */}\n            </div>\n            {/* <div className=\"profile-status\">\n              <span>Available</span>\n            </div> */}\n            {jobProfile?.is_liked && jobProfile.is_liked === 'Y' && jobProfile.is_match !== 'Y' && (\n              <div className=\"TheyLikeYou\">\n                <span>\n                  THEY LIKE YOU</span>\n              </div>\n            )}\n          </div>\n          <div className=\"profile-box-body\">\n            <ul className=\"quick-details\">\n              <li>{jobProfile?.vessel_size} {jobProfile?.boat_type}</li>\n              <li>{jobProfile?.job_duration}</li>\n              <li>{jobProfile?.boat_location}</li>\n            </ul>\n            <div className=\"profile-overview\">\n              <p>{jobProfile?.employee_intro}</p>\n            </div>\n            {slides?.length > 0 ? (\n              <CustomSlider settings={slidesettings} items={slides} />\n            ) : (\n              \"\"\n            )}\n            <div className=\"employer-custom-card\">\n              <div className=\"employer-custom-card-title\">\n                <Heading>The Role</Heading>\n              </div>\n              <div className=\"employer-custom-card-body\">\n                <div className=\"item-box row\">\n                  <div className='options-heading col-md-3 col-5'>\n                    <label>Job Title :</label>\n                  </div>\n                  <div className='col-xl-9 col-6'>\n                    <div className=\"view-data\">\n                      <span>{jobProfile?.job_role}</span>\n                    </div>\n                  </div>\n\n                </div>\n                <div className=\"item-box row\">\n                  <div className='options-heading col-md-3 col-5'>\n                    <label>Boat Type :</label>\n                  </div>\n                  <div className='col-xl-9 col-6'>\n                    <div className=\"view-data\">\n                      <span>{jobProfile?.boat_type}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"item-box row\">\n                  <div className='options-heading col-md-3 col-5'>\n                    <label>Duration :</label>\n                  </div>\n                  <div className='col-xl-9 col-6'>\n                    <div className=\"view-data\">\n                      <span>{jobProfile?.job_duration}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"item-box row\">\n                  <div className='options-heading col-md-3 col-5'>\n                    <label>Start Date :</label>\n                  </div>\n                  <div className='col-xl-9 col-6'>\n                    <div className=\"view-data\">\n                      <span>{jobProfile?.job_start_date}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"employer-custom-card\">\n              <div className=\"employer-custom-card-title\">\n                <Heading>The Boat</Heading>\n              </div>\n              <div className=\"employer-custom-card-body\">\n                <div className=\"item-box row\">\n                  <div className='options-heading col-md-3 col-5'>\n                    <label>Vessel :</label>\n                  </div>\n                  <div className='col-xl-9 col-6'>\n                    <div className=\"view-data\">\n                      <span>{jobProfile?.vessel_desc}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"item-box row\">\n                  <div className='options-heading col-md-3 col-5'>\n                    <label>Location :</label>\n                  </div>\n                  <div className='col-xl-9 col-6'>\n                    <div className=\"view-data\">\n                      <span>{jobProfile?.boat_location}</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"item-box row\">\n                  <div className='options-heading col-md-3 col-5'>\n                    <label>Size :</label>\n                  </div>\n                  <div className='col-xl-9 col-6'>\n                    <div className=\"view-data\">\n                      <span>{jobProfile?.vessel_size} {jobProfile?.boat_type}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"employer-custom-card\">\n              <div className=\"employer-custom-card-title\">\n                <Heading>Summary</Heading>\n              </div>\n              <div className=\"employer-custom-card-body\">\n                <div className=\"item-box\">\n                  <span>{jobProfile?.job_summary}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { apiSlice } from \"../../../../app/apiSlice\";\n\nexport const employeeProfileApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    employeeProfile: builder.query({\n      query: () => ({\n        url: \"/employee/reviewProfile\",\n        method: \"GET\",\n      }),\n      providesTags: ['SideMenu'],\n    }),\n\n    availableJobsList: builder.mutation({\n      query: (jobData) => ({\n        url: \"/employee/availableJobsList\",\n        method: \"POST\",\n        body: jobData,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }),\n    }),\n\n    likeEmployee: builder.mutation({\n      query: (jobData) => ({\n        url: \"/employee/likeEmployee\",\n        method: \"POST\",\n        body: jobData,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }),\n      invalidatesTags: [{ type: 'SideMenu' }],\n    }),\n\n    employeeMyMatches: builder.query({\n      query: () => ({\n        url: \"/employee/myMatchesList\",\n        method: \"GET\",\n      }),\n      providesTags: ['SideMenu'],\n    }),\n\n    employeeLikedJob: builder.query({\n      query: () => ({\n        url: \"/employee/myLikedList\",\n        method: \"GET\",\n      }),\n      providesTags: ['SideMenu'],\n    }),\n\n    unlikeEmployee: builder.mutation({\n      query: (jobData) => ({\n        url: \"/employee/unlikeEmployee\",\n        method: \"POST\",\n        body: jobData,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n\n      }),\n      invalidatesTags: ['SideMenu'],\n    }),\n    employeeDisLikedJob: builder.query({\n      query: () => ({\n        url: \"/employee/myDislikedList\",\n        method: \"GET\",\n\n      }),\n      providesTags: ['SideMenu'],\n    }),\n\n\n  }),\n  overrideExisting: true,\n});\n\nexport const {\n  useEmployeeProfileQuery,\n  useAvailableJobsListMutation,\n  useLikeEmployeeMutation,\n  useEmployeeMyMatchesQuery,\n  useEmployeeLikedJobQuery,\n  useUnlikeEmployeeMutation,\n  useEmployeeDisLikedJobQuery,\n} = employeeProfileApiSlice;\n","import { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ReactElement, JSXElementConstructor, ReactNode, ReactPortal, Key, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Modal, ModalHeader, ModalBody, NavLink } from \"reactstrap\";\nimport { EmployeeProfile } from \"../EmployeeProfile/EmployeeProfile\";\nimport { EmployerProfile } from \"../EmployerProfile/EmployerProfile\";\nimport { useAvailableJobsListMutation } from \"../ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport { useCampaignMatchesListMutation } from \"../EmployerProfile/EmployerProfileApiSlice\";\nimport { useSocket } from \"../../../../contexts/SocketContext\";\nimport { MemberInterface } from \"../../../../types/PrivateChatInterfaces\";\nimport { format } from 'date-fns';\n\ninterface Matches {\n    id: number;\n    employee_role: string;\n    member_name: string;\n    members_profile_picture: string;\n    date: string;\n    member_id?: number;\n}\ninterface LikeCardProps {\n    matches: Matches[];\n    handleLike?: (id: number) => Promise<void>;\n    from?: string;\n    type: string;\n    showButton?: boolean;\n    getId?: string;\n}\ninterface Media {\n    id: number;\n    media_file: string;\n}\n\nexport const LikeCard: React.FC<LikeCardProps> = ({\n    matches,\n    handleLike,\n    from,\n    type,\n    showButton = true,\n    getId,\n}) => {\n    const navigate = useNavigate();\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    const [availableJobs] = useAvailableJobsListMutation();\n    const [availableProfile] = useCampaignMatchesListMutation();\n\n    const [modal, setModal] = useState(false);\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    const [loading, setLoading] = useState(false);\n    const [jobProfile, setJobProfile] = useState(null);\n    const [medias, setMedias] = useState<Media[]>([]);\n    const Loading = () => {\n        const timer = setTimeout(() => {\n            setLoading(false);\n        }, 300);\n        return () => clearTimeout(timer);\n    }\n    const handleShow = async (id: number, type: string) => {\n        if (type === 'employee') {\n            let jobData = {\n                employee_id: getId,\n                job_ids: [id],\n                page: 1,\n            };\n            setLoading(true);\n            try {\n                const response = await availableJobs(jobData);\n                if ('data' in response && response.data) {\n                    setJobProfile(response.data.data[0]);\n                    setMedias(response.data.data[0].job_images);\n                }\n            } catch (error) {\n                console.error(\"Error fetching available jobs:\", error);\n            } finally {\n                Loading();\n            }\n            toggle();\n        } else {\n            let jobData = {\n                job_id: getId,\n                employee_ids: [id],\n                page: 1,\n            };\n            setLoading(true);\n            try {\n                const response = await availableProfile(jobData);\n                if ('data' in response && response.data) {\n                    setJobProfile(response.data.data[0]);\n                    setMedias(response.data.data[0].employee_images);\n                }\n            } catch (error) {\n                console.error(\"Error fetching available jobs:\", error);\n            } finally {\n                Loading();\n            }\n            toggle();\n        }\n    }\n\n    const { socket, privateMembers } = useSocket();\n    const [activeMembers, setActiveMembers] = useState<string[]>([]);\n\n    useEffect(() => {\n        setActiveMembers(() => {\n            return privateMembers.filter(member => member.active == true).map(member => String(member.member_id));\n        });\n    }, [privateMembers]);\n\n    useEffect(() => {\n        if (!socket?.connected) {\n            setActiveMembers([]);\n            return;\n        }\n    }, [socket]);\n\n    const getLastMessageTime = (memberId: string | undefined) => {\n        if (memberId) {\n            const isoDateString = privateMembers.find(member => member.member_id == memberId)?.last_message_time;\n            if (isoDateString) {\n                return format(new Date(isoDateString), \"dd MMMM yyyy hh:mm a\");\n            }\n        }\n\n        return null;\n    };\n    return (\n        <div className=\"myMatches pl-0\">\n            <div className=\"innerbody\">\n                <table className=\"table match-result-table\">\n                    <tbody>\n                        {matches?.map((emp: Matches, index: number) => {\n                            const lastMessageTime = getLastMessageTime(String(emp?.member_id));\n\n                            return (\n                                <tr key={index}>\n                                    <td>\n                                        <div className=\"profile-status\">\n                                            <div className={emp.member_id && activeMembers.includes(String(emp.member_id)) ? \"profile-check\" : \"\"}>\n                                                <FontAwesomeIcon icon={faCircle} />\n                                            </div>\n                                            <a style={{ cursor: \"pointer\" }} onClick={() => handleShow(emp.id, type)} >\n                                                <div className=\"profile-image\">\n\n                                                    {emp.members_profile_picture ? (\n                                                        <img\n                                                            src={baseUrl + emp.members_profile_picture}\n                                                            alt=\"Profile\"\n                                                            className=\"imgfluid\"\n                                                        />\n                                                    ) : (\n                                                        <img\n                                                            src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                                                            alt=\"Profile\"\n                                                            className=\"imgfluid\"\n                                                        />\n                                                    )}\n\n                                                </div>\n                                            </a>\n                                            <div className=\"profile-details\">\n                                                <a style={{ cursor: \"pointer\" }} onClick={() => handleShow(emp.id, type)}>\n                                                    {type === 'employer' ? (\n                                                        <>\n                                                            <h5><span style={{ color: \"#FFFFFF\" }}>{emp.member_name}</span></h5>\n                                                            <div className=\"emp-membername\">\n                                                                <span>{emp.employee_role}</span>\n                                                            </div>\n                                                        </>\n                                                    ) : (\n                                                        <>\n                                                            <h5><span style={{ color: \"#FFFFFF\" }}>{emp.employee_role}</span></h5>\n                                                            <div className=\"emp-membername\">\n                                                                <span>{emp.member_name}</span>\n                                                            </div>\n                                                        </>\n                                                    )}\n\n                                                </a>\n                                            </div>\n\n\n\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <div className=\"profile-message pt-0 profile-messagecard\">\n                                            {showButton === true ? (\n                                                <div className=\"profile-details\">\n                                                    {handleLike && (\n                                                        <a style={{ cursor: \"pointer\" }} onClick={() => handleLike(emp.id)}>\n                                                            {from === 'Liked' ? (\n                                                                <img\n                                                                    src={require(\"../../../../assets/images/cruz/close-icon.png\")}\n                                                                    alt=\"\"\n                                                                    className=\"img-fluid\"\n                                                                />\n                                                            ) : (\n                                                                <img\n                                                                    src={require(\"../../../../assets/images/cruz/Tick.png\")}\n                                                                    alt=\"\"\n                                                                    className=\"img-fluid\"\n                                                                />\n                                                            )}\n\n                                                        </a>\n                                                    )}\n                                                </div>\n                                            ) : \"\"}\n                                            {showButton === false ? (\n                                                <div className={lastMessageTime ? \"message\" : \"d-none\"}>\n                                                    <h5>\n                                                        Last Message\n                                                        <br></br>\n                                                        <span>{lastMessageTime}</span>\n                                                    </h5>\n                                                </div>\n                                            ) : \"\"}\n                                            <div className=\"arrow-collapse\">\n                                                {handleLike && showButton === false ? (\n                                                    <button className=\"link-action btn-linkemail\" style={{ cursor: \"pointer\" }} onClick={() => handleLike(emp.id)}><FontAwesomeIcon icon={faAngleRight} /></button>\n                                                ) : (\n                                                    <button className=\"link-action btn-linkemailtype\" style={{ cursor: \"pointer\" }} onClick={() => handleShow(emp.id, type)}><FontAwesomeIcon icon={faAngleRight} /></button>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n\n                <Modal\n                    isOpen={modal}\n                    toggle={toggle}\n                    centered\n                    className=\"Preview-mode-modal\"\n                >\n                    <ModalBody>\n                        <ModalHeader toggle={toggle}>\n                        </ModalHeader>\n                        <div className=\"action-modal\">\n                            {type === 'employee' ? (\n                                <EmployerProfile jobProfile={jobProfile} medias={medias} />\n                            ) : (\n                                <EmployeeProfile employeeProfile={jobProfile} medias={medias} />\n                            )}\n\n                        </div>\n                    </ModalBody>\n                </Modal>\n\n            </div >\n        </div>\n    )\n}","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { useMyMatchesListQuery } from \"../../Api/CampaignApiSlice\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\nimport { LikeCard } from \"../../components/LikeCard/LikeCard\";\nimport { useSocket } from \"../../../../contexts/SocketContext\";\nimport { useState } from \"react\";\nimport { EmployeeInterface, MemberInterface } from \"../../../../types/PrivateChatInterfaces\";\nimport SingleChatMain from \"../../../Chat/PrivateChat/SingleChatMain/SingleChatMain\";\nimport { useGetChatMemberMutation } from \"../../Api/CruzMainApiSlice\";\ninterface Matches {\n  id: number;\n  employee_role: string;\n  member_name: string;\n  members_profile_picture: string;\n  date: string;\n  member_id: number;\n}\n\nexport const MyMatches = () => {\n\n  const location = useLocation();\n  const { id, job_role } = location.state || {};\n  const { data, error, isLoading, isSuccess } = useMyMatchesListQuery({ id });\n  const matches: Matches[] = data?.data;\n  const [chatMemberDetails] = useGetChatMemberMutation();\n  const { setIsChatVisible, setPrivateChatMember, setIsInterview, setEmployeeDetails, setChatType } = useSocket();\n  const handleChat = async (employeeId: number) => {\n    let profileData = {\n      type: 'employee',\n      id: employeeId,\n    }\n    const response = await chatMemberDetails(profileData);\n    if ('data' in response && response.data) {\n      setIsInterview(true);\n      setChatType('CRUZ');\n      setPrivateChatMember(response.data.data);\n      setIsChatVisible(true);\n      if (id) {\n        setEmployeeDetails({\n          employee_id: employeeId,\n          job_id: parseInt(id, 10)\n        });\n      }\n    }\n\n  };\n  return (\n    <CruzLayout link=\"Employer\">\n      <div className=\"myMatches\">\n        <Breadcrumbs\n          mainbreadcrumb=\"Live Campaign\"\n          secondbreadcrumb={job_role}\n          redirectUrl=\"/cruz/viewcampaign/livecampaign\"\n          thirdbreadcrumb=\"My Matches\"\n        />\n        <div className=\"innerHeading\">\n          <h2 className=\"customHeading\">\n            MY MATCHES for\n            <br></br>\n            <span>{job_role}</span>\n          </h2>\n        </div>\n        <LikeCard matches={matches} getId={id} type={\"employer\"} handleLike={handleChat} showButton={false} />\n      </div>\n    </CruzLayout>\n  );\n};\nexport default MyMatches;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../../assets/scss/employee.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, NavLink } from \"reactstrap\";\nimport { Heading } from '../../../../components/Heading/Heading';\nimport { Button } from '../../../../components/Button/Button';\nimport { Hero } from '../../../../components/Hero/Hero';\nimport { useNavigate } from \"react-router-dom\";\nimport { useCMSPageMutation } from '../../../CmsContent/CmsContentApiSlice';\nexport interface CruzeWork {\n    cruz_title: string;\n    short_description: string;\n    cruz_description: string;\n\n}\nexport const ProfileSetup = () => {\n    const navigate = useNavigate();\n    const handleSubmit = () => {\n        navigate(\"/cruz/createprofile\");\n    };\n    const [modal, setModal] = useState(false);\n    const toggle = () => {\n        setModal(!modal);\n    };\n    const [cmsPageMutation, { isLoading }] = useCMSPageMutation();\n    const [cruzDetails, setCruzDetails] = useState<CruzeWork>({ cruz_title: '', short_description: '', cruz_description: '' });\n    const fetchCMSContentFromAPI = async () => {\n        try {\n            const response = await cmsPageMutation({ slug: 'cruz_jobs' });\n            if (\"error\" in response) {\n                throw new Error(\"Failed to fetch cms page\");\n            } else {\n                const data = await response.data.data;;\n                const short_description = data.cruz_description.slice(0, 167) + \"...\";\n                setCruzDetails({ cruz_title: data.cruz_title, short_description: short_description, cruz_description: data.cruz_description });\n            }\n\n\n        } catch (error) {\n            console.error(\"Failed to cms page codes:\", error);\n        }\n    };\n\n    // Fetch cms page  when the component mounts\n    useEffect(() => {\n        fetchCMSContentFromAPI();\n    }, []);\n\n    return (\n        <div className=\"Employee-profilesetup\">\n            <Hero\n                className=\"d-none\"\n                source={require(\"../../../../assets/images/cruz/hero-sec.png\")}\n                title=\"let’s set up your profile\"\n            >\n            </Hero>\n            <div className='profile-setup'>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-6 col-12\">\n                            <div className=\"setupprofile-leftblock\">\n                                <img src={require(\"../../../../assets/images/cruz/cruz-image.png\")} alt=\"\" className=\"img-fluid\" />\n                                <div className=\"caption\">\n                                    <h2 className=\"customHeading\">let’s set up your profile</h2>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6 col-12\">\n                            <div className=\"profilesetup-rightblock\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <div>\n                                            <Button\n                                                onClick={() => handleSubmit()}\n                                                text=\"Begin\"\n                                                icon={true}\n                                                theme=\"light\"\n                                                className=\"w-100\"\n                                            />\n                                        </div>\n                                        <div className=\"caption-text\">\n                                            <img src={require(\"../../../../assets/images/cruz/timer.png\")} alt=\"\" className=\"img-fluid\" />\n                                            <span>Takes approximately 6 mins to complete</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"info-details\">\n                                    <h2 className=\"customHeading\">{cruzDetails.cruz_title}</h2>\n                                    <div className=\"details\">\n                                        <span>\n                                            <div className=\"text-white\"\n                                                dangerouslySetInnerHTML={{ __html: cruzDetails.short_description }}\n                                            />\n                                        </span>\n                                        <a className=\"action-link\" onClick={() => toggle()}>Learn more</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Modal\n                isOpen={modal}\n                toggle={toggle}\n                centered\n                className=\"CRUZ-info-Modal\"\n            >\n                <ModalBody>\n                    <ModalHeader toggle={toggle}>\n                        <Heading tag=\"h3\" className=\"text-center\">\n\n                            {cruzDetails.cruz_title}\n                        </Heading>\n                    </ModalHeader>\n                    <div className=\"modal-content-details\">\n                        <div className=\"text-black\"\n                            dangerouslySetInnerHTML={{ __html: cruzDetails.cruz_description }}\n                        />\n                    </div>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\nexport default ProfileSetup;","import { CardProps } from '../../types';\nimport './Card.scss'\n\nexport const Card = (props: CardProps) => {\n    const { source, children, classname, theme } = props;\n    return (\n        <div className={`custom-card-box membership-cardbox ${classname ? classname : ''} ${theme ? theme : 'primary'}`}>\n            {source && <div className='card-image'>\n                <img src={source} alt=\"\" className=\"img-fluid setHeight\" />\n            </div>}\n            {\n                children && <div className='content-box membership-heighlight'>\n                    {children}\n                </div>\n            }\n        </div>\n    )\n}","import React from \"react\";\nimport { Hero } from \"../../components/Hero/Hero\";\nimport { Heading } from \"../../components/Heading/Heading\";\nimport { Card } from \"../../components/Card/Card\";\nimport { Button } from \"../../components/Button/Button\";\nimport { getUserData } from \"../../utils/Utils\";\nimport { useEffect, useState } from \"react\";\nimport \"../../assets/scss/cruz.scss\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../utils/GlobalModal\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomLoader from \"../../components/CustomLoader/CustomLoader\";\nimport ContentLoader, { Instagram } from 'react-content-loader';\nimport { CruzLayout } from \"../../components/Layout/CruzLayout\";\nimport { useCMSPageMutation } from \"../../features/CmsContent/CmsContentApiSlice\";\nimport { CmsPage } from \"../../types\";\nfunction Cruz() {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const navigate = useNavigate();\n  const userData = getUserData(\"userData\");\n  let memberType = \"\";\n  let IsEmployer = \"\";\n  let IsEmployee = \"\";\n  try {\n    if (userData !== null) {\n      memberType = userData.Member_type;\n      IsEmployer = userData.IsEmployer;\n      IsEmployee = userData.IsEmployee;\n    } else {\n      console.error(\"User data not found in local storage\");\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n\n  const [jobDetails, setJobDetails] = useState<CmsPage>({ pageHeader: '', pageDetails: '', pageImage: '', pageSlug: '' });\n  const [crewDetails, setCrewDetails] = useState<CmsPage>({ pageHeader: '', pageDetails: '', pageImage: '', pageSlug: '' });\n  const [cmsPageMutation, { isLoading }] = useCMSPageMutation();\n\n  const fetchCMSContentFromAPI = async () => {\n    try {\n      const response = await cmsPageMutation({ slug: 'cruz_jobs' });\n      const crewresponse = await cmsPageMutation({ slug: 'cruz_crew' });\n      if (\"error\" in response) {\n        throw new Error(\"Failed to fetch cms page\");\n      } else {\n        const data = await response.data.data;\n        setJobDetails(data); // Update state with fetched data\n      }\n      if (\"error\" in crewresponse) {\n        throw new Error(\"Failed to fetch cms page\");\n      } else {\n        const data = await crewresponse.data.data;\n        setCrewDetails(data); // Update state with fetched data\n      }\n\n    } catch (error) {\n      console.error(\"Failed to cms page codes:\", error);\n    }\n  };\n\n  // Fetch cms page  when the component mounts\n  useEffect(() => {\n    fetchCMSContentFromAPI();\n  }, []);\n\n  let sidebar = '';\n  if (IsEmployer === 'Y' && IsEmployee === 'Y') {\n    sidebar = 'both';\n  } else if (IsEmployer === 'Y') {\n    sidebar = 'Employer';\n  } else if (IsEmployee === 'Y') {\n    sidebar = 'Employee';\n  }\n  const { showModal } = useGlobalModalContext();\n  const memberModal = () => {\n    showModal(MODAL_TYPES.MEMBERSHIP_MODAL);\n  };\n  useEffect(() => {\n    if (!memberType) memberModal();\n  }, []);\n  const employerNavigate = () => {\n    if (IsEmployer === \"Y\")\n      navigate(\"/cruz/viewcampaign/livecampaign\", { state: \"livecampaign\" });\n    else navigate(\"/cruz/job\");\n  };\n  const employeeNavigate = () => {\n    // if (memberType != \"M\") {\n    //   memberModal();\n    // } else {\n    if (IsEmployee === \"Y\")\n      navigate(\"/cruz/employeedashboard\");\n    else navigate(\"/cruz/profilesetup\");\n    //}\n\n  };\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setLoading(false);\n    }, 5000);\n    return () => clearTimeout(timeoutId);\n  }, []);\n  const [hasCruzCustomClass, setHasCruzCustomClass] = useState(false);\n  useEffect(() => {\n    const cruzCustomElement = document.querySelector('.cruz-custom');\n    if (cruzCustomElement) {\n      setHasCruzCustomClass(true);\n    }\n  }, []);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <div className={`cruz-page cruz-homepage ${hasCruzCustomClass ? '' : 'cruz-withMenuHome'}`}>\n      {isLoading ? (\n        <div className=\"page-loader\">\n          <div className=\"page-innerLoader\">\n            <div className=\"spinner-border\" role=\"status\">\n              <img src={require(\"../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n            </div>\n          </div>\n        </div>\n      ) : \"\"}\n      <Hero\n        source={require(\"../../assets/images/cruz/jobpost.png\")}\n        title=\"\"\n      >\n      </Hero>\n\n      {/* {loading ? (\n        <div className=\"row mx-0 d-flex align-items-center justify-content-center\">\n          <div className=\"col-md-4\">\n            <CustomLoader className={\"\"} />\n          </div>\n          <div className=\"col-md-4\">\n            <CustomLoader className={\"\"} />\n          </div>\n         </div>\n      ) : ( */}\n      <CruzLayout link={sidebar}>\n        <div className=\"inner-child\">\n          <div className=\"cruz-headinghomepage\">\n            <Heading tag=\"h1\" className=\"primary-heading\">\n              FIND YOUR IDEAL <span className=\"text-pink\">JOB</span> OR LOOK FOR YOUR PERFECT <span className=\"text-green\">CREW</span>\n            </Heading>\n          </div>\n          <div className=\"row mx-0\">\n            <div className=\"col-md-6 col-12 px-0 Find-Jobcard\">\n              <Card source={jobDetails.pageImage}>\n                <div className=\"text-center\">\n                  <Heading tag=\"h2\">{jobDetails.pageHeader}</Heading>\n                  <p className=\"sub-captiontext\">\n                    <div className=\"text-white text-custom\"\n                      dangerouslySetInnerHTML={{ __html: jobDetails.pageDetails }}\n                    />\n                  </p>\n                  <Button\n                    onClick={() => employeeNavigate()}\n                    text=\"Search Jobs\"\n                    icon={true}\n                    theme=\"dark\"\n                  />\n                </div>\n              </Card>\n            </div>\n            <div className=\"col-md-6 col-12 px-0 memberslooking-card\">\n              <Card source={crewDetails.pageImage}>\n                <div className=\"text-center\">\n                  <Heading tag=\"h2\">{crewDetails.pageHeader}</Heading>\n                  <p className=\"sub-captiontext\">\n                    <div className=\"text-white text-custom\"\n                      dangerouslySetInnerHTML={{ __html: crewDetails.pageDetails }}\n                    />\n                  </p>\n                  <Button\n                    onClick={() => employerNavigate()}\n                    text=\"Search Crew\"\n                    icon={true}\n                    theme=\"dark\"\n                  />\n                </div>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </CruzLayout>\n      {/* )} */}\n    </div>\n\n  );\n}\n\nexport default Cruz;\n","import { apiSlice } from \"../../../app/apiSlice\";\n\nexport const ProfileApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        getProfileDashboard: builder.query({\n            query: () => ({\n                url: \"/employee/dashboard\",\n                method: \"GET\",\n            }),\n            providesTags: ['SideMenu'],\n        }),\n        getAvailableJobs: builder.query({\n            query: () => ({\n                url: \"/employee/viewAvailableJobs\",\n                method: \"GET\",\n            }),\n            providesTags: ['SideMenu'],\n        }),\n        setStatus: builder.mutation({\n            query: (profileData) => ({\n                url: \"/employee/employeeSetStatus\",\n                method: \"POST\",\n                body: profileData,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }),\n        }),\n    }),\n    overrideExisting: true,\n});\n\nexport const {\n    useGetProfileDashboardQuery,\n    useGetAvailableJobsQuery,\n    useSetStatusMutation,\n} = ProfileApiSlice;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faEye, faCircle, faClose } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, NavLink } from \"reactstrap\";\nimport { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { useGetProfileDashboardQuery } from '../../Api/ProfileApiSlice';\nimport { useEmployeeMyMatchesQuery, useEmployeeProfileQuery } from '../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice';\nimport { useNavigate } from 'react-router-dom';\nimport EmployeeMyMatches from './EmployeeMyMaches';\nimport { LikeCard } from '../../components/LikeCard/LikeCard';\nimport { getUserData } from '../../../../utils/Utils';\nimport { useSocket } from '../../../../contexts/SocketContext';\nimport { useGetChatMemberMutation } from '../../Api/CruzMainApiSlice';\n\ninterface Matches {\n    date: string;\n    id: number;\n    job_images: string;\n    job_location: string;\n    job_role: string;\n    member_id: number;\n    member_name: string;\n}\ninterface Media {\n    id: number;\n    media_file: string;\n}\ninterface RawData {\n    date: string;\n    id: number;\n    job_images: string;\n    job_location: string;\n    job_role: string;\n    member_id: number;\n    member_name: string;\n}\ninterface MatchesRaw {\n    id: number;\n    employee_role: string;\n    member_name: string;\n    members_profile_picture: string;\n    date: string;\n    member_id: number;\n}\nexport const Dashboard = () => {\n\n    const { data: dashboardData, error: dashboardError, isLoading: isDashboardLoading, isSuccess: isDashboardSuccess, refetch } = useGetProfileDashboardQuery({});\n    const matches: Matches[] = dashboardData?.data?.matches;\n    const jobCount = dashboardData?.data?.job_count;\n    const job_images = dashboardData?.data?.job_images;\n    const job_ids = dashboardData?.data?.job_ids;\n    const { data: employeeData, error: employeeError, isLoading: isEmployeeLoading, isSuccess: isEmployeeSuccess } = useEmployeeProfileQuery({});\n    const employeeProfile = employeeData?.data.employeeDetails;\n    const medias: Media[] = employeeData?.data.mediaDetails || [];\n    const searchParameter = employeeData?.data.searchParameterName;\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    const navigate = useNavigate();\n    const [gridLength, setGridLength] = useState(0);\n\n    useEffect(() => {\n        refetch();\n        window.scrollTo(0, 0);\n    }, []);\n\n    const { data, error, isLoading, isSuccess } = useEmployeeMyMatchesQuery({});\n    const rawData: RawData[] = data?.data;\n    const matchesRaw: MatchesRaw[] = rawData?.map(item => ({\n        id: item.id,\n        employee_role: item.job_role,\n        member_name: item.member_name,\n        members_profile_picture: item.job_images,\n        date: item.date,\n        member_id: item.member_id,\n    }));\n    const userData = getUserData('userData');\n    const [employeeId, setEmployeeId] = useState<string | undefined>('');\n    let memberName = '';\n\n    useEffect(() => {\n        if (userData) {\n            memberName = userData.Member_fullname;\n            setEmployeeId(userData.employeeId);\n        }\n    }, [userData])\n    const { setIsChatVisible, setPrivateChatMember, setIsInterview, setEmployeeDetails, setChatType } = useSocket();\n    const [chatMemberDetails] = useGetChatMemberMutation();\n\n    const handleChat = async (jobId: number) => {\n        let profileData = {\n            id: jobId,\n            type: 'employer',\n        }\n        const response = await chatMemberDetails(profileData);\n        if ('data' in response && response.data) {\n            setIsInterview(false);\n            setChatType('CRUZ');\n            setPrivateChatMember(response.data.data);\n            setIsChatVisible(true);\n            if (employeeId) {\n                setEmployeeDetails({\n                    employee_id: employeeId,\n                    job_id: jobId\n                });\n                //setPrivateChatMember(matches);\n                setIsChatVisible(true);\n            }\n        }\n    };\n\n    return (\n        <div className=\"employee-dashboard\">\n            <CruzLayout link=\"Employee\">\n                <div className=\"dashboard-employee\">\n                    <div className=\"page-path\">\n                        <div className=\"parent-direction\">\n                            <label>Dashboard</label>\n                        </div>\n                        <span className=\"direction-arrow\">\n                            <FontAwesomeIcon icon={faAngleRight} />\n                        </span>\n                    </div>\n                    <div className=\"dashboard-details\">\n                        <div className=\"head-details\">\n                            <h2 className=\"cutsomHeading\">welcome back, {employeeProfile?.members_fname +\n                                \" \" +\n                                employeeProfile?.members_lname}</h2>\n                        </div>\n                        <div className='New-Jobs-view'>\n                            <div className=\"row\">\n                                <div className=\"col-lg-4 col-12\">\n                                    {job_images && job_images.length > 0 ? (\n                                        <div className={`grid-gallery ${job_images.length < 3 && job_images.length == 2 ? 'gridtwo-card' : ''}`}>\n                                            {job_images && job_images.slice(0, 3).map((image: string, index: number) => (\n                                                <div className=\"grid\" key={index}>\n                                                    <img\n                                                        src={baseUrl + image}\n                                                        alt=\"\"\n                                                        className=\"img-fluid\"\n                                                    />\n                                                </div>\n                                            ))}\n\n                                        </div>\n                                    ) : (\n                                        <div className=\"grid-gallery grid-single-image\">\n                                            <div className=\"grid\">\n                                                <img src={require(\"../../../../assets/images/profile/profile-1.png\")} alt=\"\" className=\"img-fluid\" />\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"col-lg-8 col-12\">\n                                    <div className=\"job-details-view\">\n                                        <div className=\"Jobs-viewDetails\">\n                                            <h2 className=\"customHeading\">{jobCount} New Jobs available</h2>\n                                            <p className=\"Matching\">Matching Your Skills based on</p>\n                                            <div className='search-parameter'>\n                                                <div className=\"Matching matchlist\">\n                                                    <label>{employeeProfile?.employee_role}</label>\n                                                    {searchParameter && (\n                                                        Object.keys(searchParameter).map((key) => (\n                                                            <label key={key}>\n                                                                {Array.isArray(searchParameter[key]) ? (\n                                                                    searchParameter[key].join(\", \")\n                                                                ) : (\n                                                                    searchParameter[key]\n                                                                )}\n                                                            </label>\n                                                        ))\n                                                    )}\n\n                                                </div>\n                                            </div>\n                                            <div className='viewpost-btn'>\n                                                <Button\n                                                    onClick={() =>\n                                                        jobCount > 0\n                                                            ? navigate(\n                                                                `/cruz/employerviewsjobs`,\n                                                                {\n                                                                    state: {\n                                                                        employee_id: employeeProfile?.employee_id,\n                                                                        job_ids: job_ids,\n                                                                        jobCount: jobCount,\n                                                                    },\n                                                                }\n                                                            )\n                                                            : \"\"\n                                                    }\n                                                    text=\"View Now\"\n                                                    icon={true}\n                                                    theme=\"light\"\n                                                    className=\"button-reverse\"\n                                                    iconname={faEye}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"Recent-conversation\">\n                            <div className='d-flex align-items-center justify-content-between'>\n\n                                <div className=\"action-link\">\n                                    <a onClick={() =>\n                                        navigate(\n                                            `/cruz/employeemymatches`,\n                                        )\n                                    }>All Matches</a>\n                                </div>\n                            </div>\n                            <div className=\"conversation-list\">\n                                <LikeCard matches={matchesRaw} type={\"employee\"} getId={employeeId} handleLike={handleChat} showButton={false} />\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </CruzLayout>\n        </div>\n    )\n}\nexport default Dashboard;","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\"\nimport \"../../../../assets/scss/cruz.scss\";\nimport { useEmployeeMyMatchesQuery } from \"../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserData } from \"../../../../utils/Utils\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\nimport { LikeCard } from \"../../components/LikeCard/LikeCard\";\nimport SingleChatMain from \"../../../Chat/PrivateChat/SingleChatMain/SingleChatMain\";\nimport { useSocket } from \"../../../../contexts/SocketContext\";\nimport { useEffect, useState } from \"react\";\nimport { EmployeeInterface, MemberInterface } from \"../../../../types/PrivateChatInterfaces\";\nimport { useGetChatMemberMutation } from \"../../Api/CruzMainApiSlice\";\n\ninterface RawData {\n    date: string;\n    id: number;\n    job_images: string;\n    job_location: string;\n    job_role: string;\n    member_id: number;\n    member_name: string;\n}\ninterface Matches {\n    id: number;\n    employee_role: string;\n    member_name: string;\n    members_profile_picture: string;\n    date: string;\n    member_id: number;\n}\n\nexport const EmployeeMyMatches = () => {\n\n    const { data, error, isLoading, isSuccess } = useEmployeeMyMatchesQuery({});\n    const rawData: RawData[] = data?.data;\n    const matches: Matches[] = rawData?.map(item => ({\n        id: item.id,\n        employee_role: item.job_role,\n        member_name: item.member_name,\n        members_profile_picture: item.job_images,\n        date: item.date,\n        member_id: item.member_id,\n    }));\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    const navigate = useNavigate();\n    const userData = getUserData('userData');\n    const [employeeId, setEmployeeId] = useState<string | undefined>('');\n    let memberName = '';\n\n    useEffect(() => {\n        if (userData) {\n            memberName = userData.Member_fullname;\n            setEmployeeId(userData.employeeId);\n        }\n    }, [userData])\n    const { setIsChatVisible, setPrivateChatMember, setIsInterview, setEmployeeDetails, setChatType } = useSocket();\n    const [chatMemberDetails] = useGetChatMemberMutation();\n\n    const handleChat = async (jobId: number) => {\n        let profileData = {\n            id: jobId,\n            type: 'employer',\n        }\n        const response = await chatMemberDetails(profileData);\n        if ('data' in response && response.data) {\n            setIsInterview(false);\n            setChatType('CRUZ');\n            setPrivateChatMember(response.data.data);\n            setIsChatVisible(true);\n            if (employeeId) {\n                setEmployeeDetails({\n                    employee_id: employeeId,\n                    job_id: jobId\n                });\n                //setPrivateChatMember(matches);\n                setIsChatVisible(true);\n            }\n        }\n    };\n    return (\n        <div>\n            <CruzLayout link=\"Employee\">\n                <div className=\"myMatches\">\n                    <Breadcrumbs mainbreadcrumb=\"Dashboard\" secondbreadcrumb={memberName} redirectUrl=\"/cruz/employeedashboard\" />\n\n                    <div className=\"innerHeading\">\n                        <h2 className=\"customHeading\">\n                            MY MATCHES\n                        </h2>\n                    </div>\n                    <LikeCard matches={matches} type={\"employee\"} getId={employeeId} handleLike={handleChat} showButton={false} />\n                </div >\n            </CruzLayout >\n        </div >\n    )\n}\nexport default EmployeeMyMatches;","import { Heading } from '../../../../components/Heading/Heading';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport './Employeeprofile.scss';\nimport { Hero } from '../../../../components/Hero/Hero';\nimport { Button } from \"../../../../components/Button/Button\";\nimport { useEmployeeProfileQuery } from \"./EmployeeProfileApiSlice\";\nimport { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { useNavigate } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, NavLink } from \"reactstrap\";\nimport { EmployeeProfile } from \"../EmployeeProfile/EmployeeProfile\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport VideoPlayer from '../../../../components/VideoPlayer/VideoPlayer';\nimport { Breadcrumbs } from '../Breadcrumbs/Breadcrumbs';\ninterface Media {\n  id: number;\n  media_file: string;\n}\n\ninterface Referrance {\n  id: string;\n  name: string;\n}\ninterface EmployeeProfile {\n  employee_id: number;\n  members_name: string;\n  members_fname: string;\n  members_lname: string;\n  employee_passport: string;\n  employee_location: string;\n  employee_experience: string;\n  employee_avilable: string;\n  employee_salary_expection: string;\n  employee_visa: string;\n  employee_dob: string;\n  employee_gender: string;\n  employee_last_role: string;\n  employee_interest: string;\n  employee_about: string;\n  employee_intro: string;\n  employee_role: string;\n  employee_qualification: string;\n  employee_languages: string;\n  employee_position: string;\n  employee_vessel: string;\n  is_liked: string;\n  is_match: string;\n  referrance: Referrance[];\n}\n\nexport const EmployeeReviewProfile = () => {\n  const { data, error, isLoading, isSuccess, refetch } = useEmployeeProfileQuery({});\n  const employeeProfile: EmployeeProfile = data?.data.employeeDetails;\n  const medias: Media[] = data?.data.mediaDetails || [];\n  const searchParameterName = data?.data.searchParameterName;\n  useEffect(() => {\n    refetch();\n  }, [])\n  const handleSubmit = () => {\n    try {\n      navigate('/cruz/employeejobpoststatus');\n    } catch (error) {\n      // Handle error response here\n      console.error(\"Error saving job:\", error);\n    }\n  };\n  const [modal, setModal] = useState(false);\n  const toggle = () => {\n    setModal(!modal);\n  };\n  const dobFormat = (originalDate: string) => {\n    const [year, month, day] = originalDate\n      ? originalDate.split(\"-\")\n      : \"0000-00-00\".split(\"-\");\n    const dateObject = new Date(`${year}-${month}-${day}`);\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    const dateOfBirth = `${dateObject.getDate()} ${months[dateObject.getMonth()]\n      } ${dateObject.getFullYear()}`;\n    return dateOfBirth;\n  };\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n\n  const navigate = useNavigate();\n  const handlePreview = async () => {\n    try {\n      navigate('/cruz/previewemployee');\n    } catch (error) {\n      // Handle error response here\n      console.error(\"Error saving job:\", error);\n    }\n  };\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <div className=\"row mx-0 Employeeprofile-parents employeereviewprofile-parent\">\n      <CruzLayout link=\"Employer\">\n        <div className=\"col-lg-12 \">\n          <div className=\"Employeeprofile-page reviewEmployeeprofile-pageparent\">\n            {isLoading ? (\n              <div className=\"page-loader\">\n                <div className=\"page-innerLoader\">\n                  <div className=\"spinner-border\" role=\"status\">\n                    <img src={require(\"../../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                  </div>\n                </div>\n              </div>\n            ) : \"\"}\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"inner-bodypage Employeeprofile pb-0\">\n                  <Breadcrumbs mainbreadcrumb=\"Setup Profile\" secondbreadcrumb=\"Summary of Profile\" redirectUrl=\"/cruz/employeedashboard\" />\n                  <h2 className=\"customHeading\">review your profile</h2>\n                  <div className=\"table-datats\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 col-12\">\n                        <div className=\"table-content\">\n                          <div className=\"table-details\">\n                            <div className='table-datadetails'>\n                              <div className='details-card'>\n                                <label className=\"odd\">PERSONAL DETAILS</label>\n                              </div>\n                              <div className='details-card-body'>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Full Name</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span>\n                                      {employeeProfile?.members_fname + \" \" + employeeProfile?.members_lname}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Main job role</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      <span>\n                                        {employeeProfile?.employee_role}\n                                      </span>\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 0,\n                                          secondIndex: 0,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Passport</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_passport}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 0,\n                                          secondIndex: 1,\n                                        },\n                                      })}><FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Availability</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_avilable}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 0,\n                                          secondIndex: 2,\n                                        },\n                                      })}><FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Date of Birth</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_dob ? dobFormat(employeeProfile?.employee_dob) : \"\"}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 0,\n                                          secondIndex: 3,\n                                        },\n                                      })}><FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Current Location</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_location}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 0,\n                                          secondIndex: 4,\n                                        },\n                                      })}><FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Gender</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_gender}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 0,\n                                          secondIndex: 5,\n                                        },\n                                      })}><FontAwesomeIcon icon={faPenToSquare} /></a>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"table-details history\">\n\n                            <div className='table-datadetails'>\n                              <div className='details-card'>\n                                <label className=\"odd\">HISTORY</label>\n                              </div>\n                              <div className='details-card-body'>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Years of Experience</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_experience}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 2,\n                                          secondIndex: 0,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion  block-class'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Last Role</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\", whiteSpace: \"pre-line\" }}>\n                                      {employeeProfile?.employee_last_role}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 2,\n                                          secondIndex: 1,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Qualification</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_qualification}{\" \"}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 2,\n                                          secondIndex: 2,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            {/*  */}\n\n                          </div>\n                          <div className=\"table-details other-information\">\n                            <div className='table-datadetails'>\n                              <div className='details-card'>\n                                <label className=\"odd text-uppercase\">other information</label>\n                              </div>\n                              <div className='details-card-body'>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Languages Spoken</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_languages}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 3,\n                                          secondIndex: 0,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Visas</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_visa}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 3,\n                                          secondIndex: 1,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Interests</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.employee_interest}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 3,\n                                          secondIndex: 2,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Bio</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 4,\n                                          secondIndex: 0,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>One liner</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 4,\n                                          secondIndex: 1,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Reference</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {employeeProfile?.referrance\n                                        .map((ref, index) => (\n                                          <React.Fragment key={ref.id}>\n                                            <a style={{ cursor: \"pointer\" }}\n                                              onClick={() =>\n                                                navigate(`/publicprofile`, {\n                                                  state: ref.id,\n                                                })\n                                              }\n                                            >\n                                              {ref.name}\n                                            </a>\n                                            {index < employeeProfile.referrance.length - 1 && ', '}\n                                          </React.Fragment>\n                                        ))}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 5,\n                                          secondIndex: 1,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                          <div className=\"table-details Your-work\">\n                            <div className='table-datadetails'>\n                              <div className='details-card'>\n                                <label className=\"odd\">SEARCH PARAMETER</label>\n                              </div>\n                              <div className='details-card-body'>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Vessel Type</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {searchParameterName?.vessel_type}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 5,\n                                          secondIndex: 0,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Vessel Size</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                      {Array.isArray(searchParameterName?.vessel_size) ? (\n                                        searchParameterName?.vessel_size.join(\", \")\n                                      ) : (\n                                        searchParameterName?.vessel_size\n                                      )}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 5,\n                                          secondIndex: 0,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className='data-listQuestion'>\n                                  <div className='odd-questiontitle'>\n                                    <h5>Job Duration</h5>\n                                  </div>\n                                  <div className='even-QuestionAns'>\n                                    <span style={{ marginRight: \"10px\" }} >\n                                      {searchParameterName?.job_duration}\n                                    </span>\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 5,\n                                          secondIndex: 0,\n                                        },\n                                      })}>\n                                      <FontAwesomeIcon icon={faPenToSquare} />\n                                    </a>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6 col-12 right-block\">\n                        <div className=\"table-content\">\n                          <div className=\"table-details grid-tablegallery\">\n                            <div className=\"table-details Your-work\">\n                              <div className='table-datadetails'>\n                                <div className='details-card'>\n                                  <label className=\"odd\">YOUR WORK</label>\n                                </div>\n                                <div className='details-card-body'>\n                                  <div className='data-listQuestion'>\n                                    <div className='odd-questiontitle'>\n                                      <h5>Position</h5>\n                                    </div>\n                                    <div className='even-QuestionAns'>\n                                      <span style={{ marginRight: \"10px\" }}>\n                                        {employeeProfile?.employee_position}\n                                      </span>\n                                      <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                        {\n                                          state: {\n                                            firstIndex: 1,\n                                            secondIndex: 0,\n                                          },\n                                        })}>\n                                        <FontAwesomeIcon icon={faPenToSquare} />\n                                      </a>\n                                    </div>\n                                  </div>\n                                  <div className='data-listQuestion'>\n                                    <div className='odd-questiontitle'>\n                                      <h5>Preferred Vessel Type</h5>\n                                    </div>\n                                    <div className='even-QuestionAns'>\n                                      <span style={{ marginRight: \"10px\" }} >\n                                        {employeeProfile?.employee_vessel}\n                                      </span>\n                                      <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                        {\n                                          state: {\n                                            firstIndex: 1,\n                                            secondIndex: 1,\n                                          },\n                                        })}>\n                                        <FontAwesomeIcon icon={faPenToSquare} />\n                                      </a>\n                                    </div>\n                                  </div>\n                                  <div className='data-listQuestion'>\n                                    <div className='odd-questiontitle'>\n                                      <h5>Salary Expectations</h5>\n                                    </div>\n                                    <div className='even-QuestionAns'>\n                                      <span style={{ marginRight: \"10px\" }}>\n                                        {employeeProfile?.employee_salary_expection}\n                                      </span>\n                                      <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                        {\n                                          state: {\n                                            firstIndex: 1,\n                                            secondIndex: 2,\n                                          },\n                                        })}>\n                                        <FontAwesomeIcon icon={faPenToSquare} />\n                                      </a>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n                            </div>\n                            <table className=\"table\">\n                              <thead>\n                                <tr>\n                                  <th className=\"odd\">media</th>\n                                  <th className=\"even\">\n                                    <a onClick={() => navigate(`/cruz/createprofile/${employeeProfile.employee_id}`,\n                                      {\n                                        state: {\n                                          firstIndex: 0,\n                                          secondIndex: 6,\n                                        },\n                                      })}><FontAwesomeIcon icon={faPenToSquare} /></a>\n                                  </th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr>\n                                  <div className=\"grid-gallery\">\n                                    {medias?.map((media, index) => {\n                                      const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'];\n                                      const extension = media.media_file.split('.').pop()?.toLowerCase() || '';\n                                      const className =\n                                        index % 2 === 0 ? \"even col-6 \" : \"odd col-6\";\n                                      if (imageExtensions.includes(extension)) {\n                                        return (\n                                          <div className={className} key={index}>\n                                            <div className=\"image-grid\">\n                                              <img\n                                                src={baseUrl + media.media_file}\n                                                alt=\"\"\n                                                className=\"img-fluid\"\n                                              />\n                                            </div>\n                                          </div>\n                                        );\n                                      } else {\n                                        return (\n                                          <div className={className} key={index}>\n                                            <div className=\"image-grid\">\n                                              <VideoPlayer\n                                                videoId=\"specialist-video\"\n                                                chapters={[]}\n                                                source={baseUrl + media.media_file}\n                                              />\n                                            </div>\n                                          </div>\n                                        );\n                                      }\n                                    })}\n                                  </div>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 col-12\">\n                        <div className=\"action-field\">\n                          <div className=\"card\">\n                            <div className=\"card-body\">\n                              <div className=\"card-content\">\n                                <Button\n                                  text=\"Preview My Profile\"\n                                  icon={false}\n                                  className=\"btn-prev btn-transparent\"\n                                  // onClick={handlePreview}\n                                  onClick={toggle}\n                                />\n                                <p>\n                                  When you’re satified with your choices, click below.\n                                  You can edit and update your profile at any time.\n                                </p>\n                                <div className=\"btn-action\">\n                                  <Button\n                                    // onClick={() => navigate('/cruz/Register')}\n                                    onClick={handleSubmit}\n                                    text=\"Post\"\n                                    icon={true}\n                                    theme=\"light\"\n                                    className=\"w-100\"\n                                  />\n                                </div>\n                                <div className=\"action-button\">\n                                  <div className=\"d-flex align-items-center justify-content-between\">\n                                    <div className=\"goback\">\n                                      <a onClick={handleSubmit}>Go back</a>\n                                    </div>\n                                    <div className=\"goback\">\n                                      <a onClick={handleSubmit}>Save and exit</a>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CruzLayout>\n      <Modal\n        isOpen={modal}\n        toggle={toggle}\n        centered\n        className=\"Preview-mode-modal\"\n      >\n        <ModalBody>\n          <ModalHeader toggle={toggle}>\n          </ModalHeader>\n          <div className=\"action-modal\">\n            <EmployeeProfile employeeProfile={employeeProfile} medias={medias} />\n          </div>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n","import {EmployeeReviewProfile} from \"../../components/ReviewEmployeeProfile/EmployeeReviewProfile\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nexport const ReviewEmployeeProfile = () =>{\n    return(\n        <EmployeeReviewProfile/>\n    )\n}\nexport default ReviewEmployeeProfile;","import { ReviewJobEmployerProfile } from \"../../components/ReviewJobEmployerProfile/ReviewJobEmployerProfile\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nexport const ReviewEmployerProfile = () => {\n    return (\n        <></>\n        // <ReviewJobEmployerProfile formValues={undefined} steps={undefined} />\n    )\n}\nexport default ReviewEmployerProfile;","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { useGetProfileDashboardQuery } from \"../../Api/ProfileApiSlice\";\nimport { useEmployeeProfileQuery } from \"../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport { useGetAvailableJobsQuery } from \"../../Api/ProfileApiSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getUserData } from \"../../../../utils/Utils\";\n\ninterface Matches {\n    employee_role: string;\n    members_name: string;\n    members_profile_picture: string;\n    date: string;\n}\n\nexport const EmployeeJobs = () => {\n    const { data: dashboardData, error: dashboardError, isLoading: isDashboardLoading, isSuccess: isDashboardSuccess, refetch } = useGetAvailableJobsQuery({});\n    const jobCount = dashboardData?.data?.matches;\n    const job_ids = dashboardData?.data?.job_ids;\n\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(false);\n\n    const userData = getUserData(\"userData\");\n    const [employeeId, setEmployeeId] = useState<string | undefined>('');\n\n    useEffect(() => {\n        const userData = getUserData(\"userData\");\n        if (userData !== null) {\n            setEmployeeId(userData.employeeId);\n        }\n        refetch();\n    }, []);\n    useEffect(() => {\n        if (isDashboardLoading) {\n            setLoading(true);\n        }\n        if (isDashboardSuccess) {\n            const timer = setTimeout(() => {\n                setLoading(false);\n            }, 2000);\n            return () => clearTimeout(timer);\n        }\n    }, [isDashboardLoading, employeeId, isDashboardSuccess]);\n\n    return (\n        <CruzLayout link=\"Employee\">\n            <div className=\"jobFinder-page\">\n                {loading ? (\n                    <div className=\"page-innerLoader\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <img src={require(\"../../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                        <div className=\"content-txt\">\n                            <span>Finding Jobs...</span>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"jobfinder-result\">\n                        <h2 className=\"customHeading\">\n                            <p>WE’VE FOUND <span className=\"jobs-count\">{jobCount} JOBS</span></p>\n                            <span className=\"matchYou\">matched to YOU...</span>\n                        </h2>\n                        <div className=\"find-action col-lg-1 offset-md-4\">\n                            <Button\n                                onClick={() =>\n                                    jobCount > 0\n                                        ? navigate(\n                                            `/cruz/employerviewsjobs`,\n                                            {\n                                                state: {\n                                                    employee_id: employeeId,\n                                                    job_ids: job_ids,\n                                                    jobCount: jobCount,\n                                                },\n                                            }\n                                        )\n                                        : navigate(`/cruz/employeedashboard`)\n                                }\n                                text=\"Lets Go!\"\n                                icon={true}\n                                theme=\"light\"\n                                className=\"\"\n                            />\n                        </div>\n                    </div>\n                )}\n            </div>\n        </CruzLayout>\n    );\n};\n\nexport default EmployeeJobs;\n","import { useState } from \"react\";\nimport { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { Modal, ModalBody } from \"reactstrap\";\nimport { CustomSlider } from \"../../../../components/CustomSlider/CustomSlider\";\nimport { useLocation } from \"react-router-dom\";\nexport const EmployeeMatchProfile = () => {\n  // const location = useLocation();\n  // const { job_id, employee_ids } = location.state;\n  // console.log(job_id, employee_ids);\n  const [modal1Open, setModal1Open] = useState(false);\n  const [modal2Open, setModal2Open] = useState(false);\n\n  const toggleModal1 = () => {\n    setModal1Open(!modal1Open);\n  };\n  const toggleModal2 = () => {\n    setModal2Open(!modal2Open);\n  };\n  const slides = [\n    {\n      image: require(\"../../../../assets/images/partners/banner-1.png\"),\n      alt: \"Image 1\",\n    },\n    {\n      image: require(\"../../../../assets/images/partners/banner-1.png\"),\n      alt: \"Image 2\",\n    },\n    {\n      image: require(\"../../../../assets/images/partners/banner-1.png\"),\n      alt: \"Image 2\",\n    },\n  ];\n  const slidesettings = {\n    slidesToShow: 3,\n    dots: true,\n    responsive: [\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 1,\n          centerPadding: \"10%\",\n          arrows: false,\n        },\n      },\n    ],\n  };\n\n  return (\n    <div className=\"employee-profile-parent\">\n      {/* <div className=\"container-fluid\">\n        <div className=\"page-path\">\n          <div className=\"parent-direction\">\n            <label>Campaign</label>\n          </div>\n          <span className=\"direction-arrow\">\n            <FontAwesomeIcon icon={faAngleRight} />\n          </span>\n          <div className=\"child-direction\">\n            <label>Deck Hand for Two Months in the Carribbean</label>\n          </div>\n        </div>\n      </div>\n      <CruzLayout link=\"Employer\">\n        <div className=\"profile-section col-lg-8\">\n          <div className=\"view-profile-section\">\n            <div className=\"profile-box\">\n              <div className=\"profile-box-header\">\n                <div className=\"profile-name\">\n                  <h1 className=\"customHeading\">Chief Stewardess</h1>\n                </div>\n              </div>\n              <div className=\"profile-box-body\">\n                <ul className=\"quick-details\">\n                  <li>25m Sailing Yacht</li>\n                  <li>Permanent</li>\n                  <li>Caribbean</li>\n                </ul>\n                <CustomSlider settings={slidesettings} items={slides} />\n                <div className=\"employer-custom-card\">\n                  <div className=\"employer-custom-card-title\">\n                    <h1 className=\"customHeading\">THE ROLE</h1>\n                  </div>\n                  <div className=\"employer-custom-card-body\">\n                    <div className=\"item-box\">\n                      <label>Job Title :</label>\n                      <span>Deck hand</span>\n                    </div>\n                    <div className=\"item-box\">\n                      <label>Charter / Private :</label>\n                      <span>Private</span>\n                    </div>\n                    <div className=\"item-box\">\n                      <label>Duration :</label>\n                      <span>Permanent</span>\n                    </div>\n                    <div className=\"item-box\">\n                      <label>Start Date:</label>\n                      <span>18 March 2024</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"employer-custom-card\">\n                  <div className=\"employer-custom-card-title\">\n                    <h1 className=\"customHeading\">THE BOAT</h1>\n                  </div>\n                  <div className=\"employer-custom-card-body\">\n                    <div className=\"item-box\">\n                      <label>Vessel :</label>\n                      <span>17ft Classic Whaler</span>\n                    </div>\n                    <div className=\"item-box\">\n                      <label>Location :</label>\n                      <span>Mauritius</span>\n                    </div>\n                    <div className=\"item-box\">\n                      <label>Motor / Sail: </label>\n                      <span>Sail</span>\n                    </div>\n                    <div className=\"item-box\">\n                      <label>Size:</label>\n                      <span>25M Sailing Yacht</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"employer-custom-card\">\n                  <div className=\"employer-custom-card-title\">\n                    <h1 className=\"customHeading\">summary</h1>\n                  </div>\n                  <div className=\"employer-custom-card-body\">\n                    <p className=\"para\">\n                      The current system is categorically floored whereby vast\n                      amounts of money is spent by yacht owners and management\n                      companies for a service that is largely for show and adds\n                      almost no value to the yachting ecosystem.\n                    </p>\n                    <p className=\"para\">\n                      Cruz will strip out what the employers need and give them\n                      even more, while making it a simple, fast, and fun\n                      experience for employers and crew alike.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"layout-action col-lg-4\">\n          <div className=\"views\">\n            <p>Viewing job 1 of 16</p>\n          </div>\n          <div className=\"action-options\">\n            <a href=\"#\">\n              <img\n                src={require(\"../../../../assets/images/cruz/close-icon.png\")}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </a>\n            <a href=\"#\" onClick={toggleModal2}>\n              <img\n                src={require(\"../../../../assets/images/cruz/direction.png\")}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </a>\n            <a href=\"#\" onClick={toggleModal1}>\n              <img\n                src={require(\"../../../../assets/images/cruz/Tick.png\")}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </a>\n          </div>\n        </div>\n      </CruzLayout>\n      <Modal\n        isOpen={modal1Open}\n        toggle={toggleModal1}\n        className=\"sidebar-modal\"\n        fade={false}\n      >\n        <ModalBody>\n          <div className=\"Employee-Profilemodal\">\n            <div className=\"row\">\n              <h2 className=\"customHeading\">What’s next?</h2>\n              <div className=\"text-para\">\n                <p>\n                  We’ve let the person know you’re interested in this role, if\n                  they’re interested too, you’ll be connected.\n                </p>\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n      <Modal\n        isOpen={modal2Open}\n        toggle={toggleModal2}\n        className=\"sidebar-modal\"\n        fade={false}\n      >\n        <ModalBody>\n          <div className=\"Employee-ProfilematchModal\">\n            <div className=\"row\">\n              <h2 className=\"customHeading\">IT’S A MATCH!</h2>\n              <div className=\"text-para\">\n                <p>You’re both interested in each other.</p>\n              </div>\n              <div className=\"imagegrid\">\n                <div className=\"grid\">\n                  <img\n                    src={require(\"../../../../assets/images/cruz/gall-1.png\")}\n                    alt=\"\"\n                    className=\"img-fluid\"\n                  />\n                </div>\n                <div className=\"grid\">\n                  <img\n                    src={require(\"../../../../assets/images/cruz/gall-2.png\")}\n                    alt=\"\"\n                    className=\"img-fluid\"\n                  />\n                </div>\n              </div>\n              <div className=\"chatOption-btn\">\n                <Button\n                  onClick={() => console.log(\"Hello\")}\n                  text=\"Chat with the Employer\"\n                  icon={true}\n                  className=\"chat-optionbtn\"\n                />\n                <a href=\"#\" className=\"chatlater\">\n                  Continue & chat later\n                </a>\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n      </Modal> */}\n    </div>\n  );\n};\nexport default EmployeeMatchProfile;\n","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\n\ninterface OptionProps {\n  type?: string;\n  optionKey: number | string;\n  value: string;\n  name: string | undefined;\n  checked?: boolean;\n  selectedOption?: number | string;\n  onOptionChange: (name: string, optionKey: number | string, type: string, isChecked: boolean | undefined) => void;\n  register: any;\n  disable?: boolean;\n}\n\nconst Option: React.FC<OptionProps> = ({ type, optionKey, value, name, checked, selectedOption, onOptionChange, register, disable }) => {\n  const handleChange = (name?: string, optionKey?: any, type?: string, isChecked?: boolean | undefined) => {\n    if (name && type) {\n      onOptionChange(name, optionKey, type, isChecked);\n    }\n  };\n  checked = false;\n  if (Array.isArray(selectedOption)) {\n    checked = selectedOption.some(option => String(option) == optionKey);\n  } else {\n    if (String(selectedOption) === optionKey) {\n      checked = true;\n    }\n  }\n  let disbleRadio = false;\n  if (disable) {\n    disbleRadio = true;\n  }\n\n  const handleClick = (event: React.MouseEvent) => {\n    event.stopPropagation();\n  };\n  let content;\n  if (type === 'radio') {\n    content = (\n      <label htmlFor={value}>\n        <input\n          type=\"radio\"\n          id={value}\n          name={name}\n          value={optionKey.toString()}\n          checked={checked}\n          onChange={(e) => handleChange(name, optionKey, type, e.target.checked)}\n          disabled={disbleRadio}\n        />\n        <CardBody><span>{value}</span></CardBody>\n      </label>\n    );\n  } else if (type === 'checkbox') {\n    content = (\n      <div className=\"round-checkbox\">\n        <label htmlFor={value} onClick={handleClick}>\n          <input\n            type=\"checkbox\"\n            id={value}\n            name={name}\n            value={optionKey.toString()}\n            checked={checked}\n            onChange={(e) => handleChange(name, optionKey, type, e.target.checked)}\n          />\n          <div className=\"card-body\">{value}</div>\n        </label>\n      </div>\n    );\n  } else {\n    content = null;\n  }\n\n  return content;\n};\n\nexport default Option;\n","import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./customDatePicker.scss\";\ninterface ReactDatePickerProps {\n    selected: Date | null | undefined;\n    onChange: (date: Date | null) => void;\n    maxDate?: Date | null;\n    minDate?: Date | null;\n    inline?: boolean;\n    placeholder?: string;\n}\n\nexport const ReactDatePicker: React.FC<ReactDatePickerProps> = ({ selected, onChange, maxDate, minDate, inline, placeholder }) => {\n    return (\n        <div>\n            {inline ? (\n                <DatePicker\n                    selected={selected}\n                    onChange={onChange}\n                    maxDate={maxDate}\n                    minDate={minDate}\n                    peekNextMonth\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    inline\n                    dateFormat=\"dd/MM/YYYY\"\n                />\n            ) : (\n                <DatePicker\n                    selected={selected}\n                    onChange={onChange}\n                    maxDate={maxDate}\n                    minDate={minDate}\n                    peekNextMonth\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    placeholderText={placeholder}\n                    dateFormat=\"dd/MM/YYYY\"\n\n                />\n            )}\n        </div>\n    );\n}\n\nexport default ReactDatePicker;\n","import React, { useState } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport \"../../components/DobPicker/JobDatePicker.scss\";\nimport CustomInput from \"../CustomInput/CustomInput\";\nimport ReactDatePicker from \"../ReactDatePicker/ReactDatePicker\";\n\ninterface FormValues {\n    [key: string]: any;\n}\n\nexport const JobDatePicker: React.FC<{\n    initialValues?: string;\n    name?: string;\n    yearCurrent?: string;\n    formValues: FormValues;\n    disable: boolean;\n    maxDate?: Date | null;\n    minDate?: Date | null;\n    inline?: boolean;\n    startDate: Date | null | undefined;\n    handleDateSelect: (date: Date | null) => void;\n}> = ({\n    initialValues = \"\",\n    name = \"dob\",\n    yearCurrent = \"no\",\n    formValues,\n    disable = false,\n    inline,\n    maxDate,\n    minDate,\n    startDate,\n    handleDateSelect,\n}) => {\n        const { register } = useFormContext();\n        const [showDatePicker, setShowDatePicker] = useState(false);\n        const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n\n\n        const handleFieldClick = () => {\n            if (!disable) {\n                setShowDatePicker(true);\n            }\n        };\n\n        const handleDateChange = (date: Date | null) => {\n            setSelectedDate(date);\n            handleDateSelect(date);\n            setShowDatePicker(false);\n        };\n\n        return (\n            <div className=\"row jobDatePicker\">\n                <div className=\"col\">\n                    <label className=\"formcontrol-label\">Day</label>\n                    <CustomInput\n                        type=\"number\"\n                        name={`${name}.dobDay`}\n                        placeholder=\"Day\"\n                        registerConfig={{\n                            required: { value: false, message: \"Day is required\" },\n                        }}\n                        defaultValue={formValues[name]?.dobDay || \"\"}\n                        className=\"footer-subscription react-datepicker-ignore-onclickoutside\"\n                        disable={disable}\n                        onClick={handleFieldClick}\n                    />\n                </div>\n                <div className=\"col\">\n                    <label className=\"formcontrol-label\">Month</label>\n                    <CustomInput\n                        type=\"number\"\n                        name={`${name}.dobMonth`}\n                        placeholder=\"Month\"\n                        registerConfig={{\n                            required: { value: false, message: \"Month is required\" },\n                        }}\n                        defaultValue={formValues[name]?.dobMonth || \"\"}\n                        className=\"footer-subscription\"\n                        disable={disable}\n                        onClick={handleFieldClick}\n                    />\n                </div>\n                <div className=\"col\">\n                    <label className=\"formcontrol-label\">Year</label>\n                    <CustomInput\n                        type=\"number\"\n                        name={`${name}.dobYear`}\n                        placeholder=\"Year\"\n                        registerConfig={{\n                            required: { value: false, message: \"Year is required\" },\n                        }}\n                        defaultValue={formValues[name]?.dobYear || \"\"}\n                        className=\"footer-subscription\"\n                        disable={disable}\n                        onClick={handleFieldClick}\n                    />\n                </div>\n                {showDatePicker && (\n                    <div className=\"custom-datePicker\">\n                        <ReactDatePicker\n                            selected={startDate}\n                            onChange={handleDateChange}\n                            inline={inline}\n                            maxDate={maxDate}\n                            minDate={minDate}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Select from 'react-select';\nimport './multiselect.scss';\nimport { useController, useFormContext, useFormState } from 'react-hook-form';\nimport { useGlobalModalContext } from \"../../utils/GlobalModal\";\nimport { Modal, ModalHeader, ModalBody, NavLink } from \"reactstrap\";\nimport { Button } from \"../Button/Button\";\nimport Option from \"../MultiForm/Option\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nexport interface Option {\n    label: string;\n    value: string;\n}\ninterface FormValues {\n    [key: string]: any;\n}\ninterface MultiSelectProps {\n    name: string;\n    title: string;\n    options: Option[];\n    rules?: object;\n    formValues: FormValues;\n    onOptionChange: (name: string, optionKey: number | string, type: string, isChecked: boolean | undefined) => void;\n}\n\nconst MultiSelect: React.FC<MultiSelectProps> = ({ name, title, options, rules = {}, formValues, onOptionChange }) => {\n    const { control, setValue } = useFormContext();\n    const { field } = useController({ name, control, rules });\n    const { register } = useFormContext();\n    const [selectedOptions, setSelectedOptions] = useState<Option[]>([]);\n    // Update react-hook-form value when the selected options change\n    useEffect(() => {\n        if (!field.value) {\n            setValue(name, {});\n\n        }\n    }, [field.value, setValue, name]);\n    \n    const isMobile = () => window.innerWidth < 768;\n    const [modalOpen, setModalOpen] = useState(false);\n    const toggleModal = () => {\n        if (isMobile()) {\n            setModalOpen(!modalOpen);\n        }\n    }\n    const handleClose = () => {\n        setModalOpen(false);\n    }\n    return (\n        <div className=\"position-relative\">\n         \n             <a className=\"MultiselectModalMobile\" onClick={toggleModal}>\n                <div  onClick={toggleModal} className=\"arrow-right\">\n                     <FontAwesomeIcon icon={faAngleRight} />\n                </div>\n                <Select\n                    {...field}\n                    placeholder=\"Select\"\n                    options={options}\n                    isMulti\n                    onChange={(selectedOptions: any) => {\n                        const value = selectedOptions ? selectedOptions.map((option: any) => option.value) : [];\n                        setValue(name, value);\n                    }}\n\n                    value={\n                        Array.isArray(field.value)\n                            ? field.value.map((key: any) => {\n                                const option = options.find((option: any) => option.value === String(key));\n                                return option ? { label: option.label, value: option.value } : null;\n                            }).filter(Boolean)\n                            : []\n                    }\n                />\n            </a>\n          <Modal\n                isOpen={modalOpen}\n                className=\"sidebar-modal MultiselectMobilemodal\"\n                fade={false}\n            >\n                <ModalBody>\n                    <h3 className=\"customHeading text-center pb-4\">{title}</h3>\n                    <div className=\"modal-checkbox\">\n                        {options.map(option => (\n                            <div className=\"option-item\" key={option.value}>\n                                <Option\n                                    type={\"checkbox\"}\n                                    optionKey={option.value}\n                                    name={name}\n                                    value={option.label}\n                                    selectedOption={formValues[name]}\n                                    onOptionChange={onOptionChange}\n                                    register={register}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                    <Button\n                        onClick={() => handleClose()}\n                        text=\"Done\"\n                        icon={true}\n                        theme=\"dark\"\n                        className=\"btn-done\"\n                    />\n                </ModalBody>\n            </Modal>\n        </div>\n       \n          \n        \n    );\n};\n\nexport default MultiSelect;","import React from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport './SalaryPicker.scss';\ninterface SalaryProps {\n    id: string;\n    currencyName: string;\n    salaryName: string;\n    options?: Record<string, string>;\n    defaultValue?: string;\n    onchange?: (event: React.MouseEvent<HTMLInputElement>) => void;\n}\n\nconst SalaryPicker: React.FC<SalaryProps> = ({ id, currencyName, salaryName, options = {}, defaultValue, onchange }) => {\n    const { register } = useFormContext();\n    return (\n        <>\n            <div className=\"salary-picker-form row\">\n                <div className=\"col-md-3 col-3 salary-pickeroption\">\n                    <div className=\"salary-picker currency-type\">\n                        <select className=\"form-control\" {...register(`${salaryName}.currency`)} defaultValue={defaultValue}>\n                            <option value=\"\" disabled>Select Currency</option>\n                            {Object.entries(options).map(([key, value]) => (\n                                <option key={key} value={key}>{value}</option>\n                            ))}\n                        </select>\n                    </div>\n                </div>\n                <div className=\"col-md-9 col-9 salary-pickeroption\">\n                    <div className=\"salary-text\">\n                        <input\n                            type=\"number\"\n                            id={id}\n                            {...register(`${salaryName}.amount`)}\n                            min=\"0\"\n                            className=\"form-control\"\n                            defaultValue=\"\"\n                            onMouseDown={onchange ? (e) => onchange(e) : undefined}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SalaryPicker;\n","import React, { useState } from \"react\";\nimport { useRemoveImageMutation } from \"../../features/Cruz/Api/CruzMainApiSlice\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../utils/GlobalModal\";\n\ninterface FormValues {\n    [key: string]: any;\n}\ninterface ImageProps {\n    imageKey: string;\n    formValues: FormValues;\n    folderName: string;\n    setValue: (name: string, value: any) => void;\n}\n\nconst ShowImages: React.FC<ImageProps> = ({ formValues, folderName, imageKey, setValue }) => {\n\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n\n    const [imageRemove] = useRemoveImageMutation();\n    const [loading, setLoading] = useState(false);\n    const handleRemoveImages = async (removeImage: string) => {\n        try {\n            setLoading(true);\n            const removeData = {\n                file_path: removeImage,\n                file_type: folderName\n            };\n            const response = await imageRemove(removeData);\n\n            const updatedImages = formValues[imageKey].filter((image: string) => image !== removeImage);\n            setValue(imageKey, updatedImages);\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const { showModal, hideModal } = useGlobalModalContext();\n\n    const handleModalClose = () => {\n        hideModal();\n    }\n    const removePicModal = (removeImage: string) => {\n        showModal(MODAL_TYPES.CONFIRM_MODAL, {\n            title: \"Remove Selected image\",\n            details: \"Are you sure you really want to delete the image?\",\n            confirmBtn: \"Delete Image\",\n            onCloseCallback: handleModalClose,\n            removeImage: removeImage,\n            handleRemoveImages: (removeImage: string) => {\n                handleRemoveImages(removeImage);\n            }\n\n\n        });\n    };\n\n    let content: JSX.Element | null = null;\n\n    if (loading) {\n        content = (\n            <div className=\"page-loader\">\n                <div className=\"page-innerLoader\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <img\n                            src={require(\"../../assets/images/cruz/Frame.png\")}\n                            alt=\"\"\n                            className=\"img-fluid\"\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        const images = Array.isArray(formValues[imageKey]) ? formValues[imageKey] : [];\n        content = (\n            <>\n                {images.map((image: string, index: number) => (\n                    <div className=\"col-xl-4 col-6 imageupload-option\" key={image}>\n                        <div className=\"grid-imageupload\">\n                            <img src={`${baseUrl}/${image}`} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                        <div className=\"action-buttonsoption\">\n                            <a\n                                href=\"#\"\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    removePicModal(image);\n                                }}\n                            >\n                                <img\n                                    src={require(\"../../assets/images/cruz/close.png\")}\n                                    alt=\"Close\"\n                                    className=\"img-fluid\"\n                                />\n                            </a>\n                        </div>\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n\n    return <>{content}</>;\n\n};\n\nexport default ShowImages;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useUploadFileMutation } from \"../FileUpload/FileUploadApiSlice\";\nimport { useRemoveImageMutation } from \"../../features/Cruz/Api/CruzMainApiSlice\";\nimport \"./MultiUpload.scss\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../utils/GlobalModal\";\nimport Swal from \"sweetalert2\";\nconst chunkSize: number = 5 * 1024 * 1024;\n\ninterface FileUploadResponse {\n  finalFilename: string;\n  thumbnailPath?: string; // Optional property\n}\ninterface FormValues {\n  [key: string]: any;\n}\ninterface CustomFile extends File {\n  index: number;\n  finalFilename?: string;\n}\ninterface ProfileProps {\n  getFileName?: (name: string | null) => void;\n  folderName: string;\n  name: string;\n  formValues: FormValues;\n  setValue: (name: string, value: any) => void;\n}\n\nexport const MultiUploads: React.FC<ProfileProps> = ({\n  getFileName = () => { },\n  folderName,\n  name,\n  formValues,\n  setValue,\n}) => {\n  const [uploadFile] = useUploadFileMutation();\n  const [imageRemove] = useRemoveImageMutation();\n  const [loading, setLoading] = useState(false);\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n  const [dropzoneActive, setDropzoneActive] = useState<boolean>(false);\n  const [files, setFiles] = useState<CustomFile[]>([]);\n  const [currentFileIndex, setCurrentFileIndex] = useState<number | null>(null);\n  const [lastUploadedFileIndex, setLastUploadedFileIndex] = useState<\n    number | null\n  >(null);\n  const [currentChunkIndex, setCurrentChunkIndex] = useState<number | null>(\n    null\n  );\n  const [errors, setError] = useState(\"\");\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const validFileTypes = [\n    \"video/mp4\",\n    \"video/x-m4v\",\n    \"video/*\",\n    \"video/quicktime\", // for .mov files\n    \"video/x-msvideo\", // for .avi files\n    \"video/x-matroska\", // for .mkv files\n    \"video/webm\", // for .webm files\n  ];\n  const acceptTypes = validFileTypes.join(\",\");\n\n  function handleDrop(e: React.DragEvent<HTMLDivElement>): void {\n    e.preventDefault();\n    const newFiles: File[] = Array.from(e.dataTransfer.files);\n    //setFiles([...files, ...newFiles]);\n    setDropzoneActive(false); // Ensure dropzone is deactivated after dropping files\n  }\n\n  const handleFileChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    index: number\n  ) => {\n    setLoading(true);\n    const newFiles = Array.from(e.target.files || []);\n    if (\n      folderName === \"profile-images\" ||\n      folderName === \"employers\" ||\n      folderName === \"employee\" ||\n      folderName === \"job-images\"\n    ) {\n      const validFileTypes = [\n        \"image/png\",\n        \"image/jpg\",\n        \"image/jpeg\",\n        \"image/gif\",\n      ];\n      const isValidFileType =\n        newFiles[0] && validFileTypes.includes(newFiles[0].type);\n      if (isValidFileType) {\n        setError(\"\");\n        const customFile: CustomFile = Object.assign(newFiles[0], { index });\n        setFiles([...files, customFile]);\n      } else {\n        setLoading(false);\n        Swal.fire({\n          title: \"Upload Failed!\",\n          text: \"Invalid file format. Recommended: JPG, PNG, or GIF\",\n          icon: \"error\",\n          showCancelButton: false,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"OK\",\n          backdrop: `\n                                              rgba(255, 255, 255, 0.5)\n                                              left top\n                                              no-repeat\n                                              filter: blur(5px);\n                                            `,\n          background: \"#fff\",\n        }).then(async (result) => { });\n        setError(\"Invalid file format. Recommended: JPG, PNG, or GIF\");\n      }\n    }\n  };\n  const handleVideoChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    index: number\n  ) => {\n    setLoading(true);\n    const newFiles = Array.from(e.target.files || []);\n\n    if (\n      folderName === \"profile-images\" ||\n      folderName === \"employers\" ||\n      folderName === \"employee\" ||\n      folderName === \"job-images\"\n    ) {\n      const isValidFileType =\n        newFiles[0] && validFileTypes.includes(newFiles[0].type);\n      if (isValidFileType) {\n        setError(\"\");\n        const customFile: CustomFile = Object.assign(newFiles[0], { index });\n        setFiles([...files, customFile]);\n      } else {\n        setLoading(false);\n        Swal.fire({\n          title: \"Upload Failed!\",\n          text: \"Invalid file format. Recommended: mp4, webm, or mov\",\n          icon: \"error\",\n          showCancelButton: false,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"OK\",\n          backdrop: `\n                                              rgba(255, 255, 255, 0.5)\n                                              left top\n                                              no-repeat\n                                              filter: blur(5px);\n                                            `,\n          background: \"#fff\",\n        }).then(async (result) => { });\n        setError(\"Invalid file format. Recommended: JPG, PNG, or GIF\");\n      }\n    }\n  };\n\n  function readAndUploadCurrentChunk(): void {\n    const reader = new FileReader();\n    const file = files[currentFileIndex as number];\n    if (!file) {\n      return;\n    }\n    const from: number = (currentChunkIndex as number) * chunkSize;\n    const to: number = from + chunkSize;\n    const blob: Blob = file.slice(from, to);\n    reader.onload = (e: ProgressEvent<FileReader>) => uploadChunk(e);\n    reader.readAsDataURL(blob);\n  }\n  function uploadChunk(readerEvent: ProgressEvent<FileReader>): void {\n    const file: CustomFile = files[currentFileIndex as number];\n    const data: string | ArrayBuffer | null =\n      readerEvent.target?.result || null;\n\n    if (data === null) return;\n\n    let blobData: Blob;\n    if (typeof data === \"string\") {\n      // Convert string data to Blob\n      blobData = new Blob([data], { type: \"text/plain\" }); // Adjust the type as per your data\n    } else {\n      // If data is already ArrayBuffer, create Blob directly\n      blobData = new Blob([new Uint8Array(data as ArrayBuffer)]);\n    }\n    const formData = new FormData();\n    formData.append(\"file\", blobData, file.name);\n    formData.append(\"name\", file.name);\n    formData.append(\"folderName\", folderName);\n    formData.append(\"size\", file.size.toString());\n    formData.append(\n      \"currentChunkIndex\",\n      (currentChunkIndex as number).toString()\n    );\n    formData.append(\"totalChunks\", Math.ceil(file.size / chunkSize).toString());\n    //console.log(file.type, \"data\");\n    uploadFile(formData)\n      .unwrap()\n      .then((response: FileUploadResponse) => {\n        const fileSize: number = files[currentFileIndex as number].size;\n        const chunks: number = Math.ceil(fileSize / chunkSize) - 1;\n        const isLastChunk: boolean = (currentChunkIndex as number) === chunks;\n\n        if (isLastChunk) {\n          const finalFilename: string = response.finalFilename;\n          file.finalFilename = finalFilename;\n          setLastUploadedFileIndex(currentFileIndex);\n          setCurrentChunkIndex(null);\n        } else {\n          setCurrentChunkIndex((currentChunkIndex as number) + 1);\n        }\n        getFileName(response.finalFilename);\n        if (file.type.startsWith(\"video/\")) {\n          setValue(\"employee_video\", {\n            thumb: response.thumbnailPath,\n            video: response.finalFilename,\n          });\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.error(\"File upload failed:\", error);\n      });\n  }\n\n  function handleManualUpload(): void {\n    setCurrentChunkIndex(0);\n    readAndUploadCurrentChunk();\n  }\n\n  function handleDragAreaClick(): void {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  }\n\n  useEffect(() => {\n    if (lastUploadedFileIndex === null) {\n      return;\n    }\n    const isLastFile: boolean = lastUploadedFileIndex === files.length - 1;\n    const nextFileIndex: number | null = isLastFile\n      ? null\n      : (currentFileIndex as number) + 1;\n    setCurrentFileIndex(nextFileIndex);\n  }, [lastUploadedFileIndex, files]);\n\n  useEffect(() => {\n    if (files.length > 0) {\n      if (currentFileIndex === null) {\n        setCurrentFileIndex(\n          lastUploadedFileIndex === null\n            ? 0\n            : (lastUploadedFileIndex as number) + 1\n        );\n      }\n    }\n  }, [files.length, lastUploadedFileIndex]);\n\n  useEffect(() => {\n    if (currentFileIndex !== null) {\n      setCurrentChunkIndex(0);\n    }\n  }, [currentFileIndex]);\n  useEffect(() => {\n    if (currentChunkIndex !== null) {\n      readAndUploadCurrentChunk();\n    }\n  }, [currentChunkIndex]);\n  const uploadCount = {\n    count: 5,\n  };\n\n  let accept = \"\";\n\n  const handleRemoveImages = async (removeImage: string) => {\n    try {\n      setLoading(true);\n      const removeData = {\n        file_path: removeImage,\n        file_type: folderName,\n      };\n      const response = await imageRemove(removeData);\n\n      const updatedImages = formValues[name].filter(\n        (image: string) => image !== removeImage\n      );\n      setValue(name, updatedImages);\n      setThumbPath(null);\n      setVideoPath(null);\n      setValue(\"employee_video\", {});\n    } catch (error) {\n      // Handle error response here\n      console.error(\"Error saving job:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const { showModal, hideModal } = useGlobalModalContext();\n\n  const handleModalClose = () => {\n    hideModal();\n  };\n  const removePicModal = (removeImage: string, type: string) => {\n    showModal(MODAL_TYPES.CONFIRM_MODAL, {\n      title: `Remove Selected ${type}`,\n      details: `Are you sure you really want to delete the ${type}?`,\n      confirmBtn: \"Delete Image\",\n      onCloseCallback: handleModalClose,\n      removeImage: removeImage,\n      handleRemoveImages: (removeImage: string) => {\n        handleRemoveImages(removeImage);\n      },\n    });\n  };\n\n  const [thumbPath, setThumbPath] = useState<string | null>(null);\n  const [videoPath, setVideoPath] = useState<string | null>(null);\n  const isVideoFile = (filename: string): boolean => {\n    const videoExtensions = [\".mp4\", \".mov\", \".wmv\", \".flv\", \".avi\", \".mkv\"];\n    const extension = filename.slice(filename.lastIndexOf(\".\")).toLowerCase();\n    return videoExtensions.includes(extension);\n  };\n  useEffect(() => {\n    if (formValues[\"employee_video\"]) {\n      setThumbPath(formValues[\"employee_video\"][\"thumb\"]);\n      setVideoPath(formValues[\"employee_video\"][\"video\"]);\n    }\n  }, [formValues[\"employee_video\"]]);\n  useEffect(() => {\n    if (formValues[\"upload_media\"]) {\n      formValues[\"upload_media\"]\n        .filter((media: string) => {\n          const videoExtensions = [\n            \"mp4\",\n            \"avi\",\n            \"mov\",\n            \"wmv\",\n            \"flv\",\n            \"mkv\",\n            \"webm\",\n          ];\n          const extension = media.split(\".\").pop()?.toLowerCase();\n          return videoExtensions.includes(extension || \"\");\n        })\n        .forEach((media: string) => {\n          const filename = media.substring(media.lastIndexOf(\"/\") + 1);\n          const directory = media.substring(0, media.lastIndexOf(\"/\"));\n          const filenameWithoutExtension = filename\n            .split(\".\")\n            .slice(0, -1)\n            .join(\".\");\n          const thumbPath = `${directory}/thumb_${filenameWithoutExtension}.jpg`;\n          setThumbPath(thumbPath);\n          setVideoPath(media);\n        });\n    }\n  }, [formValues[\"upload_media\"]]);\n\n  const imageExtensions = [\".png\", \".jpg\", \".jpeg\", \".gif\"];\n  const imageFiles =\n    formValues[name] &&\n    formValues[name].filter((file: string) =>\n      imageExtensions.some((ext) => file.toLowerCase().endsWith(ext))\n    );\n  return (\n    <div className=\"row multipleupload-sections\">\n      {[...Array(uploadCount.count)].map((_, index) => {\n        const filePath = imageFiles && imageFiles[index];\n        return (\n          <div className=\"col-xl-4 col-4 multipleupload\" key={index}>\n            {filePath && !isVideoFile(filePath) ? (\n              <>\n                <div className=\"grid-imageupload\">\n                  <img\n                    key={index}\n                    src={`${baseUrl}/${filePath}`}\n                    alt=\"\"\n                    className=\"img-fluid\"\n                  />\n                </div>\n                <div className=\"action-buttonsoption\">\n                  <div className=\"close-option\">\n                    <a onClick={() => removePicModal(filePath, \"Image\")}>\n                      <img\n                        src={require(\"../../assets/images/cruz/close.png\")}\n                        alt=\"Profile\"\n                        className=\"imgfluid\"\n                      />\n                    </a>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                {loading ? (\n                  <div className=\"page-loader\">\n                    <div className=\"page-innerLoader\">\n                      <div className=\"spinner-border\" role=\"status\">\n                        <img\n                          src={require(\"../../assets/images/cruz/Frame.png\")}\n                          alt=\"\"\n                          className=\"img-fluid\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"grid-imageupload\">\n                    <img\n                      key={index}\n                      src={require(\"../../assets/images/cruz/default-img.png\")}\n                      alt=\"\"\n                      className=\"img-fluid default-img\"\n                    />\n                  </div>\n                )}\n                <div className=\"action-buttonsoption\">\n                  <div className=\"plus\">\n                    <div className=\"multiple-fileuploads\">\n                      <div className=\"file-input-container\">\n                        <input\n                          key={index}\n                          type=\"file\"\n                          id={`file-input-${index}`}\n                          className=\"file-input\"\n                          onChange={(e) => handleFileChange(e, index)}\n                        />\n                        <label\n                          htmlFor={`file-input-${index}`}\n                          className=\"file-input-label\"\n                        >\n                          <img\n                            src={require(\"../../assets/images/cruz/plus.png\")}\n                            alt=\"Profile\"\n                            className=\"imgfluid\"\n                          />\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        );\n      })}\n\n      {/* Code for video upload */}\n      <div className=\"col-xl-4 col-4 multipleupload\">\n        {thumbPath && videoPath && thumbPath ? (\n          <>\n            <div className=\"grid-imageupload\">\n              <img\n                src={`${baseUrl}/${thumbPath}`}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </div>\n            <div className=\"action-buttonsoption\">\n              <div className=\"close-option\">\n                <a onClick={() => removePicModal(videoPath, \"Video\")}>\n                  <img\n                    src={require(\"../../assets/images/cruz/close.png\")}\n                    alt=\"Profile\"\n                    className=\"imgfluid\"\n                  />\n                </a>\n              </div>\n            </div>\n          </>\n        ) : (\n          <>\n            <div className=\"grid-imageupload\">\n              <img\n                src={require(\"../../assets/images/cruz/video.png\")}\n                alt=\"\"\n                className=\"img-fluid default-img\"\n              />\n            </div>\n            <div className=\"action-buttonsoption\">\n              <div className=\"plus\">\n                <div className=\"multiple-fileuploads\">\n                  <div className=\"file-input-container\">\n                    <input\n                      type=\"file\"\n                      id=\"file-input\"\n                      accept=\"video/*\"\n                      className=\"file-input\"\n                      onChange={(e) => handleVideoChange(e, 6)}\n                    />\n                    <label htmlFor=\"file-input\" className=\"file-input-label\">\n                      <img\n                        src={require(\"../../assets/images/cruz/plus.png\")}\n                        alt=\"Profile\"\n                        className=\"imgfluid\"\n                      />\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      {errors && <p className=\"error\">{errors}</p>}\n      <div className=\"caption-text\">\n        <span>(We recommend one video with you speaking, max 1 minute)</span>\n      </div>\n    </div>\n  );\n};\nexport default MultiUploads;\n","import React, { useEffect } from 'react';\nimport { useFieldArray, Controller, Control, FieldValues, RegisterOptions, useFormContext } from 'react-hook-form';\nimport CustomInput from '../CustomInput/CustomInput';\n\ninterface PatternConfig {\n    value: RegExp;\n    message: string;\n}\n\nexport interface RequiredConfig {\n    value: boolean;\n    message: string;\n}\n\ninterface DynamicInputProps {\n    name: string;\n    control: Control<FieldValues>;\n    placeholder?: string;\n    registerConfig: RegisterOptions & {\n        required?: RequiredConfig | boolean;\n        pattern?: PatternConfig;\n    };\n}\n\nconst DynamicTextFields: React.FC<DynamicInputProps> = ({ name, placeholder, control, registerConfig }) => {\n    const { fields, append, remove } = useFieldArray({\n        name,\n        control,\n    });\n    const { register } = useFormContext();\n\n    useEffect(() => {\n        if (fields.length === 0) {\n            append({ value: '' });\n        }\n    }, [fields, append]);\n\n    return (\n        <div className=\"inputHolder-parent\">\n            {fields.map((field, index) => (\n                <div className=\"inputHolder\" key={field.id}>\n                    <div className=\"inputWrapper\">\n                        <Controller\n                            name={`${name}[${index}].value`}\n                            control={control}\n                            render={({ field }) => (\n                                <input\n                                    type=\"text\"\n                                    {...field}\n                                    placeholder={placeholder}\n                                    {...register(`${name}[${index}].value`, registerConfig)}\n                                    className=\"footer-subscription vessel-size-input\"\n                                />\n                            )}\n                        />\n                    </div>\n                    {index > 0 && (\n                        <button className=\"closeBtn\" onClick={() => remove(index)}>\n                            <img src={require(\"../../assets/images/cruz/close.png\")} className=\"removeIcon\" alt=\"remove\" />\n                        </button>\n                    )}\n                </div>\n            ))}\n            <div className=\"addBtnHolder\">\n                <button type=\"button\" onClick={() => append({ value: '' })}>\n                    + Add another\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default DynamicTextFields;\n","import { Fragment, useCallback, useState } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport Picker, { PickerValue } from 'react-mobile-picker';\nimport \"./CustomPickerDate.scss\";\n\nfunction getDayArray(year: number, month: number) {\n  const dayCount = new Date(year, month, 0).getDate();\n  return Array.from({ length: dayCount }, (_, i) => String(i + 1).padStart(2, '0'));\n}\n\n// const monthNames = [\n//   'January', 'February', 'March', 'April', 'May', 'June',\n//   'July', 'August', 'September', 'October', 'November', 'December'\n// ];\nconst monthNames = Array.from({ length: 12 }, (_, i) => String(i + 1).padStart(2, '0'));\n\ninterface FormValues {\n  [key: string]: any;\n}\n\nexport const MyPicker: React.FC<{\n  initialValues?: string;\n  name?: string;\n  yearCurrent?: string;\n  formValues: FormValues;\n  startDate: Date | null | undefined;\n  setValue: (name: string, value: any) => void;\n}> = ({\n  initialValues = \"\",\n  name = \"dob\",\n  yearCurrent = \"no\",\n  formValues,\n  startDate,\n  setValue\n}) => {\n    let today = new Date();\n    if (startDate) {\n      today = startDate;\n    }\n\n    const currentYear = String(today.getFullYear());\n    const currentMonth = monthNames[today.getMonth()];\n    const currentDay = String(today.getDate()).padStart(2, '0');\n    const [isOpen, setIsOpen] = useState(false);\n    const [pickerValue, setPickerValue] = useState<PickerValue>({\n      year: currentYear,\n      month: currentMonth,\n      day: currentDay,\n    });\n\n\n    const handlePickerChange = useCallback((newValue: PickerValue, key: string) => {\n      if (key === 'day') {\n        setPickerValue(newValue);\n        return;\n      }\n\n      const { year, month } = newValue;\n      const monthIndex = monthNames.indexOf(String(month));\n      const newDayArray = getDayArray(Number(year), monthIndex + 1);\n      const newDay = newDayArray.includes(String(newValue.day)) ? newValue.day : newDayArray[newDayArray.length - 1];\n      setPickerValue({ ...newValue, day: newDay });\n    }, []);\n\n    const formatDate = (pickerValue: PickerValue) => {\n      const year = pickerValue.year;\n      const month = String(monthNames.indexOf(String(pickerValue.month)) + 1).padStart(2, '0');\n      const day = pickerValue.day;\n      return `${year}-${month}-${day}`;\n    };\n\n    const handleDoneClick = () => {\n      const formattedDate = formatDate(pickerValue);\n      setValue(name, formattedDate);  // Assuming setValue is used to update the form value\n      setIsOpen(false);\n    };\n    return (\n      <>\n        <div className='customModalDate'>\n          <div className='row'>\n            <div className='form-input d-flex px-0'>\n              <div className='Day col'>\n                <label>Day</label>\n                <input type=\"text\" name={`dob.dobDay`} value={pickerValue.day} onClick={() => setIsOpen(true)} readOnly className='form-control' />\n              </div>\n              <div className='Month col'>\n                <label>Month</label>\n                <input type=\"text\" name={`dob.dobMonth`} value={pickerValue.month} onChange={() => { }} onClick={() => setIsOpen(true)} className='form-control' />\n              </div>\n              <div className='Year col'>\n                <label>Year</label>\n                <input type=\"text\" name={`dob.dobYear`} value={pickerValue.year} onChange={() => { }} onClick={() => setIsOpen(true)} className='form-control' />\n              </div>\n            </div>\n          </div>\n          <Transition appear show={isOpen} as={Fragment}>\n            <Dialog as=\"div\" className=\"relative z-10\" onClose={() => setIsOpen(false)}>\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0\"\n                enterTo=\"opacity-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n              </Transition.Child>\n\n              <div className=\"fixed inset-0 overflow-y-auto\">\n                <div className=\"flex min-h-full items-center justify-center p-0 text-center\">\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-out duration-300\"\n                    enterFrom=\"opacity-0 scale-95\"\n                    enterTo=\"opacity-100 scale-100\"\n                    leave=\"ease-in duration-200\"\n                    leaveFrom=\"opacity-100 scale-100\"\n                    leaveTo=\"opacity-0 scale-95\"\n                  >\n                    <Dialog.Panel className=\"modal-picker w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n                      <div className=\"mt-2 testdate\">\n                        <Picker\n                          value={pickerValue}\n                          onChange={handlePickerChange}\n                          wheelMode=\"natural\"\n                        >\n                          <Picker.Column name=\"day\">\n                            {getDayArray(Number(pickerValue.year), monthNames.indexOf(String(pickerValue.month)) + 1).map((day) => (\n                              <Picker.Item key={day} value={day}>\n                                {({ selected }) => (\n                                  <div className={selected ? 'current-date font-semibold text-neutral-900' : 'text-neutral-400 date-over'}>{day}</div>\n                                )}\n                              </Picker.Item>\n                            ))}\n                          </Picker.Column>\n                          <Picker.Column name=\"month\">\n                            {monthNames.map((month) => (\n                              <Picker.Item key={month} value={month}>\n                                {({ selected }) => (\n                                  <div className={selected ? 'current-date font-semibold text-neutral-900' : 'text-neutral-400 date-over'}>{month}</div>\n                                )}\n                              </Picker.Item>\n                            ))}\n                          </Picker.Column>\n\n\n                          <Picker.Column name=\"year\">\n                            {Array.from({ length: 200 }, (_, i) => `${1947 + i}`).map((year) => (\n                              <Picker.Item key={year} value={year}>\n                                {({ selected }) => (\n                                  <div className={selected ? 'current-date font-semibold text-neutral-900' : 'text-neutral-400 date-over'}>{year}</div>\n                                )}\n                              </Picker.Item>\n                            ))}\n                          </Picker.Column>\n                        </Picker>\n                      </div>\n                      <div className=\"mt-4 click-to-select\">\n                        <button\n                          type=\"button\"\n                          className=\" inline-flex click-to-proceed\"\n                          onClick={handleDoneClick}\n                        >\n                          Done\n                        </button>\n                      </div>\n                    </Dialog.Panel>\n                  </Transition.Child>\n                </div>\n              </div>\n            </Dialog>\n          </Transition>\n        </div>\n      </>\n    );\n  }\n\nexport default MyPicker;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { CardBody, Col, Container, Row } from \"reactstrap\";\nimport Option from \"./Option\";\nimport { JobDatePicker } from \"../DobPicker/JobDatePicker\";\nimport { useFormContext } from \"react-hook-form\";\nimport CustomInput from \"../CustomInput/CustomInput\";\nimport { FileUpload } from \"../FileUpload/FileUpload\";\nimport { ReactDatePicker } from \"../../components/ReactDatePicker/ReactDatePicker\";\nimport MultiSelect from \"../Multiselect/Multiselect\";\nimport \"../../components/Multiselect/multiselect.scss\";\nimport SalaryPicker from \"./SalaryPicker\";\nimport ShowImages from \"./ShowImages\";\nimport { Control } from \"react-hook-form\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport MultiUploads from \"./MultiUploads\";\nimport DynamicTextFields from \"./DynamicTextFields\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MyPicker from \"../CustomPickerDate/CustomModalDate\";\ninterface SubQuestion {\n  title: string;\n  type: string;\n  name: string;\n  options: Record<string, string>;\n  multiple: boolean;\n}\ninterface FormValues {\n  [key: string]: any;\n}\ninterface StepsProps {\n  title: string;\n  subtitle?: string;\n  placeholder?: string;\n  type: string;\n  name: string;\n  multiple: boolean;\n  theme?: string;\n  Qoptions?: Record<number, string>;\n  getFileName?: (name: string | null) => void;\n  onOptionChange: (\n    name: string,\n    optionKey: number | string,\n    type: string,\n    isChecked: boolean | undefined\n  ) => void;\n  sub_questions?: SubQuestion[];\n  formValues: FormValues;\n  startDate: Date | null;\n  handleDateSelect: (date: Date | null) => void;\n  setValue: (name: string, value: any) => void;\n  control: Control;\n  search?: boolean;\n  datepicker?: boolean;\n  handleDatePickerSelect?: (date: Date | null) => void;\n  datepickerDate?: Date | null;\n  isDateSelected?: boolean;\n  exclude_jobrole?: Record<number, string>;\n  jobRole?: string;\n}\n\nconst Steps: React.FC<StepsProps> = ({\n  title,\n  subtitle,\n  placeholder,\n  type,\n  name,\n  multiple,\n  theme,\n  Qoptions,\n  getFileName = () => { },\n  onOptionChange,\n  sub_questions = [],\n  formValues,\n  startDate,\n  handleDateSelect,\n  setValue,\n  control,\n  search,\n  datepicker,\n  handleDatePickerSelect = () => { },\n  datepickerDate,\n  isDateSelected,\n  exclude_jobrole,\n  jobRole,\n  ...rest\n}) => {\n  const [isClassAdded, setIsClassAdded] = useState(false);\n  useEffect(() => {\n    const checkQuestionCheckboxLength = () => {\n      const questionCheckboxes = document.querySelectorAll(\".QuestionCheckbox\");\n      if (questionCheckboxes.length === 2) {\n        setIsClassAdded(true);\n      } else {\n        setIsClassAdded(false);\n      }\n    };\n    checkQuestionCheckboxLength();\n  });\n  const convertOptions = (\n    options: Record<string, string>\n  ): { value: string; label: string }[] => {\n    return Object.entries(options).map(([key, value]) => ({\n      value: key,\n      label: value,\n    }));\n  };\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleSearchChange = (event: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const { register } = useFormContext();\n\n  let maxDate = null;\n  let minDate = null;\n  if (name === \"employee_dob\") {\n    maxDate = new Date();\n    maxDate.setFullYear(maxDate.getFullYear() - 18);\n  }\n  if (name === \"job_start_date\" || name === \"employee_avilable\") {\n    const today = new Date();\n    minDate = new Date(today);\n    minDate.setDate(today.getDate() + 1);\n  }\n\n  let content;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    setSearchQuery(\"\");\n  }, [name]);\n\n  const handleSalaryChange = (e: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\n    setValue('salary_type', '');\n  }\n\n  if (type === \"radio\" && Qoptions) {\n    let colClass =\n      Object.keys(Qoptions).length > 6 ? \"col-6\" : \"col-12 fullwidth\";\n\n    const excludedValues = exclude_jobrole\n      ? Object.values(exclude_jobrole)\n      : [];\n    const excludedKeys = exclude_jobrole ? Object.keys(exclude_jobrole) : [];\n    const filteredOptions = searchQuery\n      ? Object.entries(Qoptions).filter(([key, value]) =>\n        value.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n      : Object.entries(Qoptions);\n\n    content = filteredOptions.map(([key, value]) => {\n      let disable = false;\n      if (\n        exclude_jobrole &&\n        excludedValues.includes(value) &&\n        String(jobRole) !== String(key)\n      ) {\n        disable = true;\n      }\n      return (\n        <div className={`col-md-6 ${colClass} Question`} key={key}>\n          <Option\n            type={type}\n            optionKey={key}\n            name={name}\n            value={value}\n            selectedOption={formValues[name]}\n            onOptionChange={onOptionChange}\n            register={register}\n            disable={disable}\n          />\n        </div>\n      );\n    });\n  } else if (type === \"date\") {\n    content = (\n      <div className=\"multistep-datepicker\">\n        <JobDatePicker\n          formValues={formValues}\n          disable={false}\n          maxDate={maxDate}\n          minDate={minDate}\n          inline={true}\n          startDate={startDate}\n          handleDateSelect={handleDateSelect}\n        />\n\n        <MyPicker\n          formValues={formValues}\n          name={name}\n          setValue={setValue}\n          startDate={startDate}\n        />\n      </div>\n    );\n  } else if (type === \"textarea\") {\n    content = (\n      <CustomInput\n        type=\"text\"\n        rows={4}\n        name={name}\n        placeholder={placeholder}\n        registerConfig={{\n          required: { value: false, message: \"\" },\n        }}\n        className=\"footer-subscription\"\n      />\n    );\n  } else if (type === \"text\" && multiple != true) {\n    content = (\n      <CustomInput\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        registerConfig={{\n          required: { value: false, message: \"\" },\n        }}\n        className=\"footer-subscription vessel-size-input\"\n      />\n    );\n  } else if (type === \"text\" && multiple === true) {\n    content = (\n      <DynamicTextFields\n        name={name}\n        placeholder={placeholder}\n        control={control}\n        registerConfig={{\n          required: { value: false, message: \"Description is required\" },\n        }}\n      />\n    );\n  } else if (type === \"number\") {\n    content = (\n      <CustomInput\n        type=\"number\"\n        name={name}\n        placeholder={placeholder}\n        registerConfig={{\n          required: { value: false, message: \"\" },\n        }}\n        className=\"footer-subscription vessel-size-input\"\n      />\n    );\n  } else if (type === \"select\" && Qoptions && !multiple) {\n    content = (\n      <div className=\"form-group custom-select\">\n        <select className=\"form-control\" {...register(name)} defaultValue=\"\">\n          <option value=\"\" disabled>\n            Select\n          </option>\n          {Object.entries(Qoptions).map(([key, value]) => (\n            <option key={key} value={key}>\n              {value}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  } else if (type === \"dropdown\" && Qoptions && multiple) {\n    content = (\n      <div className=\"form-group custom-select Reference-section\">\n        <MultiSelect\n          formValues={formValues}\n          onOptionChange={onOptionChange}\n          name={name}\n          title={title}\n          options={convertOptions(Qoptions)}\n        />\n      </div>\n    );\n  } else if (type === \"file\" && multiple === false) {\n    content = (\n      <>\n        <FileUpload\n          folderName=\"job-images\"\n          getFileName={getFileName}\n          from={\"multiform\"}\n        />\n\n        <ShowImages\n          formValues={formValues}\n          folderName={\"job-images\"}\n          setValue={setValue}\n          imageKey={name}\n        />\n      </>\n    );\n  } else if (type === \"file\" && multiple === true) {\n    content = (\n      <>\n        <MultiUploads\n          getFileName={getFileName}\n          setValue={setValue}\n          formValues={formValues}\n          folderName=\"employee\"\n          name={name}\n        />\n      </>\n    );\n  } else if (type === \"checkbox\" && Qoptions) {\n    const filteredOptions = searchQuery\n      ? Object.entries(Qoptions).filter(([key, value]) =>\n        value.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n      : Object.entries(Qoptions);\n    content = filteredOptions.map(([key, value]) => (\n      <div\n        className={`Question QuestionCheckbox  col-xl-4 col-6 ${theme} ${isClassAdded ? \"TwoOptions\" : \"\"\n          }  `}\n        key={key}\n      >\n        <Option\n          type={type}\n          optionKey={parseInt(key)}\n          name={name}\n          value={value}\n          selectedOption={formValues[name]}\n          onOptionChange={onOptionChange}\n          register={register}\n        />\n      </div>\n    ));\n  } else {\n    content = null;\n  }\n  if (sub_questions.length != 0) {\n    content = sub_questions.map((sub_question, index) => {\n\n      return (\n        <React.Fragment key={index}>\n          {sub_question.type === \"select\" && sub_question.multiple && (\n            <div className=\"multiple-selectOption\">\n              <div className=\"subcaptiontext\">\n                <p>{sub_question.title}</p>\n              </div>\n              <div\n                style={{ flex: \"0.5\", flexWrap: \"wrap\" }}\n                className={`search-multiselect ${index === 0 ? \"firstSelect-child\" : \"\"\n                  }`}\n              >\n                <div className=\"form-group custom-select\">\n                  <MultiSelect\n                    formValues={formValues}\n                    onOptionChange={onOptionChange}\n                    name={sub_question.name}\n                    title={sub_question.title}\n                    options={convertOptions(sub_question.options)}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n          {sub_question.type === \"radio\" && sub_question.name === 'job_salary_type' && (\n            <>\n              <div\n                className=\"row col-md-12 col-12 options-box\"\n                key={sub_question.name}\n              >\n                {Object.entries(sub_question.options).map(([key, value]) => (\n                  <div className=\"col-md-4 col-4 salary-pickerOption\" key={key}>\n                    <Option\n                      type={sub_question.type}\n                      optionKey={key}\n                      name={sub_question.name}\n                      value={value}\n                      selectedOption={formValues[sub_question.name]}\n                      onOptionChange={onOptionChange}\n                      register={register}\n                    />\n                  </div>\n                ))}\n              </div>\n            </>\n          )\n          }\n          {sub_question.type === \"radio\" && sub_question.name === 'salary_type' && (\n            <>\n              <div className=\"Salary_questionsoption\">\n                {Object.entries(sub_question.options).map(([key, value]) => (\n\n                  <div className={`col-md-5 col-6 Question mx-2`} key={key}>\n                    <Option\n                      type={sub_question.type}\n                      optionKey={key}\n                      name={sub_question.name}\n                      value={value}\n                      selectedOption={formValues[sub_question.name]}\n                      onOptionChange={onOptionChange}\n                      register={register}\n                    />\n                  </div>\n\n                ))}\n              </div>\n\n              <div className=\"text-white mb-2\">OR</div>\n            </>\n          )\n          }\n          {\n            sub_question.type === \"salary_picker\" && (\n              <>\n                <SalaryPicker\n                  id={sub_question.name}\n                  currencyName=\"currency\"\n                  options={sub_question.options}\n                  salaryName={sub_question.name}\n                  defaultValue={\"£\"}\n                  onchange={(e) => handleSalaryChange(e)}\n                />\n              </>\n            )\n          }\n        </React.Fragment >\n      );\n    });\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"StepQuestion\">\n          <h2 className=\"customHeading text-initial\">{title}</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"stepQuestion-subTitle\">\n          <h4 className=\"customHeading text-initial\">{subtitle}</h4>\n        </Col>\n      </Row>\n      <Row>\n        {search && Qoptions && (\n          <div className=\"Steppersearch-box\">\n            <input\n              placeholder=\"Search\"\n              type=\"text\"\n              name=\"search\"\n              className=\"form-control\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n            />\n            <div className=\"searchicon\">\n              <FontAwesomeIcon icon={faSearch} />\n            </div>\n          </div>\n        )}\n        {content}\n\n        {datepicker && (\n          <div\n            className={`custom-datePicker col-md-6 col-12 ${isDateSelected ? \"date-selected\" : \"\"\n              }`}\n          >\n            <ReactDatePicker\n              selected={datepickerDate}\n              onChange={handleDatePickerSelect}\n              maxDate={maxDate}\n              minDate={minDate}\n              inline={false}\n              placeholder={placeholder}\n            />\n          </div>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Steps;\n","import { Heading } from '../../../../components/Heading/Heading';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport './reviewJobEmployer.scss';\nimport { Hero } from '../../../../components/Hero/Hero';\nimport { Button } from \"../../../../components/Button/Button\";\nimport { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { useEmployerProfileQuery } from '../EmployerProfile/EmployerProfileApiSlice';\nimport { useSaveJobMutation } from '../../Api/CruzMainApiSlice';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserData, setUserData } from '../../../../utils/Utils';\nimport Swal from 'sweetalert2';\nimport { useGetVarificationStatusMutation } from '../../Api/CampaignApiSlice';\nimport moment from 'moment';\ninterface Media {\n    media_file: string;\n}\ninterface FormValues {\n    [key: string]: any;\n}\ninterface SubQuestion {\n    title: string;\n    type: string;\n    name: string;\n    options: Record<string, string>;\n}\ninterface Option {\n    value: string;\n    label: string;\n}\ninterface Question {\n    title: string;\n    type: string;\n    options: Record<string, string>;\n    name: string;\n    sub_questions?: SubQuestion[];\n    sub_index: number;\n    // Add other relevant fields here\n}\n\ninterface StepsDetails {\n    title: string;\n    questions: Question[];\n}\n\ninterface Step {\n    title: string;\n    StepsDetails: StepsDetails;\n}\ninterface UserData {\n    Member_fullname: string;\n    Member_type: string;\n    Token: string;\n    members_profile_picture: string;\n    Member_id: string;\n    IsEmployer: string;\n    IsEmployee: string;\n    is_specialist: string;\n}\ninterface ReviewProps {\n    formValues: FormValues;\n    steps: Step;\n    handlePreview: () => Promise<void>;\n    handleGoBack: (stepIndex: any, questionIndex: any) => Promise<void>;\n}\nexport const ReviewJobEmployerProfile: React.FC<ReviewProps> = ({\n    formValues,\n    steps,\n    handlePreview,\n    handleGoBack,\n}) => {\n    // const { data, error, isLoading, isSuccess } = useEmployerProfileQuery(1);\n    // const medias: Media[] = data?.data.mediaDetails || [];\n    const [saveJob] = useSaveJobMutation();\n    const navigate = useNavigate();\n    const [images, setImages] = useState<string[]>([]);\n    const [imageKey, setImageKey] = useState(0);\n    const [questionKey, setQuestionKey] = useState(0);\n    const userData: UserData | null = getUserData(\"userData\");\n    const [invalidFields, setInvalidFields] = useState<string[]>([]);\n    const [getVarificationStatus] = useGetVarificationStatusMutation();\n    const [verificationStatus, setVerificationStatus] = useState<boolean>(false);\n\n\n    const fetchVarification = async () => {\n        const varifyResponse = await getVarificationStatus({});\n        if ('data' in varifyResponse) {\n            const status = varifyResponse.data;\n            if (status.is_doc_verified) {\n                setVerificationStatus(true);\n            } else {\n                setVerificationStatus(false);\n            }\n\n        } else {\n            setVerificationStatus(false);\n        }\n\n    }\n\n    useEffect(() => {\n        fetchVarification();\n    }, []);\n\n    useEffect(() => {\n        const extractedImages: string[] = [];\n\n        (steps as any).forEach((step: any, stepIndex: number) => {\n            step.questions.forEach((question: { type: string; name: string | number; }, questionIndex: number) => {\n                if (question.type === 'file') {\n                    setImageKey(stepIndex);\n                    setQuestionKey(questionIndex)\n                    if (Array.isArray(formValues[question.name])) {\n                        formValues[question.name].forEach((image: string) => {\n                            extractedImages.push(image);\n                        });\n                    }\n                }\n            });\n        });\n        setImages(extractedImages);\n    }, [formValues, steps]);\n\n    function validateObjectKeys(obj: FormValues): string[] {\n        const invalidKeys: string[] = [];\n        try {\n            for (const key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    const value = obj[key];\n                    const unwantedKeys = [\n                        'upload_media', 'job_salary_type', 'job_salary_amount',\n                        'job_currency', 'search_qualification', 'search_age',\n                        'search_gender', 'search_language', 'search_visa', 'vessel_type', 'salary_type'\n                    ];\n                    if (!unwantedKeys.includes(key)) {\n                        if (value === null || value === undefined) {\n                            invalidKeys.push(key);\n                        }\n                        if (Array.isArray(value) && value.length === 0) {\n                            invalidKeys.push(key);\n                        }\n                        if (typeof value === 'object' && !Array.isArray(value) && Object.keys(value).length === 0) {\n                            invalidKeys.push(key);\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            console.error('Error occurred during validation:', error);\n        }\n        return invalidKeys;\n    }\n\n\n    const handleSubmit = async () => {\n        try {\n            const errors = validateObjectKeys(formValues);\n            if (errors.length > 0) {\n                setInvalidFields(errors); // Highlight invalid fields\n\n                Swal.fire({\n                    title: \"Post Failed!\",\n                    text: \"Please fill up all the details before posting\",\n                    icon: \"error\",\n                    timer: 3000,\n                    showConfirmButton: false,\n                    backdrop: `\n                    rgba(255, 255, 255, 0.5)\n                    left top\n                    no-repeat\n                    filter: blur(5px);\n                    `,\n                    background: '#fff',\n                });\n                return;\n            }\n            if (Object.keys(formValues).length != 0) {\n                delete formValues.dob;\n                formValues.job_status = 'D';\n                if (verificationStatus) {\n                    formValues.job_status = 'A';\n                }\n                const response = await saveJob(formValues);\n                if ('data' in response) {\n                    const jobId = response.data.data.JobId;\n                    if (userData != null) {\n                        userData.IsEmployer = 'Y';\n                        setUserData(userData);\n                    }\n                    if (verificationStatus) {\n                        navigate('/cruz/viewcampaign/livecampaign');\n                    } else {\n                        navigate('/cruz/register', {\n                            state: {\n                                jobId: jobId,\n                                jobRole: formValues.job_role,\n                            },\n                        });\n                    }\n\n                } else {\n                    console.error(\"Error saving job:\", response.error);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error saving job:\", error);\n        }\n    };\n    const BtnSave = async () => {\n        try {\n            if (Object.keys(formValues).length != 0) {\n                delete formValues.dob;\n                const response = await saveJob(formValues);\n\n                if ('data' in response) {\n                    const jobId = response.data.data.JobId;\n                    if (userData != null) {\n                        userData.IsEmployer = 'Y';\n                        setUserData(userData);\n                    }\n                    if (response.data.data.jobStatus === 'A') {\n                        navigate('/cruz/viewcampaign/livecampaign');\n                    } else {\n                        navigate('/cruz/viewcampaign/draftcampaign');\n                    }\n\n                } else {\n                    console.error(\"Error saving job:\", response.error);\n                }\n            }\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        }\n    };\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    const formatDate = (dateStr: string): string => {\n        if (dateStr) {\n            const [year, month, day] = dateStr?.split('-');\n            return `${day}-${month}-${year}`;\n        }\n        return '';\n    };\n\n    return (\n        <div className=\"col-lg-12 \">\n\n            <div className=\"reviewEmployeeprofile-pageparent\">\n                <CruzLayout link=\"Employer\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"inner-bodypage Employeeprofile pb-0\">\n                                <div className=\"page-path\">\n                                    <div className=\"parent-direction\">\n                                        <label><a style={{ cursor: \"pointer\" }} onClick={() => navigate(`/cruz/viewcampaign/livecampaign`)}>Set up Campaign</a></label>\n                                    </div>\n                                    <span className=\"direction-arrow\">\n                                        <FontAwesomeIcon icon={faAngleRight} />\n                                    </span>\n                                    <div className=\"child-direction\">\n                                        <label>Review your Campaign</label>\n                                    </div>\n                                </div>\n                                <h2 className=\"customHeading\">Review your CAMPAIGN</h2>\n                                <div className=\"table-datats\">\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 col-12\">\n                                            <div className=\"table-content\">\n\n                                                {steps && Object.entries(steps).map(([key, StepsDetails]) => {\n\n                                                    return (\n                                                        <div className=\"table-details\" key={key}>\n\n                                                            <div className='table-datadetails'>\n                                                                <div className='details-card'>\n                                                                    <label className=\"odd\">{StepsDetails.title}</label>\n                                                                </div>\n                                                                <div className='details-card-body'>\n                                                                    {StepsDetails.questions && Object.entries<Question>(StepsDetails.questions).map(([index, question]) => {\n                                                                        const isInvalid = invalidFields.includes(question.name);\n                                                                        const isSalaryTypeValid = Object.keys(question?.sub_questions?.[0]?.options || {}).includes(formValues['salary_type']);\n\n                                                                        //     console.log('valuee--', formValues[question.name]);\n\n                                                                        return (\n                                                                            <React.Fragment key={index}>\n                                                                                <div className={`data-listQuestion ${isInvalid ? 'invalid-field' : ''} ${question.title === 'Vessel' ? 'block-class' : ''}  ${question.title === 'SUMMARY OF THE ROLE' ? 'block-class' : ''}`} key={index} >\n                                                                                    <div className=\"odd-questiontitle\">\n                                                                                        <h5>\n                                                                                            {question.type != 'file' &&\n                                                                                                question.title}\n                                                                                        </h5>\n                                                                                    </div>\n                                                                                    <div className=\"even-QuestionAns\">\n                                                                                        <span style={{ marginRight: \"10px\" }}>\n                                                                                            {question.options && question.options[formValues[question.name]]}\n\n                                                                                            {question.sub_questions && question.title?.toUpperCase() === 'SALARY' &&\n                                                                                                (isSalaryTypeValid ? (\n                                                                                                    formValues['salary_type']\n                                                                                                ) : (\n\n                                                                                                    formValues[question.sub_questions[2].name]?.['amount'] && (\n                                                                                                        <>\n                                                                                                            {question.sub_questions[2]?.options?.[formValues[question.sub_questions[2].name]?.['currency']]}\n                                                                                                            {' '}\n                                                                                                            {Intl.NumberFormat('en-US').format(formValues[question.sub_questions[2].name]?.['amount'])}\n                                                                                                        </>\n                                                                                                    )\n\n\n                                                                                                ))\n                                                                                            }\n\n\n                                                                                            {!question.options && !question.sub_questions && question.type != 'file' && question.name != 'job_start_date' &&\n                                                                                                <div className=\"text-white text-biography\" style={{ whiteSpace: \"pre-line\" }}>\n                                                                                                    {formValues[question.name]}\n                                                                                                </div>\n                                                                                            }\n                                                                                            {question.name === 'job_start_date' &&\n                                                                                                <>{formatDate(formValues[question.name])}</>\n                                                                                            }\n                                                                                        </span>\n                                                                                        {question.type != 'file' ? (\n                                                                                            <a onClick={() => handleGoBack(StepsDetails.index - 1, question.sub_index - 1)}>\n                                                                                                <FontAwesomeIcon icon={faPenToSquare} />\n                                                                                            </a>\n                                                                                        ) : \"\"}\n\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                {question.type != 'salary' && question.sub_questions && question.sub_questions.map((subquestion, subIndex) => (\n                                                                                    <div className='sub-Questionsdata' key={`${index}-${subIndex}`}>\n                                                                                        <h5 className=\"subQuestion-title\">\n                                                                                            {subquestion.title}\n                                                                                        </h5>\n                                                                                        <div className=\"sub-QuestionAnsdata\">\n                                                                                            <span style={{ marginRight: \"10px\" }}>\n                                                                                                {formValues[subquestion.name] && (\n                                                                                                    Object.values(formValues[subquestion.name])\n                                                                                                        .map((index: any) => subquestion.options[index])\n                                                                                                        .join(', ')\n                                                                                                )}\n                                                                                            </span>\n                                                                                            <a onClick={() => handleGoBack(StepsDetails.index - 1, question.sub_index - 1)}>\n                                                                                                <FontAwesomeIcon icon={faPenToSquare} />\n                                                                                            </a>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                ))}\n                                                                            </React.Fragment>\n                                                                        )\n                                                                    })}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    );\n                                                })}\n\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-6 col-12 right-block\">\n                                            <div className=\"table-content\">\n                                                <div className=\"table-details grid-tablegallery\">\n                                                    <table className=\"table\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th className=\"odd\">media</th>\n                                                                <th className=\"even\">\n                                                                    <a onClick={() => handleGoBack(imageKey, questionKey)}>\n                                                                        <FontAwesomeIcon icon={faPenToSquare} />\n                                                                    </a>\n                                                                </th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            <tr>\n                                                                <td colSpan={2}>\n                                                                    <div className=\"grid-gallery\">\n                                                                        {images && images.map((image, key) => {\n                                                                            const className =\n                                                                                key % 2 === 0 ? \"even col-6 \" : \"odd col-6\";\n                                                                            return (\n                                                                                <div className={className} key={key}>\n                                                                                    <div className=\"image-grid\">\n                                                                                        <img\n                                                                                            src={baseUrl + image}\n                                                                                            alt=\"\"\n                                                                                            className=\"img-fluid\"\n                                                                                        />\n                                                                                    </div>\n                                                                                </div>\n                                                                            );\n                                                                        })}\n                                                                    </div>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 col-12\">\n                                            <div className=\"action-field\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-body\">\n                                                        <div className=\"card-content\">\n                                                            <Button\n                                                                text=\"Preview This Campaign\"\n                                                                icon={false}\n                                                                className=\"btn-prev btn-transparent\"\n                                                                onClick={handlePreview}\n                                                            />\n                                                            <p>\n\n                                                                When you’re satified with your choices, click below.\n                                                                You can edit and update your profile at any time.\n                                                            </p>\n                                                            <div className=\"btn-action\">\n                                                                <Button\n                                                                    onClick={handleSubmit}\n                                                                    text=\"Post\"\n                                                                    icon={true}\n                                                                    theme=\"light\"\n                                                                    className=\"w-100\"\n                                                                />\n                                                            </div>\n                                                            <div className=\"action-button\">\n                                                                <div className=\"prev-action\">\n                                                                    <Button\n                                                                        text=\"Go Back\"\n                                                                        icon={false}\n                                                                        className=\"btn-prev\"\n                                                                        onClick={() => handleGoBack(-1, 0)}\n                                                                    />\n                                                                    <Button\n                                                                        text=\"Save and exit\"\n                                                                        icon={false}\n                                                                        className=\"btn-save\"\n                                                                        onClick={BtnSave}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </CruzLayout>\n            </div>\n        </div >\n    )\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { CustomSlider } from \"../../../../components/CustomSlider/CustomSlider\";\nimport { Heading } from \"../../../../components/Heading/Heading\";\nimport { Modal, ModalBody } from \"reactstrap\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport '../../../../assets/scss/cruz.scss';\nimport { ReactDatePicker } from \"../../../../components/ReactDatePicker/ReactDatePicker\";\nimport moment from 'moment';\nimport { useSaveJobMutation } from '../../Api/CruzMainApiSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserData, setUserData } from '../../../../utils/Utils';\nimport { CruzLayout } from '../../../../components/Layout/CruzLayout';\nimport Swal from 'sweetalert2';\nimport { useGetVarificationStatusMutation } from '../../Api/CampaignApiSlice';\n\ninterface FormValues {\n    [key: string]: any;\n}\ninterface SubQuestion {\n    title: string;\n    type: string;\n    name: string;\n    options: Record<string, string>;\n}\ninterface Option {\n    value: string;\n    label: string;\n}\ninterface Question {\n    title: string;\n    type: string;\n    options: Record<string, string>;\n    name: string;\n    sub_questions?: SubQuestion[];\n    // Add other relevant fields here\n}\n\ninterface StepsDetails {\n    title: string;\n    questions: Question[];\n}\n\ninterface Step {\n    title: string;\n    questions: Question[];\n}\n\ninterface PreviewProps {\n    formValues: FormValues;\n    steps: Step[];\n    handleGoBack: () => Promise<void>;\n}\ninterface Slide {\n    image: string;\n    alt: string;\n}\ninterface DisplayItem {\n    [key: string]: any;\n}\ninterface UserData {\n    Member_fullname: string;\n    Member_type: string;\n    Token: string;\n    members_profile_picture: string;\n    Member_id: string;\n    IsEmployer: string;\n    IsEmployee: string;\n    is_specialist: string;\n}\nexport const ReviewEmployerPost: React.FC<PreviewProps> = ({\n    formValues,\n    steps,\n    handleGoBack,\n}) => {\n    const userData: UserData | null = getUserData(\"userData\");\n    const stepIndex = 0;\n    const questionIndex = 0;\n\n    const [getVarificationStatus] = useGetVarificationStatusMutation();\n    const [verificationStatus, setVerificationStatus] = useState<boolean>(false);\n\n\n    const fetchVarification = async () => {\n        const varifyResponse = await getVarificationStatus({});\n        if ('data' in varifyResponse) {\n            const status = varifyResponse.data;\n            if (status.is_doc_verified) {\n                setVerificationStatus(true);\n            } else {\n                setVerificationStatus(false);\n            }\n\n        } else {\n            setVerificationStatus(false);\n        }\n\n    }\n\n    useEffect(() => {\n        fetchVarification();\n    }, []);\n\n    let formValueName = '';\n    let formType = '';\n    let displayArray: DisplayItem = {};\n    let stepNumber = steps.length;\n    let questionNumber = 0;\n    for (let i = 0; i < stepNumber; i++) {\n        questionNumber = steps[i].questions.length;\n        for (let k = 0; k < questionNumber; k++) {\n            formValueName = steps[i].questions[k].name;\n            formType = steps[i].questions[k].type;\n            if (!displayArray) {\n                displayArray = {}; // Ensure it's initialized as an object\n            }\n\n            if (formValueName != undefined && formType === 'radio') {\n                displayArray[formValueName] = steps[i].questions[k].options[formValues[formValueName]]\n            } else if (formType === 'textarea' || formType === 'number' || formType === 'date' || formType === 'file') {\n                displayArray[formValueName] = formValues[formValueName];\n            }\n        }\n\n    }\n\n\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n\n    let slides: Slide[] = [];\n    let imageNum = 3;\n\n    if (Array.isArray(displayArray['upload_media'])) {\n        imageNum = displayArray['upload_media'].length;\n        slides = displayArray['upload_media'].map((image: string, index: number) => ({\n            image: baseUrl + image,\n            alt: `Image ${index + 1}`,\n            url: '#',\n            isLink: true,\n        }));\n    }\n    const slidesettings = {\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        infinite: slides.length > 1,\n        dots: true,\n        centerPadding: \"100%\",\n        responsive: [\n            {\n                breakpoint: 767,\n                settings: {\n                    slidesToShow: 2,\n                    centerPadding: \"10%\",\n                    arrows: false,\n                },\n            },\n        ],\n    };\n\n    const [saveJob] = useSaveJobMutation();\n    const navigate = useNavigate();\n\n    function validateObjectKeys(obj: FormValues) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                const value = obj[key];\n                const unwantedKeys = ['upload_media', 'job_salary_type', 'job_salary_amount', 'job_currency', 'search_qualification', 'search_age', 'search_gender', 'search_language', 'search_visa', 'vessel_type', 'salary_type'];\n                if (!unwantedKeys.includes(key)) {\n                    // Check if the value is null or undefined\n                    if (value === null || value === undefined) {\n                        return true;\n                    }\n                    // Check if the value is an empty array or an empty object\n                    if (Array.isArray(value) && value.length === 0) {\n                        return true;\n                    }\n                    if (typeof value === 'object' && !Array.isArray(value) && Object.keys(value).length === 0) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    const handleSubmit = async () => {\n        try {\n            const errors = validateObjectKeys(formValues);\n            if (errors) {\n                Swal.fire({\n                    title: \"Post Failed!\",\n                    text: \"Please fill up all the details before posting\",\n                    icon: \"error\",\n                    timer: 3000,\n                    showConfirmButton: false,\n                    backdrop: `\n                    rgba(255, 255, 255, 0.5)\n                    left top\n                    no-repeat\n                    filter: blur(5px);\n                  `,\n                    background: '#fff',\n                });\n                return;\n            }\n            if (Object.keys(formValues).length != 0) {\n                delete formValues.dob;\n                formValues.job_status = 'D';\n                if (verificationStatus) {\n                    formValues.job_status = 'A';\n                }\n                const response = await saveJob(formValues);\n                if ('data' in response) {\n                    const jobId = response.data.data.JobId;\n                    if (userData != null) {\n                        userData.IsEmployer = 'Y';\n                        setUserData(userData);\n                    }\n                    if (verificationStatus) {\n                        navigate('/cruz/viewcampaign/livecampaign');\n                    } else {\n                        navigate('/cruz/register', {\n                            state: {\n                                jobId: jobId,\n                                jobRole: formValues.job_role,\n                            },\n                        });\n                    }\n                } else {\n                    console.error(\"Error saving job:\", response.error);\n                }\n            }\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        }\n    };\n    const BtnSave = async () => {\n        try {\n            if (Object.keys(formValues).length != 0) {\n                delete formValues.dob;\n                const response = await saveJob(formValues);\n                if ('data' in response) {\n                    const jobId = response.data.data.JobId;\n                    if (userData != null) {\n                        userData.IsEmployer = 'Y';\n                        setUserData(userData);\n                    }\n                    navigate('/cruz/viewcampaign/draftcampaign');\n                } else {\n                    console.error(\"Error saving job:\", response.error);\n                }\n            }\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        }\n    };\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    return (\n        <div className=\"ReviewEmployer-postpage\">\n            <div className=\"review-postpage-parent\">\n                <div className=\"container-fluid\">\n                    <div className=\"page-path\">\n                        <div className=\"parent-direction\">\n                            <label><a style={{ cursor: \"pointer\" }} onClick={() => navigate(`/cruz/viewcampaign/livecampaign`)}>Campaigns</a></label>\n                        </div>\n                        <span className=\"direction-arrow\">\n                            <FontAwesomeIcon icon={faAngleRight} />\n                        </span>\n                        <div className=\"child-direction\">\n                            <label> {displayArray['job_role']} for Two Months in the {displayArray['job_location']}</label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container-fluid px-0\">\n                <div className='row mx-0'>\n                    <CruzLayout link=\"Employer\">\n                        <div className='col-lg-7 col-12'>\n                            <div className=\"reviewpost-header\">\n                                <div className=\"review-post\">\n                                    <p>REVIEW YOUR POST</p>\n                                    <h2 className=\"customHeading pl-0\">REVIEW YOUR JOB ADVERT</h2>\n                                </div>\n                                <div className=\"view-profile-section\">\n                                    <div className=\"profile-box\">\n                                        <div className=\"profile-box-header\">\n                                            <div className=\"profile-name\">\n                                                <Heading>\n                                                    {displayArray['job_role']}\n                                                </Heading>\n                                            </div>\n                                        </div>\n                                        <div className=\"profile-box-body\">\n                                            <ul className=\"quick-details\">\n                                                {displayArray['vessel_size'] && (<li> {displayArray['vessel_size'] ? `${displayArray['vessel_size']}m` : ''} {displayArray['boat_type'] ? `${displayArray['boat_type']} ` : 'Yacht'} </li>)}\n                                                {displayArray['job_duration'] && (<li>{displayArray['job_duration']}</li>)}\n                                                {displayArray['job_location'] && (<li>{displayArray['job_location']}</li>)}\n                                            </ul>\n                                            <CustomSlider settings={slidesettings} items={slides} />\n                                            <div className=\"employer-custom-card\">\n                                                <div className=\"employer-custom-card-title\">\n                                                    <Heading>THE ROLE</Heading>\n                                                </div>\n                                                <div className=\"employer-custom-card-body\">\n                                                    <div className=\"item-box row\">\n                                                        <div className='options-heading'>\n                                                            <label>Job Title :</label>\n                                                        </div>\n                                                        <div className='col-xl-9 col-6'>\n                                                            <div className=\"view-data\">\n                                                                <span>\n                                                                    {displayArray['job_role']}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"item-box row\">\n                                                        <div className='options-heading'>\n                                                            <label>Type of Boat :</label>\n                                                        </div>\n                                                        <div className='col-xl-9 col-6'>\n                                                            <div className=\"view-data\">\n                                                                <span>{displayArray['boat_type']}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"item-box row\">\n                                                        <div className='options-heading'>\n                                                            <label>Duration :</label>\n                                                        </div>\n                                                        <div className='col-xl-9 col-6'>\n                                                            <div className=\"view-data\">\n                                                                <span>{displayArray['job_duration']}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"item-box row\">\n                                                        <div className='options-heading'>\n                                                            <label>Start Date:</label>\n                                                        </div>\n                                                        <div className='col-xl-9 view-data col-6'>\n                                                            <span>{displayArray['job_start_date'] && new Date(displayArray['job_start_date']).toLocaleDateString('en-GB')}</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"employer-custom-card\">\n                                                <div className=\"employer-custom-card-title\">\n                                                    <Heading>THE BOAT</Heading>\n                                                </div>\n                                                <div className=\"employer-custom-card-body\">\n                                                    <div className=\"item-box row\">\n                                                        <div className='options-heading'>\n                                                            <label>Vessel :</label>\n                                                        </div>\n                                                        <div className='col-xl-9 col-6'>\n                                                            <div className=\"view-data\">\n\n                                                                <span style={{ whiteSpace: \"pre-line\" }}>\n                                                                    {displayArray['vessel_desc']}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"item-box row\">\n                                                        <div className='options-heading'>\n                                                            <label>Location :</label>\n                                                        </div>\n                                                        <div className='col-xl-9 col-6'>\n                                                            <div className=\"view-data\">\n                                                                <span>\n                                                                    <span>{displayArray['job_location']}</span>\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"item-box row\">\n                                                        <div className='options-heading'>\n                                                            <label>Size: </label>\n                                                        </div>\n                                                        <div className='col-xl-9 col-6'>\n                                                            <div className=\"view-data\">\n                                                                <span>\n                                                                    <span>{displayArray['vessel_size'] ? `${displayArray['vessel_size']}m` : \"\"} {displayArray['boat_type'] ? `${displayArray['boat_type']} ` : \"Yacht\"} </span>\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n                                            <div className=\"employer-custom-card\">\n                                                <div className=\"employer-custom-card-title\">\n                                                    <Heading>summary</Heading>\n                                                </div>\n                                                <div className=\"employer-custom-card-body\">\n                                                    <div className=\"item-box\">\n                                                        <span style={{ whiteSpace: \"pre-line\" }}>{displayArray['job_summary']}\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-4 col-12\">\n                            <div className=\"postjob-action\">\n                                <Button\n                                    onClick={handleSubmit}\n                                    text=\"Post Job\"\n                                    icon={true}\n                                    theme=\"light\"\n                                    className=\"w-100\"\n                                    iconname={faAngleRight}\n                                />\n                                <div className=\"prev-action\">\n                                    <Button\n                                        text=\"Go back\"\n                                        icon={false}\n                                        className=\"btn-prev\"\n                                        onClick={handleGoBack}\n                                    />\n                                    <Button\n                                        text=\"Save and exit\"\n                                        icon={false}\n                                        className=\"btn-save\"\n                                        onClick={BtnSave}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </CruzLayout>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ReviewEmployerPost;\n\n\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Progress } from 'reactstrap';\nimport \"./MultiStepForm.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\"\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\nimport { Button } from \"../../components/Button/Button\";\nimport { MultiStepFormProps } from \"../../types/MultiStepFormInterface\";\nimport { useGetJobQuestionsQuery, useSaveJobMutation, useGetJobDetailsMutation } from '../../features/Cruz/Api/CruzMainApiSlice';\nimport Steps from './Steps';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport moment from 'moment';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { ReviewJobEmployerProfile } from '../../features/Cruz/components/ReviewJobEmployerProfile/ReviewJobEmployerProfile';\nimport ReviewEmployerPost from '../../features/Cruz/pages/Employer/ReviewEmployerPost';\nimport { getUserData, setUserData } from '../../utils/Utils';\nimport { Breadcrumbs } from '../../features/Cruz/components/Breadcrumbs/Breadcrumbs';\n\nexport interface Step {\n    title: string;\n    questions: any[];\n}\n\ninterface FormValues {\n    [key: string]: any;\n}\ninterface UserData {\n    Member_fullname: string;\n    Member_type: string;\n    Token: string;\n    members_profile_picture: string;\n    Member_id: string;\n    IsEmployer: string;\n    IsEmployee: string;\n    is_specialist: string;\n}\n\nexport const MultiForm = (props: MultiStepFormProps) => {\n\n\n\n    const form = useForm<FormValues>();\n    const { data, error, isLoading, refetch } = useGetJobQuestionsQuery({});\n    const [saveJob] = useSaveJobMutation();\n    const steps = data?.data?.steps || [];\n    const [stepIndex, setStepIndex] = useState(0);\n    const [questionIndex, setQuestionIndex] = useState(0);\n    const { register, control, handleSubmit, formState, watch, setValue } = form;\n    const currentStep = steps[stepIndex];\n    const currentTitle = currentStep ? currentStep.title : \"\";\n    const [validationName, setValidationName] = useState('');\n    const [disError, setDisError] = useState(0);\n    const [checkQuestion, setCheckQuestion] = useState(1);\n    const userData: UserData | null = getUserData(\"userData\");\n    const [isReview, setIsReview] = useState<boolean>(false);\n    const [isJobDetailsFetched, setIsJobDetailsFetched] = useState(false);\n    const [review, setReview] = useState(0);\n    const [jobRole, setJobRole] = useState<string>('');\n\n    // Watch all form values\n    const formValues = watch();\n    const { id } = useParams<{ id: string }>();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const {\n        firstIndex = '',\n        secondIndex = '',\n    } = location.state || {};\n\n    let redirect = '/cruz/';\n\n\n    const [getJobDetails, { data: jobData, error: jobError, isLoading: jobLoading }] = useGetJobDetailsMutation();\n    const [isLoadings, setIsLoading] = useState(false);\n    const fetchJobDetails = async () => {\n        setIsLoading(true);\n        try {\n            const response = await getJobDetails({ id: id });\n            if ('data' in response) {\n                const jobDetails = response.data.data;\n                for (const key in jobDetails) {\n                    if (key === 'job_start_date' && jobDetails[key] != null) {\n                        // const editdate = moment(jobDetails[key], \"DD-MM-YYYY\");\n                        // const formattedDate = editdate.format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ ');\n                        const dateObject = new Date(jobDetails[key]);\n                        handleDateSelect(dateObject);\n                    }\n                    if (key === 'job_role') {\n                        setJobRole(jobDetails[key]);\n                    }\n                    setValue(key, jobDetails[key]);\n                }\n                setIsJobDetailsFetched(true);\n            } else if ('error' in response) {\n                // Handle the error case\n                console.error(\"Error response received:\", response.error);\n            }\n        } catch (error) {\n            console.error(\"Failed to fetch specialist list:\", error);\n        } finally {\n            setReview(1);\n            setIsLoading(false);\n        }\n\n    };\n\n    useEffect(() => {\n        if (id) {\n            fetchJobDetails();\n        } else {\n            setIsJobDetailsFetched(true);\n        }\n    }, [id]);\n    useEffect(() => {\n\n        setIsJobDetailsFetched(true);\n    }, []);\n    useEffect(() => {\n        if (firstIndex !== '') {\n            setStepIndex(firstIndex);\n        }\n        if (secondIndex !== '') {\n            setQuestionIndex(secondIndex);\n        }\n    }, [firstIndex, secondIndex]);\n\n    useEffect(() => {\n        refetch();\n    }, [refetch]);\n\n\n    const handleContinue = () => {\n        let allNames = [];\n        let currentQuestion = steps[stepIndex].questions[questionIndex];\n        let currentName = currentQuestion.name;\n\n        if (currentName) {\n            allNames.push(currentName);\n        }\n        if (currentQuestion.sub_questions) {\n            const subQuestionNames = currentQuestion.sub_questions.map((subQuestion: any) => subQuestion.name);\n            allNames = allNames.concat(subQuestionNames);\n        }\n\n        let salaryPickerValid = formValues['salary_picker']\n            && formValues['salary_picker'].currency !== ''\n            && formValues['salary_picker'].amount !== ''\n            && formValues['salary_picker'].amount !== null\n            && formValues['salary_picker'].amount !== '0';\n\n        let salaryTypeValid = formValues['job_salary_type']\n            && formValues['job_salary_type'] !== ''\n            && formValues['job_salary_type'] !== undefined;\n\n        let jobSalaryTypeValid = formValues['salary_type']\n            && formValues['salary_type'] !== ''\n            && formValues['salary_type'] !== undefined\n            && formValues['salary_type'] !== null;\n        let isValid = allNames.every(name => {\n            if (name === 'upload_media') {\n                return true;\n            }\n            if (name === 'salary_picker' || name === 'job_salary_type' || name === 'salary_type') {\n                return (salaryPickerValid && salaryTypeValid) || jobSalaryTypeValid;\n            }\n            return formValues[name] !== '' && formValues[name] !== undefined && formValues[name] !== null;\n        });\n\n        if (!isValid) {\n\n            // Determine appropriate validation message\n            if (allNames.includes('salary_picker') || allNames.includes('job_salary_type') || allNames.includes('salary_type')) {\n                if (salaryPickerValid && !salaryTypeValid) {\n                    setValidationName(\"Please select salary type\");\n                } else if (!salaryPickerValid && salaryTypeValid) {\n                    setValidationName(\"Please enter salary\");\n                } else {\n                    setValidationName(currentQuestion.validation);\n                }\n            } else {\n                setValidationName(currentQuestion.validation);\n            }\n            setDisError(1);\n        } else {\n            if (((stepIndex + 1) / steps.length) === 1 && steps[stepIndex].questions.length === (questionIndex + 1)) {\n                setReview(1);\n            } else {\n                setCheckQuestion(prevCheckQuestion => prevCheckQuestion + 1);\n                setDisError(0);\n                setQuestionIndex(prevQuestionIndex => prevQuestionIndex + 1);\n                if (steps[stepIndex].questions.length - 1 === questionIndex) {\n                    setStepIndex(prevStepIndex => prevStepIndex + 1);\n                    setQuestionIndex(0);\n                }\n            }\n        }\n    };\n\n\n    const handleGoBack = () => {\n\n        if (id && stepIndex <= 0 && questionIndex === 0) {\n            navigate(-1);\n        }\n        setDisError(0);\n        setQuestionIndex(prevQuestionIndex => prevQuestionIndex - 1);\n        if (questionIndex === 0 && stepIndex > 0) {\n            setStepIndex(prevStepIndex => prevStepIndex - 1);\n            setQuestionIndex(steps[stepIndex].questions.length);\n        }\n        if (stepIndex <= 0 && questionIndex === 0) {\n            navigate(redirect);\n        }\n    };\n\n    const handleReset = () => {\n        setStepIndex(0);\n        setQuestionIndex(0);\n    };\n\n    const handleOptionChange = (name: string, optionKey: any, type: string, isChecked: boolean | undefined) => {\n        if (type === 'radio') {\n            setValue(name, optionKey);\n            if (name === 'salary_type') {\n                setValue('job_salary_type', '');\n                setValue('salary_picker.amount', '');\n            }\n            if (name === 'job_salary_type') {\n                setValue('salary_type', '');\n            }\n        } else if (type === 'checkbox') {\n            const currentValue = Array.isArray(formValues[name]) ? formValues[name] : [];\n            let updatedValue;\n            if (isChecked) {\n                updatedValue = [...currentValue, String(optionKey)];\n            } else {\n                updatedValue = currentValue.filter((value: string) => String(value) !== String(optionKey));\n            }\n            setValue(name, updatedValue);\n        }\n    };\n\n    const [startDate, setSelectedDate] = useState<Date | null>(null);\n    const handleDateSelect = (date: Date | null) => {\n        setSelectedDate(date);\n        setValue('job_start_date', moment(date).format('YYYY-MM-DD'));\n\n        const year = moment(date).format('YYYY');\n        const month = moment(date).format('MM');\n        const day = moment(date).format('DD');\n        setValue(\"dob['dobDay']\", day);\n        setValue(\"dob['dobMonth']\", month);\n        setValue(\"dob['dobYear']\", year);\n    };\n\n    const [fileName, setFileName] = useState<string | null>(null);\n    const getFileName = (name: string | null) => {\n        if (name) {\n            const currentImages = formValues.upload_media || [];\n            const updatedImages = [...currentImages, name];\n            setFileName(name);\n            setValue('upload_media', updatedImages);\n        }\n    };\n\n    const BtnSave = async () => {\n        try {\n            if (Object.keys(formValues).length != 0) {\n                delete formValues.dob;\n                const response = await saveJob(formValues);\n                if ('data' in response) {\n                    const jobId = response.data.data.JobId;\n                    setValue('id', jobId);\n                    if (userData != null) {\n                        userData.IsEmployer = 'Y';\n                        setUserData(userData);\n                    }\n                    if (isReview || id) {\n                        setReview(1);\n                    } else {\n                        navigate('/cruz/viewcampaign/draftcampaign');\n                    }\n\n                } else {\n                    console.error(\"Error saving job:\", response.error);\n                }\n            } else {\n                let firstQuestion = steps[stepIndex].questions[questionIndex];\n                setValidationName(firstQuestion.validation);\n                setDisError(1);\n            }\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        }\n    };\n\n\n    const handlePreview = async () => {\n        try {\n            if (Object.keys(formValues).length != 0) {\n                setReview(2);\n            }\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        }\n    };\n\n    const handleFormSubmit = (data: FormValues) => {\n        // Handle form submission logic here\n    };\n\n    const handleReviewGoBack = async (stepIndex: any, questionIndex: any) => {\n        setValidationName('');\n        setDisError(0);\n        try {\n            if (id && stepIndex === -1 && questionIndex === 0) {\n                navigate(-1);\n            }\n            if (stepIndex === -1) {\n                stepIndex = steps.length - 1;\n            }\n            setReview(0);\n            setIsReview(true);\n            setStepIndex(parseInt(stepIndex));\n            setQuestionIndex(parseInt(questionIndex));\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        }\n    }\n    const handlePreviewGoBack = async () => {\n        try {\n            setReview(1);\n        } catch (error) {\n            // Handle error response here\n            console.error(\"Error saving job:\", error);\n        }\n    }\n    if (!isJobDetailsFetched) {\n        return (\n            <div className=\"page-loader\">\n                <div className=\"page-innerLoader\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <img src={require(\"../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    if (review === 0) {\n        return (\n            <div className=\"row multiform-parent-section\">\n\n\n                <div className=\"multistepForm\">\n\n\n                    <Container className=\"text-center multistepForm-parent\">\n                        <Row>\n                            <FormProvider {...form}>\n                                <form\n                                    className=\"MultiQuestionForm\"\n                                    onSubmit={handleSubmit(handleFormSubmit)}\n                                    noValidate\n                                >\n\n                                    {data && steps && currentStep && (\n                                        <Col className=\"col-lg-7 col-12 steps-option-section\">\n                                            <div className=\"step-count\">\n                                                <p>\n                                                    <span className=\"Caption\">{currentTitle}</span>\n                                                </p>\n                                            </div>\n                                            <Progress value={((stepIndex + 1) / steps.length) * 100} />\n                                            <div className='Stepper'>\n                                                <Steps\n                                                    title={steps[stepIndex].questions[questionIndex].title}\n                                                    subtitle={steps[stepIndex].questions[questionIndex].sub_title}\n                                                    placeholder={steps[stepIndex].questions[questionIndex].placeholder}\n                                                    type={steps[stepIndex].questions[questionIndex].type}\n                                                    name={steps[stepIndex].questions[questionIndex].name}\n                                                    multiple={false}\n                                                    Qoptions={steps[stepIndex].questions[questionIndex].options}\n                                                    onOptionChange={handleOptionChange}\n                                                    getFileName={getFileName}\n                                                    sub_questions={steps[stepIndex].questions[questionIndex].sub_questions}\n                                                    formValues={formValues}\n                                                    setValue={setValue}\n                                                    control={control}\n                                                    startDate={startDate}\n                                                    handleDateSelect={handleDateSelect}\n                                                    exclude_jobrole={steps[stepIndex].questions[questionIndex].exclude_jobrole}\n                                                    jobRole={jobRole}\n                                                />\n                                            </div>\n                                        </Col>\n                                    )}\n\n                                    <Col className=\"action-groups col-lg-5 col-12\">\n                                        <div className={`action-steps ${disError === 1 ? 'error-active' : ''}`}>\n                                            {disError === 1 && (\n                                                <div className=\"error-alert\">\n                                                    <span>\n                                                        <img src={require('../../assets/images/cruz/erroralert.png')} className='img-fluid' alt=\"\" />\n                                                        <span className=\"mx-2\">{validationName}</span>\n                                                    </span>\n                                                </div>\n                                            )}\n                                            <div className=\"continue-action\">\n                                                <Button\n                                                    text={'Continue'}\n                                                    icon={true}\n                                                    theme=\"light\"\n                                                    className=\"btn-continue\"\n\n                                                    onClick={handleContinue}\n                                                />\n                                            </div>\n                                            <div className=\"prev-action\">\n                                                <Button\n                                                    text=\"Go back\"\n                                                    icon={false}\n                                                    className=\"btn-prev\"\n                                                    onClick={handleGoBack}\n                                                />\n                                                <Button\n                                                    text=\"Save and exit\"\n                                                    icon={false}\n                                                    className=\"btn-save\"\n                                                    onClick={BtnSave}\n                                                />\n                                            </div>\n                                            {stepIndex === steps.length - 1 && questionIndex === steps[stepIndex].questions.length - 1 && (\n                                                <Button className='d-none' onClick={handleReset}>Reset</Button>\n                                            )}\n                                        </div>\n                                    </Col>\n                                </form>\n                            </FormProvider>\n                        </Row>\n                    </Container>\n\n                </div>\n            </div>\n        );\n    } else if (review === 1) {\n        return <ReviewJobEmployerProfile formValues={formValues} steps={steps} handlePreview={handlePreview} handleGoBack={handleReviewGoBack} />\n    } else {\n        return <ReviewEmployerPost formValues={formValues} steps={steps} handleGoBack={handlePreviewGoBack} />\n    }\n};\n","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\nimport \"../../../../assets/scss/cruz.scss\";\nimport { MultiForm } from \"../../../../components/MultiForm/MultiForm\";\nexport const Job = () => {\n    return (\n        // <CruzLayout></CruzLayout>\n        <div className=\"PostJob-parent\">\n            <div className=\"container\">\n                <MultiForm children={undefined}></MultiForm>\n            </div>\n        </div >\n    )\n}\nexport default Job;","import React, { useState } from \"react\";\nimport { Hero } from \"../../../../components/Hero/Hero\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { Button } from \"../../../../components/Button/Button\";\nexport const JobPostStatus = () => {\n    return (\n        <div className=\"JobpostStatus-page\">\n            <div className=\"postStatusPage\">\n                <Hero\n                    source={require(\"../../../../assets/images/cruz/banner-slide.png\")}\n                    title={'congratulations'}\n                />\n                <div className=\"status-text\">\n                    <span>Your post is now live</span>\n                    <div className=\"action-btn\">\n                        <Button\n                            onClick={() => console.log(\"Hello\")}\n                            text=\"Start Looking for Crew\"\n                            icon={true}\n                            theme=\"light\"\n                            className=\"\"\n                        />\n                       \n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\n\nexport default JobPostStatus;\n","import React, { useState } from \"react\";\nimport { Hero } from \"../../../../components/Hero/Hero\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { useNavigate } from \"react-router-dom\";\nexport const EmployeeJobpostStatus = () => {\n    const navigate = useNavigate();\n    return (\n        <div className=\"JobpostStatus-page EmployeeJobPostStatus\">\n            <div className=\"postStatusPage\">\n                <Hero\n                    source={require(\"../../../../assets/images/cruz/jobpostBanner.png\")}\n                    title={'congratulations'}\n                />\n                <div className=\"status-text\">\n                    <span>Your profile is now live</span>\n                    <div className=\"action-btn\">\n                        <Button\n                            onClick={() => navigate('/cruz/employeejobs')}\n                            text=\"Start Looking for Jobs\"\n                            icon={true}\n                            theme=\"light\"\n                            className=\"\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default EmployeeJobpostStatus;","import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { useSetStatusMutation } from \"../../Api/ProfileApiSlice\";\nimport { getUserData, setUserData } from \"../../../../utils/Utils\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\n\nexport const SetStatus = () => {\n    let statusArray = {\n        'A': 'active',\n        'I': 'inactive',\n    };\n\n    const [currentStatus, setCurrentStatus] = useState<string | undefined>('');\n    const [activeButton, setActiveButton] = useState('');\n    const [message, setMessage] = useState<string>('');\n    const userData = getUserData(\"userData\");\n    useEffect(() => {\n\n        if (userData !== null) {\n            setCurrentStatus(userData.employee_status);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (currentStatus) {\n            setActiveButton(statusArray[currentStatus as keyof typeof statusArray]);\n        }\n    }, [currentStatus]);\n\n\n    const handleButtonClick = (button: string) => {\n        setActiveButton(button);\n    };\n    const [setStatus] = useSetStatusMutation();\n    const handleSubmit = async () => {\n        try {\n            setMessage('');\n            let status = 'A';\n            if (activeButton === 'inactive') {\n                status = 'I';\n            }\n            let saveStatus = {\n                employee_status: status,\n            };\n            const response = await setStatus(saveStatus);\n            if ('data' in response) {\n                setCurrentStatus(status)\n                if (userData != null) {\n                    userData.employee_status = status;\n                    setUserData(userData);\n                }\n                setMessage(`Status Changes Successfully to ${activeButton}`);\n            } else {\n                console.error(\"Error saving job:\", response.error);\n                setMessage('');\n            }\n        } catch {\n\n        }\n\n    }\n    return (\n        <div className=\"SetStatus-page\">\n            <CruzLayout link=\"Employee\">\n                <div className=\"setUppage-content w-100\">\n                    <Breadcrumbs mainbreadcrumb=\"Dashboard\" secondbreadcrumb=\"Set up Status\" redirectUrl=\"/cruz/employeedashboard\" />\n                    <div className=\"page-content\">\n                        <h2 className=\"customHeading\">Set status</h2>\n                        <div className=\"row\">\n                            <div className=\"active-inactive col-xl-7  col-md-6  col-12\">\n                                <Button\n                                    onClick={() => handleButtonClick('active')}\n                                    text=\"Active\"\n                                    icon={false}\n                                    theme=\"light\"\n                                    className={activeButton === 'active' ? 'active' : ''}\n                                />\n                                <Button\n                                    onClick={() => handleButtonClick('inactive')}\n                                    text=\"Inactive\"\n                                    icon={false}\n                                    theme=\"light\"\n                                    className={activeButton === 'inactive' ? 'active' : 'Inactive'}\n                                />\n                                <div id=\"card-errors\" role=\"alert\" style={{ color: 'green' }}>\n                                    {message}\n                                </div>\n                            </div>\n                            <div className=\"layout-action col-xl-5  col-md-6  col-12\">\n                                <div className=\"content-text\">\n                                    <p>When set to ‘Inactive’ your profile will not appear on searches.</p>\n                                    <Button\n                                        onClick={handleSubmit}\n                                        text=\"Set Status\"\n                                        icon={true}\n                                        theme=\"light\"\n                                        className=\"\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </CruzLayout>\n        </div>\n    );\n}\n\nexport default SetStatus;\n","import { useParams } from \"react-router-dom\";\nimport { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { EmployerProfile } from \"../../components/EmployerProfile/EmployerProfile\";\nimport { useEmployerProfileQuery } from \"../../components/EmployerProfile/EmployerProfileApiSlice\";\ninterface Media {\n  media_file: string;\n}\nexport const ViewJob = () => {\n\n  const { id } = useParams();\n  const { data, error, isLoading, isSuccess } = useEmployerProfileQuery({ id });\n  const jobProfile = data?.data.jobDetails;\n  const medias: Media[] = data?.data.mediaDetails || [];\n  return (\n    <div className=\"viewProfile employer-profileparent cardcommonparent\">\n      <CruzLayout link=\"Employer\">\n        <EmployerProfile jobProfile={jobProfile} medias={medias} from=\"Employer\" />\n      </CruzLayout>\n    </div>\n  );\n};\nexport default ViewJob;\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Progress } from \"reactstrap\";\nimport \"./MultiStepForm.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"../../components/Button/Button\";\nimport { MultiStepFormProps } from \"../../types/MultiStepFormInterface\";\nimport {\n  useGetProfileQuestionsQuery,\n  useSaveProfileMutation,\n} from \"../../features/Cruz/Api/CruzMainApiSlice\";\nimport Steps from \"./Steps\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport moment from \"moment\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { generateDefaultValues, getUserData } from \"../../utils/Utils\";\nimport { useGetProfileDetailsMutation } from \"../../features/Cruz/Api/CruzMainApiSlice\";\nimport { setUserData } from \"../../utils/Utils\";\nimport { Breadcrumbs } from \"../../features/Cruz/components/Breadcrumbs/Breadcrumbs\";\n\ninterface Step {\n  title: string;\n  questions: any[];\n}\ninterface Media {\n  id: number;\n  media_file: string;\n}\ninterface FormValues {\n  [key: string]: any;\n}\ninterface UserData {\n  Member_fullname: string;\n  Member_type: string;\n  Token: string;\n  members_profile_picture: string;\n  Member_id: string;\n  IsEmployer: string;\n  IsEmployee: string;\n  is_specialist: string;\n}\ninterface FetchBaseQueryError {\n  status: number;\n  data: {\n    errors: {\n      employee_role: string[];\n    };\n  };\n}\n\nexport const ProfileSetup = (props: MultiStepFormProps) => {\n  const [initialValue, setInitialValue] = useState({});\n  const [datepickerDate, setDatepickerDate] = useState<Date | null>(null);\n  const form = useForm<FormValues>({\n    defaultValues: initialValue,\n  });\n  const { data, error, isLoading, isSuccess } = useGetProfileQuestionsQuery({});\n  const steps = data?.data?.steps || [];\n  const [stepIndex, setStepIndex] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const { register, control, handleSubmit, formState, watch, setValue, reset } =\n    form;\n  const currentStep = steps[stepIndex];\n  const currentTitle = currentStep ? currentStep.title : \"\";\n  const [disError, setDisError] = useState(0);\n  const [checkQuestion, setCheckQuestion] = useState(1);\n  const [validationName, setValidationName] = useState(\"\");\n  const { id } = useParams<{ id: string }>();\n  const location = useLocation();\n  const [isReview, setIsReview] = useState<boolean>(false);\n  const [isProfileDetailsFetched, setIsProfileDetailsFetched] = useState(false);\n  // Watch all form values\n  const formValues = watch();\n  const navigate = useNavigate();\n  const { firstIndex = \"\", secondIndex = \"\" } = location.state || {};\n  let redirect = \"/cruz/\";\n  if (id) {\n    redirect = \"/cruz/employeedashboard\";\n  }\n\n  useEffect(() => {\n    if (!id) {\n      const initvalue = generateDefaultValues(steps);\n      setInitialValue(initvalue);\n      reset(initialValue);\n    }\n  }, [isSuccess, steps, reset, id]);\n\n  const userData = getUserData(\"userData\");\n\n  const [\n    getProfileDetails,\n    { data: jobData, error: jobError, isLoading: jobLoading },\n  ] = useGetProfileDetailsMutation();\n  const [isLoadings, setIsLoading] = useState(false);\n\n  const fetchJobDetails = async () => {\n    setIsLoading(true);\n    try {\n      const response = await getProfileDetails({ id: id });\n      if (\"data\" in response) {\n        const profileDetails = response.data.data;\n        // Use reset instead of setting values one by one\n        reset({\n          ...profileDetails,\n          employee_dob: profileDetails.employee_dob\n            ? moment(profileDetails.employee_dob).format(\"YYYY-MM-DD\")\n            : \"\",\n          employee_avilable_date: profileDetails.employee_avilable_date\n            ? moment(profileDetails.employee_avilable_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        });\n        // console.log(\"Form reset with\", {\n        //   ...profileDetails,\n        //   employee_dob: profileDetails.employee_dob\n        //     ? moment(profileDetails.employee_dob).format(\"YYYY-MM-DD\")\n        //     : \"\",\n        //   employee_avilable_date: profileDetails.employee_avilable_date\n        //     ? moment(profileDetails.employee_avilable_date).format(\"YYYY-MM-DD\")\n        //     : \"\",\n        // });\n        if (profileDetails.employee_dob) {\n          const editdate = moment(profileDetails.employee_dob);\n          const formattedDate = editdate.format(\n            \"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ \"\n          );\n          const dateObject = new Date(formattedDate);\n          const year = moment(dateObject).format(\"YYYY\");\n          const month = moment(dateObject).format(\"MM\");\n          const day = moment(dateObject).format(\"DD\");\n          setValue(\"dob['dobDay']\", day);\n          setValue(\"dob['dobMonth']\", month);\n          setValue(\"dob['dobYear']\", year);\n        }\n        if (profileDetails.employee_avilable_date != null) {\n          const editdate = moment(profileDetails.employee_avilable_date);\n          const formattedDate = editdate.format(\n            \"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ \"\n          );\n          const dateObject = new Date(formattedDate);\n          handleDatePickerSelect(dateObject);\n        }\n        setIsProfileDetailsFetched(true);\n      } else if (\"error\" in response) {\n        // Handle the error case\n        console.error(\"Error response received:\", response.error);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch specialist list:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (id) {\n      fetchJobDetails();\n    } else {\n      setIsProfileDetailsFetched(true);\n    }\n    if (firstIndex !== \"\") {\n      setStepIndex(firstIndex);\n      setIsReview(true);\n    }\n    if (secondIndex !== \"\") {\n      setQuestionIndex(secondIndex);\n      setIsReview(true);\n    }\n  }, [id, firstIndex, secondIndex]);\n\n  const handleContinue = () => {\n    let allNames = [];\n    let currentQuestion = steps[stepIndex].questions[questionIndex];\n    let currentName = currentQuestion.name;\n    if (currentName) {\n      allNames.push(currentName);\n    }\n    if (currentQuestion.sub_questions) {\n      const subQuestionNames = currentQuestion.sub_questions.map(\n        (subQuestion: any) => subQuestion.name\n      );\n      allNames = allNames.concat(subQuestionNames);\n    }\n    let isValid = allNames.every((name) => {\n      if (currentQuestion.type === \"checkbox\") {\n        const checkvalues = formValues[name];\n        if (Array.isArray(checkvalues)) {\n          return checkvalues.some((someValue) => someValue.value !== \"\");\n        }\n        return false;\n      }\n      if (name === \"upload_media\") {\n        return true;\n      }\n      if (name === \"employee_avilable\") {\n        const employeeAvailable = formValues[\"employee_avilable\"];\n        const employeeAvailableDate = formValues[\"employee_avilable_date\"];\n        return (\n          (employeeAvailable !== \"\" && employeeAvailable !== undefined) ||\n          (employeeAvailableDate !== \"\" && employeeAvailableDate !== undefined)\n        );\n      }\n      if (name === \"employee_interest\") {\n        const employeeInterest = formValues[\"employee_interest\"];\n        if (Array.isArray(employeeInterest)) {\n          return employeeInterest.some((interest) => interest.value !== \"\");\n        }\n        return false;\n      }\n      return (\n        formValues[name] !== \"\" &&\n        formValues[name] !== undefined &&\n        formValues[name] !== null\n      );\n    });\n    if (\n      (stepIndex + 1) / steps.length === 1 &&\n      steps[stepIndex].questions.length === questionIndex + 1\n    ) {\n      SaveReview();\n    } else {\n      if (isValid) {\n        setCheckQuestion((prevCheckQuestion) => prevCheckQuestion + 1);\n        setDisError(0);\n        setQuestionIndex((prevQuestionIndex) => prevQuestionIndex + 1);\n        if (steps[stepIndex].questions.length - 1 === questionIndex) {\n          setStepIndex((prevStepIndex) => prevStepIndex + 1);\n          setQuestionIndex(0);\n        }\n      } else {\n        setValidationName(currentQuestion.validation);\n        setDisError(1);\n      }\n    }\n  };\n\n  const handleGoBack = () => {\n    setDisError(0);\n    setQuestionIndex((prevQuestionIndex) => prevQuestionIndex - 1);\n    if (questionIndex === 0 && stepIndex > 0) {\n      setQuestionIndex(steps[stepIndex - 1].questions.length - 1);\n      setStepIndex((prevStepIndex) => prevStepIndex - 1);\n    }\n    if (stepIndex <= 0 && questionIndex === 0) {\n      navigate(redirect);\n    }\n  };\n\n  const handleReset = () => {\n    setStepIndex(0);\n    setQuestionIndex(0);\n  };\n\n  const handleOptionChange = (\n    name: string,\n    optionKey: any,\n    type: string,\n    isChecked: boolean | undefined\n  ) => {\n    if (type === \"radio\") {\n      if (name === \"employee_avilable\") {\n        setIsDateSelected(false);\n        setDatepickerDate(null);\n        setValue(\"employee_avilable_date\", \"\");\n      }\n      setValue(name, optionKey);\n    } else if (type === \"checkbox\") {\n      const currentValue = Array.isArray(formValues[name])\n        ? formValues[name]\n        : [];\n      let updatedValue;\n      if (isChecked) {\n        updatedValue = [...currentValue, String(optionKey)];\n      } else {\n        updatedValue = currentValue.filter(\n          (value: any) => String(value) !== String(optionKey)\n        );\n      }\n      setValue(name, updatedValue);\n    }\n  };\n\n  const [startDate, setSelectedDate] = useState<Date | null>(null);\n  const handleDateSelect = (date: Date | null) => {\n    setSelectedDate(date);\n    setValue(\"employee_dob\", moment(date).format(\"YYYY-MM-DD\"));\n\n    const year = moment(date).format(\"YYYY\");\n    const month = moment(date).format(\"MM\");\n    const day = moment(date).format(\"DD\");\n    setValue(\"dob['dobDay']\", day);\n    setValue(\"dob['dobMonth']\", month);\n    setValue(\"dob['dobYear']\", year);\n  };\n  const [isDateSelected, setIsDateSelected] = useState(false);\n  const handleDatePickerSelect = (date: Date | null) => {\n    setDatepickerDate(date);\n    setValue(\"employee_avilable\", \"\");\n    delete formValues.employee_avilable;\n    setValue(\"employee_avilable_date\", moment(date).format(\"YYYY-MM-DD\"));\n    setIsDateSelected(!!date);\n  };\n  const getFileName = (name: string | null) => {\n    if (name) {\n      const currentImages = formValues.upload_media || [];\n      const updatedImages = [...currentImages, name];\n      setValue(\"upload_media\", updatedImages);\n    }\n  };\n\n  function isFetchBaseQueryError(error: any): error is FetchBaseQueryError {\n    return (\n      error &&\n      typeof error.status === \"number\" &&\n      error.data &&\n      error.data.errors\n    );\n  }\n\n  const [saveProfile] = useSaveProfileMutation();\n\n  const SaveReview = async () => {\n    try {\n      if (Object.keys(formValues).length != 0) {\n        delete formValues.dob;\n        delete formValues.employee_video;\n        delete formValues.interests;\n        if (formValues[\"employee_avilable_date\"]) {\n          delete formValues.employee_avilable;\n        }\n        const response = await saveProfile(formValues);\n        if (\"data\" in response) {\n          if (userData != null) {\n            userData.IsEmployee = \"Y\";\n            userData.employeeId = response.data.data.employeeId;\n            setUserData(userData);\n          }\n          navigate(\"/cruz/employeejobpoststatus\");\n        } else {\n          console.error(\"Error saving job:\", response.error);\n        }\n      } else {\n        let firstQuestion = steps[stepIndex].questions[questionIndex];\n        setValidationName(firstQuestion.validation);\n        setDisError(1);\n      }\n    } catch (error) {\n      // Handle error response here\n      console.error(\"Error saving job:\", error);\n    }\n  };\n\n  const BtnSave = async () => {\n    try {\n      if (Object.keys(formValues).length != 0) {\n        delete formValues.dob;\n        delete formValues.employee_video;\n        if (formValues[\"employee_avilable_date\"]) {\n          delete formValues.employee_avilable;\n        }\n        const response = await saveProfile(formValues);\n        if (\"data\" in response) {\n          if (userData != null) {\n            userData.IsEmployee = \"Y\";\n            userData.employeeId = response.data.data.employeeId;\n            setUserData(userData);\n          }\n          if (isReview || id) {\n            navigate(\"/cruz/reviewemployeeprofile\");\n          } else {\n            navigate(\"/cruz/employeedashboard\");\n          }\n        } else if (\n          \"error\" in response &&\n          isFetchBaseQueryError(response.error)\n        ) {\n          const errorMessage = response.error.data.errors.employee_role[0];\n          setValidationName(errorMessage);\n          setDisError(1);\n        } else {\n          console.error(\"Unexpected response format\", response);\n        }\n      } else {\n        let firstQuestion = steps[stepIndex].questions[questionIndex];\n        setValidationName(firstQuestion.validation);\n        setDisError(1);\n      }\n    } catch (error) {\n      // Handle error response here\n      console.error(\"Error saving job:\", error);\n    }\n  };\n\n  const handleFormSubmit = (data: FormValues) => {\n    // Handle form submission logic here\n  };\n  if (!isProfileDetailsFetched) {\n    // Render a loading spinner or some placeholder while fetching job details\n    return (\n      <div className=\"page-loader\">\n        <div className=\"page-innerLoader\">\n          <div className=\"spinner-border\" role=\"status\">\n            <img\n              src={require(\"../../assets/images/cruz/Frame.png\")}\n              alt=\"\"\n              className=\"img-fluid\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"row multiform-parent-section\">\n      <div className=\"multistepForm\">\n        <Container className=\"text-center multistepForm-parent\">\n          <Row>\n            <FormProvider {...form}>\n              <form\n                className=\"MultiQuestionForm\"\n                onSubmit={handleSubmit(handleFormSubmit)}\n                noValidate\n              >\n                {data && steps && currentStep && (\n                  <Col className=\"col-lg-7 col-12 steps-option-section\">\n                    <div className=\"step-count\">\n                      <p>\n                        <span className=\"Caption\">{currentTitle}</span>\n                      </p>\n                    </div>\n                    <Progress value={((stepIndex + 1) / steps.length) * 100} />\n                    <div className=\"Stepper\">\n                      <Steps\n                        title={steps[stepIndex].questions[questionIndex].title}\n                        subtitle={\n                          steps[stepIndex].questions[questionIndex].sub_title\n                        }\n                        placeholder={\n                          steps[stepIndex].questions[questionIndex].placeholder\n                        }\n                        type={steps[stepIndex].questions[questionIndex].type}\n                        name={steps[stepIndex].questions[questionIndex].name}\n                        multiple={\n                          steps[stepIndex].questions[questionIndex].multiple\n                        }\n                        theme={steps[stepIndex].questions[questionIndex].theme}\n                        Qoptions={\n                          steps[stepIndex].questions[questionIndex].options\n                        }\n                        onOptionChange={handleOptionChange}\n                        getFileName={getFileName}\n                        sub_questions={\n                          steps[stepIndex].questions[questionIndex]\n                            .sub_questions\n                        }\n                        formValues={formValues}\n                        setValue={setValue}\n                        control={control}\n                        startDate={startDate}\n                        handleDateSelect={handleDateSelect}\n                        search={\n                          steps[stepIndex].questions[questionIndex].search\n                        }\n                        datepicker={\n                          steps[stepIndex].questions[questionIndex].datepicker\n                        }\n                        handleDatePickerSelect={handleDatePickerSelect}\n                        datepickerDate={datepickerDate}\n                        isDateSelected={isDateSelected}\n                      />\n                    </div>\n                  </Col>\n                )}\n\n                <Col className=\"action-groups col-lg-5 col-12\">\n                  <div\n                    className={`action-steps ${disError === 1 ? \"error-active\" : \"\"\n                      }`}\n                  >\n                    {disError === 1 && (\n                      <div className=\"error-alert\">\n                        <span>\n                          <FontAwesomeIcon icon={faInfoCircle} />\n                          <span className=\"mx-2\">{validationName}</span>\n                        </span>\n                      </div>\n                    )}\n                    <div className=\"continue-action\">\n                      <Button\n                        text={\"Continue\"}\n                        icon={true}\n                        theme=\"light\"\n                        className=\"btn-continue\"\n                        onClick={handleContinue}\n                      />\n                    </div>\n                    <div className=\"prev-action\">\n                      <Button\n                        text=\"Go back\"\n                        icon={false}\n                        className=\"btn-prev\"\n                        onClick={handleGoBack}\n                      />\n                      <Button\n                        text=\"Save and exit\"\n                        icon={false}\n                        className=\"btn-save\"\n                        onClick={BtnSave}\n                      />\n                    </div>\n                    {stepIndex === steps.length - 1 &&\n                      questionIndex ===\n                      steps[stepIndex].questions.length - 1 && (\n                        <Button className=\"d-none\" onClick={handleReset}>\n                          Reset\n                        </Button>\n                      )}\n                  </div>\n                </Col>\n              </form>\n            </FormProvider>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\nimport \"../../../../assets/scss/cruz.scss\";\nimport { ProfileSetup } from \"../../../../components/MultiForm/ProfileSetup\";\nexport const CreateProfile = () => {\n    return (\n        // <CruzLayout></CruzLayout>\n        <div className=\"PostJob-parent\">\n            <div className=\"container\">\n                <ProfileSetup children={undefined}></ProfileSetup>\n            </div>\n        </div >\n    )\n}\nexport default CreateProfile;","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { EmployerProfile } from \"../../components/EmployerProfile/EmployerProfile\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { Modal, ModalBody } from \"reactstrap\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useEmployerProfileQuery } from \"../../components/EmployerProfile/EmployerProfileApiSlice\";\nimport { useAvailableJobsListMutation, useLikeEmployeeMutation, useUnlikeEmployeeMutation } from \"../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport SingleChatMain from \"../../../Chat/PrivateChat/SingleChatMain/SingleChatMain\";\nimport { EmployeeInterface, MemberInterface } from \"../../../../types/PrivateChatInterfaces\";\nimport { getUserData } from \"../../../../utils/Utils\";\nimport { useSocket } from \"../../../../contexts/SocketContext\";\n\ninterface Media {\n    id: number;\n    media_file: string;\n}\ninterface EmpDetails {\n    employee_id: number;\n    job_ids: number[];\n    jobCount: number;\n}\n\nexport const EmployerViewsJobs = () => {\n    const [modal1Open, setModal1Open] = useState(false);\n    const [modal2Open, setModal2Open] = useState(false);\n    const [modalCall, setModalCall] = useState(true);\n    const [jobProfile, setJobProfile] = useState(null);\n    const [medias, setMedias] = useState<Media[]>([]);\n    const location = useLocation();\n    const [page, setPage] = useState(1);\n    const [pageDetails, setPageDetails] = useState('');\n    const [jobId, setJobId] = useState(null);\n    const [empDetails, setEmpDetails] = useState<EmpDetails>(location.state as EmpDetails);\n    const [availableJobs] = useAvailableJobsListMutation();\n    const [loading, setLoading] = useState(false);\n    const [likeEmployee] = useLikeEmployeeMutation();\n    const [unLikeEmployee] = useUnlikeEmployeeMutation();\n    const [profilePic, setProfilePic] = useState();\n    const userData = getUserData(\"userData\");\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    const [isMatch, setIsmMatch] = useState<boolean>(false);\n    let memberProfilePic = \"\";\n    const { setIsChatVisible, setPrivateChatMember, setIsInterview, setEmployeeDetails, setChatType } = useSocket();\n\n    try {\n        if (userData !== null) {\n            memberProfilePic = userData.members_profile_picture;\n        } else {\n            // console.error(\"User data not found in local storage\");\n        }\n    } catch (error) {\n        console.error(\"Error parsing user data:\", error);\n    }\n    const Loading = () => {\n        const timer = setTimeout(() => {\n            setLoading(false);\n        }, 300);\n        return () => clearTimeout(timer);\n    }\n    useEffect(() => {\n        const fetchAvailableJobs = async () => {\n            if (empDetails.employee_id && empDetails.job_ids) {\n                let jobData = {\n                    employee_id: empDetails.employee_id,\n                    job_ids: empDetails.job_ids,\n                    page: page,\n                };\n                setLoading(true);\n                try {\n                    const response = await availableJobs(jobData);\n                    if ('data' in response && response.data) {\n                        setJobProfile(response.data.data[0]);\n                        setMedias(response.data.data[0].job_images);\n                        setJobId(response.data.data[0].id);\n                        if (response.data.data[0].is_match === 'Y') {\n                            setIsmMatch(true);\n\n                            setProfilePic(response.data.data[0].member.member_profile_picture);\n                            setIsInterview(false);\n                            setChatType('CRUZ');\n                            setPrivateChatMember(response.data.data[0].member);\n                            setIsChatVisible(true);\n                            setEmployeeDetails({\n                                employee_id: empDetails.employee_id,\n                                job_id: response.data.data[0].id\n                            });\n                            const timer = setTimeout(() => {\n                                toggleModal2();\n                            }, 800);\n\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching available jobs:\", error);\n                } finally {\n                    Loading();\n                }\n            }\n        };\n\n        fetchAvailableJobs();\n        setPageDetails(`Viewing ${page} of ${empDetails.jobCount} matching jobs`);\n    }, [empDetails, page, availableJobs]);\n\n    const [Status, setStatus] = useState(0);\n    const [className, setClassName] = useState('');\n    const navigate = useNavigate();\n    const toggleModal1 = () => {\n        setModal1Open(!modal1Open);\n    }\n    const toggleModal2 = () => {\n        setModal2Open(!modal2Open);\n    };\n    const handleNext = async () => {\n        if (page < empDetails.jobCount) {\n            setPage(prevPage => prevPage + 1);\n        } else {\n            setPageDetails('No more Jobs to show');\n            const timer = setTimeout(() => {\n                navigate('/cruz/employeedashboard');\n            }, 700);\n\n        }\n    }\n    const handleBack = async () => {\n        if (page > 1) {\n            setPage(prevPage => prevPage - 1);\n        } else {\n            navigate(-1);\n        }\n    }\n    const handleLike = async () => {\n        try {\n            //setLoading(true);\n            let profileData = {\n                employee_id: empDetails.employee_id,\n                job_id: jobId,\n            }\n            const response = await likeEmployee(profileData);\n            if ('data' in response && response.data) {\n                if (response.data.is_match === 'Y') {\n                    setProfilePic(response.data.data.member_profile_picture);\n                    setIsInterview(false);\n                    setChatType('CRUZ');\n                    setPrivateChatMember(response.data.data);\n                    setIsChatVisible(true);\n                    if (profileData.employee_id && profileData.job_id) {\n                        setEmployeeDetails({\n                            employee_id: profileData.employee_id,\n                            job_id: profileData.job_id\n                        });\n                    }\n                    toggleModal2();\n                } else {\n                    if (modalCall === true) {\n                        toggleModal1();\n                    }\n                    setModalCall(false);\n                    if (page - 1 < empDetails.jobCount) {\n                        handleNext();\n                    } else {\n                        handleBack();\n                    }\n                }\n\n            }\n        } catch (error) {\n            console.error(\"Error fetching available jobs:\", error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    const handleDisLike = async () => {\n        try {\n            //setLoading(true);\n            let profileData = {\n                employee_id: empDetails.employee_id,\n                job_id: jobId,\n            }\n            const response = await unLikeEmployee(profileData);\n            if ('data' in response && response.data) {\n                handleNext();\n            }\n        } catch (error) {\n            console.error(\"Error fetching available jobs:\", error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    const handleSubmit = () => {\n        toggleModal1();\n    };\n    const handleChat = () => {\n        toggleModal2();\n        if (page - 1 < empDetails.jobCount) {\n            handleNext();\n        } else {\n            handleBack();\n        }\n    };\n    const handleSubmitNext = () => {\n        setIsChatVisible(false);\n        toggleModal2();\n        if (page - 1 < empDetails.jobCount) {\n            handleNext();\n        } else {\n            handleBack();\n        }\n    };\n    return (\n        <div className=\"viewProfile employer-profileparent Viewingjob-page EmployerViewsJobs-section\">\n            <CruzLayout link=\"Employee\">\n                {loading ? (\n                    <div className=\"page-loader\">\n                        <div className=\"page-innerLoader\">\n                            <div className=\"spinner-border\" role=\"status\">\n                                <img src={require(\"../../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"center-layout\">\n                        <EmployerProfile jobProfile={jobProfile} medias={medias} />\n                    </div>\n                )}\n                {!isMatch && (\n                    <div className=\"layout-action\">\n                        <div className=\"views\">\n                            <p>{pageDetails}</p>\n                        </div>\n                        <div className=\"action-options\">\n                            <a onClick={() => handleDisLike()}>\n                                <img\n                                    src={require(\"../../../../assets/images/cruz/close-icon.png\")}\n                                    alt=\"\"\n                                    className=\"img-fluid\"\n                                />\n                            </a>\n                            <a onClick={() => handleBack()}>\n                                <img\n                                    src={require(\"../../../../assets/images/cruz/direction.png\")}\n                                    alt=\"\"\n                                    className=\"img-fluid\"\n                                />\n                            </a>\n                            <a onClick={() => handleLike()}>\n                                <img\n                                    src={require(\"../../../../assets/images/cruz/Tick.png\")}\n                                    alt=\"\"\n                                    className=\"img-fluid\"\n                                />\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </CruzLayout >\n            <Modal\n                isOpen={modal1Open}\n                toggle={toggleModal1}\n                className=\"sidebar-modal\"\n                fade={false}\n                backdrop=\"static\"\n            >\n                <ModalBody>\n                    <div className=\"Employee-Profilemodal\">\n                        <div className=\"row\">\n                            <h2 className=\"customHeading\">What’s next?</h2>\n                            <div className=\"text-para\">\n                                <p>Your profile will show the employer you’re interested in this job.</p>\n                            </div>\n                            <div className=\"modal-actions\">\n                                <Button\n                                    onClick={() => handleSubmit()}\n                                    text=\"Continue Browsing Jobs\"\n                                    icon={true}\n                                    theme=\"light\"\n                                    className=\"w-100 btn-dark\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </ModalBody>\n            </Modal>\n            <Modal\n                isOpen={modal2Open}\n                toggle={toggleModal2}\n                className=\"sidebar-modal\"\n                fade={false}\n            >\n                <ModalBody>\n                    <div className=\"Employee-ProfilematchModal\">\n                        <div className=\"row\">\n                            <h2 className=\"customHeading\">IT’S A MATCH!</h2>\n                            <div className=\"text-para\">\n                                <p>You’re both interested in each other.</p>\n                            </div>\n                            <div className=\"imagegrid\">\n                                <div className=\"grid\">\n                                    {memberProfilePic ? (\n                                        <img\n                                            src={memberProfilePic}\n                                            alt=\"\"\n                                            className=\"img-fluid\"\n                                        />\n                                    ) : (\n                                        <img\n                                            src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                                            alt=\"Profile\"\n                                            className=\"img-fluid\"\n                                        />\n                                    )}\n\n\n                                </div>\n                                <div className=\"grid\">\n                                    {profilePic ? (\n                                        <img\n                                            src={baseUrl + profilePic}\n                                            alt=\"\"\n                                            className=\"img-fluid\"\n                                        />\n                                    ) : (\n                                        <img\n                                            src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                                            alt=\"Profile\"\n                                            className=\"img-fluid\"\n                                        />\n                                    )}\n\n                                </div>\n                            </div>\n                            <div className=\"chatOption-btn\">\n                                <Button\n                                    onClick={() => handleChat()}\n                                    text=\"Chat with the Employer\"\n                                    icon={true}\n                                    className=\"chat-optionbtn\"\n                                />\n                                <a onClick={() => handleSubmitNext()} className=\"chatlater\">\n                                    Continue & chat later\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { EmployeeProfile } from \"../../components/EmployeeProfile/EmployeeProfile\";\nimport { CruzLayout } from '../../../../components/Layout/CruzLayout';\nimport { useEmployeeProfileQuery } from '../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice';\n\ninterface Media {\n    id: number;\n    media_file: string;\n}\nexport const PreviewEmployee = () => {\n\n    const { data, error, isLoading, isSuccess } = useEmployeeProfileQuery({});\n    const employeeProfile = data?.data.employeeDetails;\n    const medias: Media[] = data?.data.mediaDetails || [];\n\n    return (\n        <div className=\"viewProfile employer-profileparent\">\n            <div className=\"center-layout\">\n                <div className=\"page-path\">\n                    <div className=\"parent-direction\">\n                        <label>Profile</label>\n                    </div>\n                    <span className=\"direction-arrow\">\n                        <FontAwesomeIcon icon={faAngleRight} />\n                    </span>\n                    <div className=\"child-direction\">\n                        <label>{employeeProfile?.employee_role} {employeeProfile?.employee_avilable} {employeeProfile?.employee_location}</label>\n                    </div>\n                </div>\n                <EmployeeProfile employeeProfile={employeeProfile} medias={medias} />\n            </div>\n        </div>\n    )\n}\nexport default PreviewEmployee;","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\"\nimport \"../../../../assets/scss/cruz.scss\";\nimport { useEmployeeLikedJobQuery, useUnlikeEmployeeMutation } from \"../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport { useEffect, useState } from \"react\";\nimport { getUserData } from \"../../../../utils/Utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\nimport { LikeCard } from \"../../components/LikeCard/LikeCard\";\n\ninterface RawData {\n    date: string;\n    id: number;\n    job_images: string;\n    job_location: string;\n    job_role: string;\n    member_id: number;\n    member_name: string;\n}\ninterface Matches {\n    id: number;\n    employee_role: string;\n    member_name: string;\n    members_profile_picture: string;\n    date: string;\n    member_id: number;\n}\n\nexport const EmployeeLikedJobs = () => {\n\n    const { data, error, isLoading, isSuccess, refetch } = useEmployeeLikedJobQuery({});\n    const rawData: RawData[] = data?.data;\n    const matches: Matches[] = rawData?.map(item => ({\n        id: item.id,\n        employee_role: item.job_role,\n        member_name: item.member_name,\n        members_profile_picture: item.job_images,\n        date: item.date,\n        member_id: item.member_id,\n    }));\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    const [loading, setLoading] = useState(false);\n    const userData = getUserData('userData');\n    let memberName = '';\n    if (userData) {\n        memberName = userData.Member_fullname;\n    }\n    const navigate = useNavigate();\n    useEffect(() => {\n        refetch();\n    }, []);\n\n    const [unLikeEmployee] = useUnlikeEmployeeMutation();\n    const [employeeId, setEmployeeId] = useState<string | undefined>('');\n    useEffect(() => {\n        if (userData) {\n            setEmployeeId(userData.employeeId);\n        }\n    }, [userData]);\n    const handleDisLike = async (jobId: number) => {\n        try {\n            setLoading(true);\n            let profileData = {\n                employee_id: employeeId,\n                job_id: jobId,\n            }\n            const response = await unLikeEmployee(profileData);\n            if ('data' in response && response.data) {\n                refetch();\n            }\n        } catch (error) {\n            console.error(\"Error fetching available jobs:\", error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div>\n            <CruzLayout link=\"Employee\">\n                {loading ? (\n                    <div className=\"page-loader\">\n                        <div className=\"page-innerLoader\">\n                            <div className=\"spinner-border\" role=\"status\">\n                                <img src={require(\"../../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"myMatches\">\n                        <Breadcrumbs mainbreadcrumb=\"Dashboard\" secondbreadcrumb={memberName} redirectUrl=\"/cruz/employeedashboard\" />\n\n                        <div className=\"innerHeading\">\n                            <h2 className=\"customHeading\">\n                                Liked Jobs\n                            </h2>\n                        </div>\n                        <LikeCard type={\"employee\"} getId={employeeId} matches={matches} handleLike={handleDisLike} from=\"Liked\" />\n                    </div >\n                )}\n            </CruzLayout >\n        </div >\n    )\n}\nexport default EmployeeLikedJobs;","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { useMyLikedListQuery } from \"../../Api/CampaignApiSlice\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\nimport { useUnLikeCampaignMutation } from \"../../components/EmployerProfile/EmployerProfileApiSlice\";\nimport { LikeCard } from \"../../components/LikeCard/LikeCard\";\ninterface Matches {\n    id: number;\n    employee_role: string;\n    member_name: string;\n    members_profile_picture: string;\n    date: string;\n}\n\nexport const MyLikedProfile = () => {\n    const location = useLocation();\n    const { id, job_role } = location.state || {};\n    const { data, error, isLoading, isSuccess, refetch } = useMyLikedListQuery({ id });\n    const matches: Matches[] = data?.data;\n    const [loading, setLoading] = useState(false);\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    useEffect(() => {\n        refetch();\n    }, []);\n    const navigate = useNavigate();\n\n    const [unLikeCampaign] = useUnLikeCampaignMutation();\n\n    const handleDisLike = async (employeeId: number) => {\n        try {\n            setLoading(true);\n            let profileData = {\n                job_id: id,\n                employee_id: employeeId,\n            }\n            const response = await unLikeCampaign(profileData);\n            if ('data' in response && response.data) {\n                refetch();\n            }\n        } catch (error) {\n            console.error(\"Error fetching available jobs:\", error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <CruzLayout link=\"Employer\">\n            {loading ? (\n                <div className=\"page-loader\">\n                    <div className=\"page-innerLoader\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <img src={require(\"../../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"myMatches\">\n                    <Breadcrumbs\n                        mainbreadcrumb=\"Live Campaign\"\n                        secondbreadcrumb={job_role}\n                        redirectUrl=\"/cruz/viewcampaign/livecampaign\"\n                        thirdbreadcrumb=\"My Liked\"\n                    />\n\n                    <div className=\"innerHeading\">\n                        <h2 className=\"customHeading\">\n                            Profiles I liked for\n                            <br></br>\n                            <span>{job_role}</span>\n                        </h2>\n                    </div>\n                    <LikeCard matches={matches} getId={id} type={\"employer\"} handleLike={handleDisLike} from=\"Liked\" />\n                </div>\n            )}\n        </CruzLayout>\n    );\n};\nexport default MyLikedProfile;\n","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\"\nimport \"../../../../assets/scss/cruz.scss\";\nimport { useEmployeeDisLikedJobQuery, useLikeEmployeeMutation } from \"../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport { useEffect, useState } from \"react\";\nimport { getUserData } from \"../../../../utils/Utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\nimport { EmployeeInterface, MemberInterface } from \"../../../../types/PrivateChatInterfaces\";\nimport { useSocket } from \"../../../../contexts/SocketContext\";\nimport { LikeCard } from \"../../components/LikeCard/LikeCard\";\n\ninterface RawData {\n    date: string;\n    id: number;\n    job_images: string;\n    job_location: string;\n    job_role: string;\n    member_id: number;\n    member_name: string;\n}\ninterface Matches {\n    id: number;\n    employee_role: string;\n    member_name: string;\n    members_profile_picture: string;\n    date: string;\n    member_id: number;\n}\n\nexport const EmployeeDisLikedJobs = () => {\n\n    const { data, error, isLoading, isSuccess, refetch } = useEmployeeDisLikedJobQuery({});\n    const rawData: RawData[] = data?.data;\n    const matches: Matches[] = rawData?.map(item => ({\n        id: item.id,\n        employee_role: item.job_role,\n        member_name: item.member_name,\n        members_profile_picture: item.job_images,\n        date: item.date,\n        member_id: item.member_id,\n    }));\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    const userData = getUserData('userData');\n    let memberName = '';\n    const [employeeId, setEmployeeId] = useState<string | undefined>('');\n    if (userData) {\n        memberName = userData.Member_fullname;\n    }\n    useEffect(() => {\n        if (userData) {\n            setEmployeeId(userData.employeeId);\n        }\n    }, [userData]);\n    const navigate = useNavigate();\n    useEffect(() => {\n        refetch();\n    }, []);\n\n    const [likeEmployee] = useLikeEmployeeMutation();\n    const [profilePic, setProfilePic] = useState();\n    const { setPrivateChatMember, setIsChatVisible, setChatType } = useSocket();\n    const [chatEmpDetails, setChatEmpDetails] = useState<EmployeeInterface>();\n    const [loading, setLoading] = useState(false);\n    const handleLike = async (jobId: number) => {\n        try {\n            setLoading(true);\n            let profileData = {\n                employee_id: employeeId,\n                job_id: jobId,\n            }\n            const response = await likeEmployee(profileData);\n            if ('data' in response && response.data) {\n                refetch();\n                if (response.data.is_match === 'Y') {\n\n                    setProfilePic(response.data.data.member_profile_picture);\n                    setChatType('CRUZ');\n                    setPrivateChatMember(response.data.data);\n                    setIsChatVisible(true);\n                    if (profileData.employee_id && profileData.job_id) {\n                        setChatEmpDetails({\n                            employee_id: profileData.employee_id,\n                            job_id: profileData.job_id\n                        });\n                    }\n\n                }\n\n            }\n        } catch (error) {\n            console.error(\"Error fetching available jobs:\", error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div>\n            <CruzLayout link=\"Employee\">\n                {loading ? (\n                    <div className=\"page-loader\">\n                        <div className=\"page-innerLoader\">\n                            <div className=\"spinner-border\" role=\"status\">\n                                <img src={require(\"../../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"myMatches\">\n                        <Breadcrumbs mainbreadcrumb=\"Dashboard\" secondbreadcrumb={memberName} redirectUrl=\"/cruz/employeedashboard\" />\n\n                        <div className=\"innerHeading\">\n                            <h2 className=\"customHeading\">\n                                Disliked Jobs\n                            </h2>\n                        </div>\n                        <LikeCard type={\"employee\"} getId={employeeId} matches={matches} handleLike={handleLike} from=\"DisLiked\" />\n                    </div >\n                )}\n            </CruzLayout >\n        </div >\n    )\n}\nexport default EmployeeDisLikedJobs;","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { useMyUnLikedListQuery } from \"../../Api/CampaignApiSlice\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\nimport { useLikeCampaignMutation } from \"../../components/EmployerProfile/EmployerProfileApiSlice\";\nimport { MemberInterface } from \"../../../../types/PrivateChatInterfaces\";\nimport { LikeCard } from \"../../components/LikeCard/LikeCard\";\nimport { useSocket } from \"../../../../contexts/SocketContext\";\n\ninterface Matches {\n    id: number;\n    employee_role: string;\n    member_name: string;\n    members_profile_picture: string;\n    date: string;\n}\n\nexport const MyDislikedProfile = () => {\n\n    const location = useLocation();\n    const { id, job_role } = location.state || {};\n    const { data, error, isLoading, isSuccess, refetch } = useMyUnLikedListQuery({ id });\n    const matches: Matches[] = data?.data;\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    useEffect(() => {\n        refetch();\n    }, []);\n    const navigate = useNavigate();\n    const [likeCampaign] = useLikeCampaignMutation();\n    const [empProfilePic, setEmpProfilePic] = useState();\n    const { setPrivateChatMember, setIsChatVisible, setChatType } = useSocket();\n    const [loading, setLoading] = useState(false);\n    const handleLike = async (employeeId: number) => {\n        try {\n            setLoading(true);\n            let profileData = {\n                job_id: id,\n                employee_id: employeeId,\n            }\n            const response = await likeCampaign(profileData);\n            if ('data' in response && response.data) {\n                refetch();\n                if (response.data.is_match === 'Y') {\n                    setEmpProfilePic(response.data.data.member_profile_picture);\n                    setChatType('CRUZ');\n                    setPrivateChatMember(response.data.data);\n                    setIsChatVisible(true);\n                }\n\n            }\n        } catch (error) {\n            console.error(\"Error fetching available jobs:\", error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <CruzLayout link=\"Employer\">\n            {loading ? (\n                <div className=\"page-loader\">\n                    <div className=\"page-innerLoader\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <img src={require(\"../../../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"myMatches\">\n                    <Breadcrumbs\n                        mainbreadcrumb=\"Live Campaign\"\n                        secondbreadcrumb={job_role}\n                        redirectUrl=\"/cruz/viewcampaign/livecampaign\"\n                        thirdbreadcrumb=\"My Disliked\"\n                    />\n                    <div className=\"innerHeading\">\n                        <h2 className=\"customHeading\">\n                            Profiles I Disliked for\n                            <br></br>\n                            <span>{job_role}</span>\n                        </h2>\n                    </div>\n                    <LikeCard matches={matches} getId={id} type={\"employer\"} handleLike={handleLike} from=\"DisLiked\" />\n                </div>\n            )}\n        </CruzLayout>\n    );\n};\nexport default MyDislikedProfile;\n","import { CruzLayout } from \"../../../../components/Layout/CruzLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../../../assets/scss/cruz.scss\";\nimport { useMyLikedListQuery } from \"../../Api/CampaignApiSlice\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Breadcrumbs } from \"../../components/Breadcrumbs/Breadcrumbs\";\nimport { Button } from \"../../../../components/Button/Button\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { Nav, NavItem, NavLink, TabContent, TabPane, Row, Col, Card, CardTitle, CardText } from 'reactstrap';\nimport './Notification.scss';\nimport classnames from 'classnames';\nimport { useMyInterviewListQuery, useJobInterviewListQuery, useAcceptInterviewMutation } from \"../../Api/InterviewApiSlice\";\nimport { useSocket } from \"../../../../contexts/SocketContext\";\nimport moment from \"moment\";\nimport { BookModal } from \"../../../Profile/Components/BookModal\";\nimport Swal from \"sweetalert2\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { EmployerProfile } from \"../../components/EmployerProfile/EmployerProfile\";\nimport { EmployeeProfile } from \"../../components/EmployeeProfile/EmployeeProfile\";\nimport { useAvailableJobsListMutation } from \"../../components/ReviewEmployeeProfile/EmployeeProfileApiSlice\";\nimport { useCampaignMatchesListMutation } from \"../../components/EmployerProfile/EmployerProfileApiSlice\";\nimport { MemberInterface } from \"../../../../types/PrivateChatInterfaces\";\n\ninterface notification {\n    id: number;\n    member_id: number;\n    interview_date: Date;\n    interview_status: string;\n    interview_time: string;\n    job_role: string;\n    job_summary: string;\n    location: string;\n    day: string;\n    month: string;\n    time: string;\n    full_name: string;\n    members_profile_picture: string;\n    meeting_id: string;\n    employee_id: number;\n    job_id: number;\n}\ninterface Media {\n    id: number;\n    media_file: string;\n}\nexport const Notification = () => {\n    const location = useLocation();\n    const [activeTab, setActiveTab] = useState('1');\n    const { socket, cruzPendingMsgCount, setCruzPendingMsgCount, setPrivateChatMember, setIsInterview, setChatType, setIsChatVisible } = useSocket();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [memberId, setMemberId] = useState('0');\n    const [interviewId, setInterviewId] = useState('0');\n    const [memberFname, setMemberFName] = useState('');\n    const [memberLname, setMemberLName] = useState('');\n    const [memberDp, setMemberDp] = useState('');\n    const [timeSlot, setTimeSlot] = useState<'1 hour' | '30 min'>('1 hour');\n    const [interviewStatus, setInterviewStatus] = useState<string>('P');\n    const baseUrl = process.env.REACT_APP_STORAGE_URL;\n    const navigate = useNavigate();\n    const [jobProfile, setJobProfile] = useState(null);\n    const [medias, setMedias] = useState<Media[]>([]);\n    const [type, setType] = useState<string>('');\n    const [totalCount, setTotalCount] = useState<number>(0);\n\n    const toggle = (tab: string) => {\n        if (activeTab !== tab) setActiveTab(tab);\n        myInterviewRefetch();\n        jobInterviewRefetch();\n    };\n\n    const handleRearrange = (id: number, member_id: number, memberName: string, memberDp: string, status: string) => {\n        setMemberId(String(member_id));\n        setInterviewId(String(id));\n        setMemberFName(memberName);\n        setMemberDp(baseUrl + memberDp);\n        setInterviewStatus(status);\n        setIsModalOpen(true);\n    }\n\n    const [newProfileInterview, setnewProfileInterview] = useState<notification[]>([]);\n    const { data: profileInterview, error, isSuccess, isLoading, refetch: myInterviewRefetch } = useMyInterviewListQuery({});\n    const interviewDetails = profileInterview?.data || [];\n\n    const { data: jobInterview, error: jobError, isSuccess: jobSuccess, isLoading: jobLoading, refetch: jobInterviewRefetch } = useJobInterviewListQuery({});\n    const jobDetails = jobInterview?.data || [];\n\n    const [cruzMemberList, setCruzMemberList] = useState<MemberInterface[]>([]);\n\n    useEffect(() => {\n        if (interviewDetails.length || jobDetails.length) {\n            setTotalCount(interviewDetails.length + jobDetails.length);\n        }\n    }, [interviewDetails, jobDetails]);\n\n    useEffect(() => {\n        socket?.emit('cruzChatList');\n        socket?.emit('unreadCruzMessageCount');\n    }, [activeTab]);\n\n    const [acceptInterview] = useAcceptInterviewMutation();\n    const handleAccept = async (id: number, status: string, from: string) => {\n        const params = {\n            interview_id: id,\n            status: status,\n            is_cancel: from,\n        };\n        const response = await acceptInterview(params);\n\n        if (\"error\" in response) {\n            console.error(JSON.stringify(response.error));\n        }\n        myInterviewRefetch();\n        jobInterviewRefetch();\n    }\n\n    const handleCancel = async (id: number, status: string, from: string) => {\n\n        Swal.fire({\n            title: 'Cancel Interview?',\n            text: 'The interview will be cancelled.',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, cancel it!',\n            cancelButtonText: 'Cancel',\n            backdrop: `\n          rgba(255, 255, 255, 0.5)\n          left top\n          no-repeat\n          filter: blur(5px);\n        `,\n            background: '#fff',\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                try {\n                    const params = {\n                        interview_id: id,\n                        status: status,\n                        is_cancel: from,\n                    };\n                    const response = await acceptInterview(params);\n\n                    if (\"error\" in response) {\n                        console.error(JSON.stringify(response.error));\n                    }\n\n                    if (\"error\" in response) {\n                        console.error(\"Error logging in:\", response.error);\n                    } else {\n                        Swal.fire({\n                            title: \"Cancel!\",\n                            text: \"The interview cancelled successfully\",\n                            icon: \"success\",\n                            timer: 3000,\n                            showConfirmButton: false,\n                            backdrop: `\n                    rgba(255, 255, 255, 0.5)\n                    left top\n                    no-repeat\n                    filter: blur(5px);\n                  `,\n                            background: '#fff',\n                        });\n                        myInterviewRefetch();\n                        jobInterviewRefetch();\n                    }\n                } catch (error) {\n                    console.error(\"Error archiving campaign:\", error);\n                }\n            }\n        });\n    }\n\n    const handleJoin = (details: any) => {\n        const postParams = {\n            meeting_id: details.meeting_id ?? 'demo',\n            subject: 'Reach Interview',\n            type: 'interview'\n        };\n\n        const queryString = new URLSearchParams(postParams).toString();\n        window.open(`/video-call?${queryString}`, '_blank');\n    }\n\n    const defaultLocale = 'en-US';\n    const formatDate = (dateObject: Date | string, days: string): string => {\n        const options: Intl.DateTimeFormatOptions = {\n            day: '2-digit',\n            month: 'short',\n            year: 'numeric',\n        };\n\n        const date = new Date(dateObject); // Convert to Date object\n\n        if (days === \"days\") {\n            return date.toLocaleDateString(defaultLocale, { day: options.day });\n        } else {\n            return date.toLocaleDateString(defaultLocale, { month: options.month });\n        }\n    };\n\n    const formatTime = (timeString: string) => {\n        const date = new Date(`1970-01-01T${timeString}`);\n        const formattedTime = date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false });\n\n        return formattedTime;\n    };\n\n    const formatLastSeen = (dateString: string) => {\n        const date = new Date(dateString);\n\n        const options: Intl.DateTimeFormatOptions = {\n            year: 'numeric',   // Use 'numeric' for 4-digit year\n            month: 'long',     // Full month name\n            day: '2-digit',    // Two-digit day\n            hour: 'numeric',   // Numeric hour (12-hour format if hour12 is true)\n            minute: 'numeric', // Numeric minute\n            hour12: true       // Use 12-hour format\n        };\n\n        return date.toLocaleString(defaultLocale, options);\n    };\n\n    function convertToUKTime(date: Date): Date {\n        return new Date(date.toLocaleString('en-US', { timeZone: 'Europe/London' }));\n    }\n\n    const handleCloseModal = () => {\n        setIsModalOpen(false);\n        myInterviewRefetch();\n        jobInterviewRefetch();\n\n    };\n    function changeTimeSlot(value: any): void {\n        throw new Error(\"Function not implemented.\");\n    }\n\n    const [availableJobs] = useAvailableJobsListMutation();\n    const [availableProfile] = useCampaignMatchesListMutation();\n    const [loading, setLoading] = useState(false);\n    const [modal, setModal] = useState(false);\n    const Loading = () => {\n        const timer = setTimeout(() => {\n            setLoading(false);\n        }, 300);\n        return () => clearTimeout(timer);\n    }\n    const toggleModal = () => {\n        setModal(!modal);\n    };\n\n    const handleShow = async (id: number, employee_id: number, type: string) => {\n        setType(type);\n        if (type === 'employee') {\n            let jobData = {\n                employee_id: employee_id,\n                job_ids: [id],\n                page: 1,\n            };\n            setLoading(true);\n            try {\n                const response = await availableJobs(jobData);\n                if ('data' in response && response.data) {\n                    setJobProfile(response.data.data[0]);\n                    setMedias(response.data.data[0].job_images);\n                }\n            } catch (error) {\n                console.error(\"Error fetching available jobs:\", error);\n            } finally {\n                Loading();\n            }\n            toggleModal();\n        } else {\n            let jobData = {\n                job_id: id,\n                employee_ids: [employee_id],\n                page: 1,\n            };\n            setLoading(true);\n            try {\n                const response = await availableProfile(jobData);\n                if ('data' in response && response.data) {\n                    setJobProfile(response.data.data[0]);\n                    setMedias(response.data.data[0].employee_images);\n                }\n            } catch (error) {\n                console.error(\"Error fetching available jobs:\", error);\n            } finally {\n                Loading();\n            }\n            toggleModal();\n        }\n    }\n\n    useEffect(() => {\n        myInterviewRefetch();\n        jobInterviewRefetch();\n    }, [])\n\n    useEffect(() => {\n        if (!socket?.connected) return;\n\n        socket.emit('cruzChatList');\n        socket.emit('unreadCruzMessageCount');\n\n        socket.on('cruzChatList', (members: MemberInterface[]) => {\n            setCruzMemberList(members);\n        });\n\n        // socket.on('unreadCruzMessageCount', (count: number) => {\n        //     setCruzPendingMsgCount(count);\n        // });\n\n        return () => {\n            socket.off('cruzChatList');\n            // socket.off('unreadCruzMessageCount');\n        };\n    }, [socket]);\n\n    const openChat = (member: MemberInterface) => {\n        setPrivateChatMember(member);\n        setIsInterview(false);\n        setChatType('CRUZ');\n        setIsChatVisible(true);\n    };\n\n    return (\n        <div className=\"notificaton\">\n            <CruzLayout link=\"Employer\">\n                <div className=\"Notification-parent\">\n                    <Breadcrumbs\n                        mainbreadcrumb=\"INTERVIEWS/MESSAGES\"\n                        secondbreadcrumb={location.state}\n                        redirectUrl=\"/cruz/notification\"\n                    />\n                    <div className=\"nav-tabscontent w-100\">\n                        {/* <div className=\"Notification-heading\">\n                            <h2 className=\"customHeading\">Notifications</h2>\n                        </div> */}\n                        <Nav tabs>\n                            <NavItem>\n                                <NavLink\n                                    className={classnames({ active: activeTab === '1' })}\n                                    onClick={() => { toggle('1'); }}\n                                >\n                                    Interviews\n                                    <span className=\"count\">{totalCount}</span>\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    className={classnames({ active: activeTab === '2' })}\n                                    onClick={() => { toggle('2'); }}\n                                >\n                                    Messages\n                                    {cruzPendingMsgCount > 0 && <span className=\"count\">{cruzPendingMsgCount}</span>}\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent activeTab={activeTab}>\n                            <TabPane tabId=\"1\">\n                                <Row>\n                                    <Col sm=\"12\">\n                                        <div className=\"notification-page\">\n                                            <div className=\"notification-second\">\n                                                {\n                                                    interviewDetails && interviewDetails.length > 0 && (\n                                                        <div className=\"Notification-heading\">\n                                                            <h2 className=\"customHeading mb-0\">My Interview List</h2>\n                                                        </div>\n                                                    )}\n                                                {\n                                                    interviewDetails && Array.isArray(interviewDetails) && interviewDetails.map((details: notification) => {\n                                                        const interviewDate = moment(new Date(`${details.interview_date}T${details.interview_time}`));\n                                                        const nowTime = convertToUKTime(new Date());\n                                                        const minuteDifference = interviewDate.diff(nowTime, 'minute');\n                                                        let disabled = true;\n                                                        let btnTheme: 'grey' | 'light' | 'dark' | undefined = 'grey';\n                                                        let showRearrange = '';\n                                                        if (minuteDifference < 5 && minuteDifference > -60) {\n                                                            disabled = false;\n                                                            btnTheme = 'light';\n                                                            showRearrange = 'd-none';\n                                                        }\n                                                        return (\n                                                            <div className=\"booking-tabledata\">\n                                                                <div className=\"d-block\">\n                                                                    <div className=\"tabledata\">\n                                                                        <div className=\"dateSection-card\">\n                                                                            <div className=\"date-section\">\n                                                                                <h2 className=\"customHeading\">{formatDate(details.interview_date, \"days\")}</h2>\n                                                                                <div className=\"month\"><span>{formatDate(details.interview_date, \"month\")}</span></div>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className=\"details\">\n                                                                            <div className=\"details-content\">\n                                                                                <div className=\"profiledetails\">\n\n                                                                                    <a style={{ cursor: \"pointer\" }} onClick={() => handleShow(details.job_id, details.employee_id, 'employee')} >\n                                                                                        <div className=\"profile-section\">\n                                                                                            <div className=\"image-section\">\n                                                                                                {details.members_profile_picture ? (\n                                                                                                    <img\n                                                                                                        style={{ borderRadius: \"50%\" }}\n                                                                                                        src={baseUrl + details.members_profile_picture}\n                                                                                                        className=\"img-fluid applicant-one\"\n                                                                                                        alt=\"\"\n                                                                                                    />\n                                                                                                ) : (\n                                                                                                    <img\n                                                                                                        style={{ borderRadius: \"50%\" }}\n                                                                                                        src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                                                                                                        className=\"img-fluid applicant-one\"\n                                                                                                        alt=\"\"\n                                                                                                    />\n                                                                                                )}\n                                                                                            </div>\n                                                                                            <div className=\"profile-details\">\n                                                                                                <h2 className=\"customHeading\">{details.job_role}</h2>\n                                                                                                <p>{details.full_name}</p>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </a>\n                                                                                </div>\n                                                                                <div className=\"timesprice-details\">\n                                                                                    <div className=\"times\">\n                                                                                        <div className=\"time-details\"><span className=\"time\">{formatTime(details.interview_time)}</span><span className=\"location\">London (GMT)</span></div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n\n                                                                </div>\n                                                                <div className=\"action-field\">\n                                                                    <div className=\"action\">\n                                                                        <div className=\"grp-btn \">\n\n\n\n                                                                            {details.interview_status != 'H' && details.interview_status != 'C' && (\n                                                                                <div className=\"Rearrange\">\n                                                                                    <Button\n                                                                                        onClick={(event) => handleRearrange(details.id, details.member_id, details.full_name, details.members_profile_picture, 'R')}\n                                                                                        text=\"Rearrange\"\n                                                                                        icon={false}\n                                                                                        theme=\"light\"\n                                                                                        className={`btn-Rearrange ${showRearrange}`}\n                                                                                    />\n                                                                                    <Button\n                                                                                        onClick={(event) => handleCancel(details.id, 'C', 'employee')}\n                                                                                        text=\"Cancel\"\n                                                                                        icon={false}\n                                                                                        theme=\"light\"\n                                                                                        className=\"btn-Rearrange\"\n                                                                                    />\n                                                                                </div>\n                                                                            )}\n\n                                                                        </div>\n                                                                        <div className=\"joinAll \">\n                                                                            {details.interview_status === 'P' && (\n                                                                                <Button\n                                                                                    onClick={(event) => handleAccept(details.id, 'A', 'employee')}\n                                                                                    text=\"Accept\"\n                                                                                    icon={true}\n                                                                                    theme=\"light\"\n                                                                                    className=\"w-100\"\n                                                                                />\n                                                                            )}\n\n                                                                            {details.interview_status === 'A' && (\n                                                                                <Button\n                                                                                    onClick={(event) => handleJoin(details)}\n                                                                                    text=\"Join\"\n                                                                                    icon={true}\n                                                                                    theme={btnTheme}\n                                                                                    className=\"w-100\"\n                                                                                    disabled={disabled}\n                                                                                />\n                                                                            )}\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                            <div className=\"notification-second pt-4\">\n                                                {\n                                                    jobDetails && jobDetails.length > 0 && (\n                                                        <div className=\"Notification-heading\">\n                                                            <h2 className=\"customHeading mb-0\">Job Interview List</h2>\n                                                        </div>\n                                                    )}\n                                                {\n                                                    jobDetails && Array.isArray(jobDetails) && jobDetails.map((details: notification) => {\n                                                        const interviewDate = moment(new Date(`${details.interview_date}T${details.interview_time}`));\n                                                        const nowTime = convertToUKTime(new Date());\n                                                        const minuteDifference = interviewDate.diff(nowTime, 'minute');\n                                                        let disabled = true;\n                                                        let btnTheme: 'grey' | 'light' | 'dark' | undefined = 'grey';\n                                                        if (minuteDifference < 5 && minuteDifference > -60) {\n                                                            disabled = false;\n                                                            btnTheme = 'light';\n                                                        }\n                                                        return (\n                                                            <div className=\"booking-tabledata\">\n                                                                <div className=\"d-block\">\n                                                                    <div className=\"tabledata\">\n                                                                        <div className=\"dateSection-card\">\n                                                                            <div className=\"date-section\">\n                                                                                <h2 className=\"customHeading\">{formatDate(details.interview_date, \"days\")}</h2>\n                                                                                <div className=\"month\"><span>{formatDate(details.interview_date, \"month\")}</span></div>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className=\"details\">\n                                                                            <div className=\"details-content\">\n                                                                                <div className=\"profiledetails\">\n                                                                                    <a style={{ cursor: \"pointer\" }} onClick={() => handleShow(details.job_id, details.employee_id, 'employer')} >\n                                                                                        <div className=\"profile-section\">\n                                                                                            <div className=\"image-section\">\n                                                                                                {details.members_profile_picture ? (\n                                                                                                    <img\n                                                                                                        style={{ borderRadius: \"50%\" }}\n                                                                                                        src={baseUrl + details.members_profile_picture}\n                                                                                                        className=\"img-fluid applicant-one\"\n                                                                                                        alt=\"\"\n                                                                                                    />\n                                                                                                ) : (\n                                                                                                    <img\n                                                                                                        style={{ borderRadius: \"50%\" }}\n                                                                                                        src={require(\"../../../../assets/images/profile/Default.jpg\")}\n                                                                                                        className=\"img-fluid applicant-one\"\n                                                                                                        alt=\"\"\n                                                                                                    />\n                                                                                                )}\n                                                                                            </div>\n                                                                                            <div className=\"profile-details\">\n                                                                                                <h2 className=\"customHeading\">{details.full_name}</h2>\n                                                                                                <p>{details.job_role}</p>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </a>\n                                                                                </div>\n                                                                                <div className=\"timesprice-details\">\n                                                                                    <div className=\"times\">\n                                                                                        <div className=\"time-details\"><span className=\"time\">{formatTime(details.interview_time)}</span><span className=\"location\">London (GMT)</span></div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n\n                                                                </div>\n                                                                <div className=\"action-field\">\n                                                                    <div className=\"action\">\n                                                                        <div className=\"grp-btn \">\n\n\n\n                                                                            {details.interview_status != 'H' && details.interview_status != 'C' && (\n                                                                                <div className=\"Rearrange\">\n                                                                                    <Button\n                                                                                        onClick={(event) => handleRearrange(details.id, details.member_id, details.full_name, details.members_profile_picture, 'P')}\n                                                                                        text=\"Rearrange\"\n                                                                                        icon={false}\n                                                                                        theme=\"light\"\n                                                                                        className=\"btn-Rearrange\"\n                                                                                    />\n                                                                                    <Button\n                                                                                        onClick={(event) => handleCancel(details.id, 'C', 'job')}\n                                                                                        text=\"Cancel\"\n                                                                                        icon={false}\n                                                                                        theme=\"light\"\n                                                                                        className=\"btn-Rearrange\"\n                                                                                    />\n                                                                                </div>\n                                                                            )}\n\n                                                                        </div>\n                                                                        <div className=\"joinAll \">\n                                                                            {details.interview_status === 'R' && (\n                                                                                <Button\n                                                                                    onClick={(event) => handleAccept(details.id, 'A', 'job')}\n                                                                                    text=\"Accept\"\n                                                                                    icon={true}\n                                                                                    theme=\"light\"\n                                                                                    className=\"w-100\"\n                                                                                />\n                                                                            )}\n\n                                                                            {details.interview_status === 'A' && (\n                                                                                <Button\n                                                                                    onClick={(event) => handleJoin(details)}\n                                                                                    text=\"Join\"\n                                                                                    icon={true}\n                                                                                    theme={btnTheme}\n                                                                                    className=\"w-100\"\n                                                                                    disabled={disabled}\n                                                                                />\n                                                                            )}\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n\n                                    </Col>\n                                </Row>\n                            </TabPane>\n                            <TabPane tabId=\"2\">\n                                <Row>\n                                    <Col sm=\"12\">\n                                        <div className=\"notification-page\">\n                                            {\n                                                cruzMemberList.map(member => {\n                                                    return (<div className=\"booking-tabledata\" key={member.member_id}>\n                                                        <div className=\"msg-block\">\n                                                            <div className=\"firstblock\">\n                                                                <div className=\"profile-block\">\n                                                                    <div className=\"profile-details\">\n                                                                        <img src={member.member_profile_picture ? baseUrl + member.member_profile_picture : require(\"../../../../assets/images/profile/Default.jpg\")} />\n                                                                        <div className={member.active ? \"active-status\" : \"non-active\"}>\n                                                                            <span><FontAwesomeIcon icon={faCircle} /></span>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"profile-msgdetails\">\n                                                                        <div className=\"names\">\n                                                                            <label className=\"username\">{`${member.member_fname} ${member.member_lname}`}</label>\n                                                                            {/* <span className=\"position\">cheif engineer</span> */}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"active-time\">\n                                                                    <span className=\"d-block\">Last Message</span>\n                                                                    {member.last_message_time && <span className=\"d-block\">{formatLastSeen(member.last_message_time)}</span>}\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"right-block\">\n                                                                <span className=\"d-block dates-mob d-md-none\">{member.last_message_time ? formatLastSeen(member.last_message_time) : ''}</span>\n                                                                <div className=\"arrow-action\">\n                                                                    <div className=\"unreadmsgs\">\n                                                                        {member.pending_message_count > 0 && <span className=\"unread\">{member.pending_message_count}</span>}\n                                                                    </div>\n                                                                    <button className=\"link-action btn-linkemail\" style={{ cursor: \"pointer\" }} onClick={() => openChat(member)}><FontAwesomeIcon icon={faAngleRight} /></button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>);\n                                                })\n                                            }\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </TabPane>\n                        </TabContent>\n\n                    </div>\n                </div>\n            </CruzLayout >\n            {isModalOpen && (\n                <BookModal isOpen={isModalOpen} toggleClose={handleCloseModal} userId={memberId} specialistName={memberFname} specialistLastName={memberLname} timeSlot={timeSlot} specialistDp={memberDp} changeTimeSlot={changeTimeSlot} reason={''} bookingId={interviewId} from={'interview'} interviewStatus={interviewStatus} />\n            )}\n\n            <Modal\n                isOpen={modal}\n                toggle={toggleModal}\n                centered\n                className=\"Preview-mode-modal\"\n            >\n                <ModalBody>\n                    <ModalHeader toggle={toggleModal}>\n                    </ModalHeader>\n                    <div className=\"action-modal\">\n                        {type === 'employee' ? (\n                            <EmployerProfile jobProfile={jobProfile} medias={medias} />\n                        ) : (\n                            <EmployeeProfile employeeProfile={jobProfile} medias={medias} />\n                        )}\n\n                    </div>\n                </ModalBody>\n            </Modal>\n        </div >\n    )\n}\nexport default Notification;","import { Navigate, Route, Routes } from \"react-router-dom\";\nimport { ViewCampaign } from \"../pages/Employer/ViewCampaign\";\nimport ViewProfile from \"../pages/Employer/ViewProfile\";\nimport Register from \"../pages/Employer/Register\";\nimport PostJob from \"../pages/Employer/PostJob\";\nimport MyMatches from \"../pages/Employer/MyMatches\";\nimport ReviewEmployerPost from \"../pages/Employer/ReviewEmployerPost\";\nimport ProfileSetup from \"../pages/Employee/ProfilesetUp\";\nimport Cruz from \"../../../pages/Cruz/Cruz\";\nimport Dashboard from \"../pages/Employee/Dashboard\";\nimport EmployeeMyMatches from \"../pages/Employee/EmployeeMyMaches\";\nimport ReviewEmployeeProfile from \"../pages/Employee/ReviewEmployeeProfile\";\nimport ReviewEmployerProfile from \"../pages/Employer/ReviewEmployerProfile\";\nimport EmployeeJobs from \"../pages/Employee/Job\";\nimport EmployeeMatchProfile from \"../pages/Employee/EmployeeMatchProfile\";\nimport Job from \"../pages/Employer/Job\";\nimport JobPostStatus from \"../pages/Employer/JobPostStatus\";\nimport EmployeeJobpostStatus from \"../pages/Employee/EmployeeJobpostStatus\";\nimport SetStatus from \"../pages/Employee/SetStatus\";\nimport ViewJob from \"../pages/Employer/ViewJob\";\nimport CreateProfile from \"../pages/Employee/CreateProfile\";\nimport { EmployerViewsJobs } from \"../pages/Employee/EmployerViewsJobs\";\nimport PreviewEmployee from \"../pages/Employer/PreviewEmployee\";\nimport EmployeeLikedJobs from \"../pages/Employee/EmployeeLikedJobs\";\nimport MyLikedProfile from \"../pages/Employer/MyLikedProfile\";\nimport EmployeeDisLikedJobs from \"../pages/Employee/EmployeeDisLikedJobs\";\nimport MyDislikedProfile from \"../pages/Employer/MyDislikedProfile\";\nimport Notification from \"../pages/Notification/Notification\";\nconst CruzRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"\" element={<Cruz />} />\n      <Route path=\"/matchedprofile\" element={<ViewProfile />} />\n      <Route path=\"/jobpoststatus\" element={<JobPostStatus />} />\n      <Route path=\"/employerviewsjobs\" element={<EmployerViewsJobs />} />\n      <Route path=\"/setupstatus\" element={<SetStatus />} />\n      <Route path=\"/likedjobs\" element={<EmployeeLikedJobs />} />\n      <Route path=\"/dislikedjobs\" element={<EmployeeDisLikedJobs />} />\n      <Route\n        path=\"/reviewemployerprofile\"\n        element={<ReviewEmployerProfile />}\n      />\n      <Route\n        path=\"/previewemployee\"\n        element={<PreviewEmployee />}\n      />\n      <Route\n        path=\"/employeejobpoststatus\"\n        element={<EmployeeJobpostStatus />}\n      />\n      {/* <Route path=\"/ReviewEmployerPost\" element={<ReviewEmployerPost />} /> */}\n      <Route path=\"/employeedashboard\" element={<Dashboard />} />\n      <Route path=\"/employeejobs\" element={<EmployeeJobs />} />\n      <Route path=\"/employeematchprofile\" element={<EmployeeMatchProfile />} />\n      <Route path=\"/employeemymatches\" element={<EmployeeMyMatches />} />\n      <Route\n        path=\"/reviewemployeeprofile\"\n        element={<ReviewEmployeeProfile />}\n      />\n      <Route path=\"/profilesetup\" element={<ProfileSetup />} />\n      <Route path=\"/createprofile\" element={<CreateProfile />} />\n      <Route path=\"/createprofile/:id\" element={<CreateProfile />} />\n      <Route path=\"/mymatches\" element={<MyMatches />} />\n      <Route path=\"/mylikedprofile\" element={<MyLikedProfile />} />\n      <Route path=\"/mydislikedprofile\" element={<MyDislikedProfile />} />\n      <Route path=\"/viewcampaign/:params\" element={<ViewCampaign />} />\n      <Route path=\"/register\" element={<Register />} />\n      <Route path=\"/postjob\" element={<PostJob />} />\n      <Route path=\"/job\" element={<Job />} />\n      <Route path=\"/job/:id\" element={<Job />} />\n      <Route path=\"*\" element={<Navigate to=\".\" />} />\n      <Route path=\"/viewsinglecampaign/:id\" element={<ViewJob />} />\n      <Route path=\"/notification\" element={<Notification />} />\n    </Routes>\n  );\n};\n\nexport default CruzRoutes;\n"],"names":["_ref","_errors$name","name","options","registerConfig","placeholder","handleChange","register","useFormContext","errors","useFormState","error","message","selectName","setSelectName","useState","useEffect","_jsxs","className","concat","children","defaultValue","onChange","event","selectedValue","target","value","_jsx","disabled","map","option","label","CustomSlider","forwardRef","props","ref","settings","items","isVideo","modal","setModal","videoUrl","setVideoUrl","undefined","videoTitle","setTitle","embedUrl","setEmbededUrl","toggle","playVideo","video","title","navigate","useNavigate","Slider","item","index","active","onClick","clickCallback","room_id","thumbnail","src","alt","FontAwesomeIcon","icon","faPlay","controls","playsInline","isLink","url","Link","to","image","state","chandlery_id","partner_id","text","details","Modal","isOpen","centered","ModalBody","ModalHeader","Heading","tag","ReactPlayer","fileUploadApiSlice","apiSlice","injectEndpoints","endpoints","builder","uploadFile","mutation","query","data","method","headers","body","formData","useUploadFileMutation","Sidebar","CruzMenu","pageLink","openIndex","setOpenIndex","ListAccordion","list","toggleAccordion","CruzMainApiSlice","getJobQuestions","saveJob","jobData","invalidatesTags","getJobDetails","id","removeImage","imageData","getProfileQuestions","saveProfile","profileData","getProfileDetails","_ref2","getChatMember","getDashboardCount","providesTags","overrideExisting","useGetJobQuestionsQuery","useSaveJobMutation","useGetJobDetailsMutation","useRemoveImageMutation","useGetProfileQuestionsQuery","useSaveProfileMutation","useGetProfileDetailsMutation","useGetChatMemberMutation","useGetDashboardCountQuery","CruzLayout","socket","cruzPendingMsgCount","setCruzPendingMsgCount","useSocket","userData","getUserData","IsEmployer","IsEmployee","token","Token","console","sidebar","useLocation","isLoading","isSuccess","skip","allCounts","count","button","_Fragment","length","link","CampaignApiSlice","getLiveCampaigns","pauseCampaign","jobStatus","deleteCampaign","activateCampaign","removeCampaign","myMatchesList","getDraftCampaigns","getArchiveCampaigns","myLikedList","_ref3","myUnLikedList","_ref4","employerVarification","getVarificationStatus","useGetLiveCampaignsQuery","usePauseCampaignMutation","useDeleteCampaignMutation","useRemoveCampaignMutation","useActivateCampaignMutation","useMyMatchesListQuery","useGetDraftCampaignsQuery","useGetArchiveCampaignsQuery","useMyLikedListQuery","useMyUnLikedListQuery","useEmployerVarificationMutation","useGetVarificationStatusMutation","SingleCampaign","params","useParams","liveCampaignsQuery","draftCampaignsQuery","archiveCampaignQuery","isVisible","setIsVisible","isMobile","setIsMobile","window","innerWidth","showBackdrop","setShowBackdrop","dynamicId","setDynamicId","selectedCampaign","setSelectedCampaign","liveCampaigns","refetch","pauseCampaignMutation","deleteCampaignMutation","activateCampaignMutation","removeCampaignMutation","campaigns","setCampaigns","scrollTo","isMobiletext","setIsMobiletext","matchMedia","matches","dropdownOpen","setDropdownOpen","handleResize","addEventListener","removeEventListener","buttonText","form","useForm","handleSubmit","visibleActionSteps","setVisibleActionSteps","pauseBoxClasses","setPauseBoxClasses","async","status","response","warn","Swal","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","backdrop","background","then","result","isConfirmed","timer","showConfirmButton","createBackdrop","document","createElement","classList","add","removeChild","appendChild","existingBackdrop","querySelector","remove","faAngleRight","campaign","job_status","require","job_images","process","job_role","vessel_size","job_duration","job_location","Button","iconname","faEye","theme","img","employee_count","job_id","employee_ids","created_at","job_seen_count","handleToggle","preventDefault","newVisibility","Date","now","Eye","is_deleted","edit","firstIndex","secondIndex","editparameter","faThumbsUp","faThumbsDown","faPlayCircle","faPauseCircle","prevIndex","prevClasses","toggleMenu","faEllipsisH","faTrashAlt","trash","Dropdown","prevState","toggleDropdown","direction","DropdownToggle","caret","DropdownMenu","container","DropdownItem","log","faClone","CampaignList","ViewCampaign","memberType","Member_type","showModal","useGlobalModalContext","MODAL_TYPES","MEMBERSHIP_MODAL","EmployeeProfile","_slides","employeeProfile","medias","calculateAge","dob","birthDate","today","age","getFullYear","monthDifference","getMonth","getDate","slides","imageNum","Array","isArray","filter","media","_media$media_file$spl","extension","media_file","split","pop","toLowerCase","includes","slidesettings","slidesToShow","slidesToScroll","infinite","dots","centerPadding","responsive","breakpoint","arrows","members_fname","members_lname","employee_location","is_liked","is_match","employee_role","employee_dob","employee_gender","style","whiteSpace","employee_intro","employee_passport","employee_avilable","employee_position","employee_vessel","employee_salary_expection","employee_experience","employee_last_role","employee_qualification","employee_languages","employee_visa","employee_interest","referrance","React","cursor","employee_about","ProfileMatch","handleChat","handleSubmitNext","profilePic","memberProfilePic","members_profile_picture","WhatHappen","employerProfileApiSlice","employerProfile","campaignMatchesList","likeCampaign","type","unLikeCampaign","useEmployerProfileQuery","useCampaignMatchesListMutation","useLikeCampaignMutation","useUnLikeCampaignMutation","Breadcrumbs","mainbreadcrumb","secondbreadcrumb","thirdbreadcrumb","redirectUrl","ViewProfile","modal1Open","setModal1Open","modal2Open","setModal2Open","modalCall","setModalCall","toggleModal1","toggleModal2","location","page","setPage","setEmployeeProfile","setMedias","employeeId","setEmployeeId","employeeDetails","setEmployeeDetails","availableProfile","empProfilePic","setEmpProfilePic","loading","setLoading","employeeName","setEmployeeName","setIsChatVisible","setPrivateChatMember","setIsInterview","socketSetEmployeeDetails","setChatType","pageDetails","setPageDetails","isMatch","setIsmMatch","setProfilePic","employee_images","members_name","employee_id","member_profile_picture","member","Loading","setTimeout","fetchAvailableJobs","handleNext","prevPage","handleBack","isEnvelopePresent","setIsEnvelopePresent","checkForEnvelope","hasEnvelopeWrapper","contains","observer","MutationObserver","observe","childList","subtree","disconnect","role","handleDisLike","handleLike","fade","Register","showSuccessMessage","setShowSuccessMessage","showLoaderMessage","setShowLoaderMessage","verificationStatus","setVerificationStatus","jobId","jobRole","stripePromise","loadStripe","client_secret","stripe","verifyIdentity","varifyResponse","is_doc_verified","handleGoBack","checked","CardBody","chunkSize","FileUpload","getFileName","folderName","from","dropzoneActive","setDropzoneActive","files","setFiles","currentFileIndex","setCurrentFileIndex","lastUploadedFileIndex","setLastUploadedFileIndex","currentChunkIndex","setCurrentChunkIndex","setError","fileInputRef","useRef","readAndUploadCurrentChunk","reader","FileReader","file","blob","slice","onload","e","readerEvent","_readerEvent$target","blobData","Blob","Uint8Array","FormData","append","size","toString","Math","ceil","unwrap","fileSize","chunks","finalFilename","catch","uploadChunk","readAsDataURL","isLastFile","onDragOver","onDragLeave","onDrop","newFiles","dataTransfer","handleDrop","current","click","faPlus","display","fileIndex","progress","uploading","round","width","selectedDatas","stepIndex","Qsoptions","formfields","rest","activeIndex","setActiveIndex","currentData","originalDate","year","month","day","parsedValue","parseInt","fileName","setFileName","findIndex","optionss","Container","Row","Col","Option","field","CustomInput","rows","required","CustomSelect","DobPicker","MultiStepForm","_steps$stepIndex$ques","memberdp","steps","questions","setStepIndex","questionIndex","setQuestionIndex","setFormData","formErrors","setFormErrors","selectedOption","setSelectedOption","control","formState","watch","errorMessage","setErrorMsg","formDataByStep","setFormDataByStep","fill","datas","setDatas","BtnSave","answeredQuestionsDetails","Object","keys","forEach","key","question","find","some","push","validateForm","currentQuestion","FormProvider","onSubmit","noValidate","Progress","Step","setValue","updatedFormData","handleInputChange","toggleStep","goBack","resetStep","PostJob","EmployerProfile","jobProfile","setSlides","newSlides","baseUrl","redirect","boat_location","boat_type","job_start_date","vessel_desc","job_summary","employeeProfileApiSlice","availableJobsList","likeEmployee","employeeMyMatches","employeeLikedJob","unlikeEmployee","employeeDisLikedJob","useEmployeeProfileQuery","useAvailableJobsListMutation","useLikeEmployeeMutation","useEmployeeMyMatchesQuery","useEmployeeLikedJobQuery","useUnlikeEmployeeMutation","useEmployeeDisLikedJobQuery","LikeCard","showButton","getId","availableJobs","setJobProfile","clearTimeout","handleShow","job_ids","privateMembers","activeMembers","setActiveMembers","String","member_id","connected","emp","lastMessageTime","memberId","_privateMembers$find","isoDateString","last_message_time","format","getLastMessageTime","faCircle","color","member_name","MyMatches","chatMemberDetails","ProfileSetup","cmsPageMutation","useCMSPageMutation","cruzDetails","setCruzDetails","cruz_title","short_description","cruz_description","slug","Error","fetchCMSContentFromAPI","Hero","source","dangerouslySetInnerHTML","__html","Card","classname","setData","jobDetails","setJobDetails","pageHeader","pageImage","pageSlug","crewDetails","setCrewDetails","crewresponse","timeoutId","hasCruzCustomClass","setHasCruzCustomClass","ProfileApiSlice","getProfileDashboard","getAvailableJobs","setStatus","useGetProfileDashboardQuery","useGetAvailableJobsQuery","useSetStatusMutation","Dashboard","_dashboardData$data","_dashboardData$data2","_dashboardData$data3","_dashboardData$data4","dashboardData","dashboardError","isDashboardLoading","isDashboardSuccess","jobCount","job_count","employeeData","employeeError","isEmployeeLoading","isEmployeeSuccess","searchParameter","mediaDetails","searchParameterName","gridLength","setGridLength","rawData","matchesRaw","date","memberName","Member_fullname","join","EmployeeMyMatches","EmployeeReviewProfile","marginRight","faPenToSquare","dateObject","dobFormat","vessel_type","VideoPlayer","videoId","chapters","ReviewEmployeeProfile","ReviewEmployerProfile","EmployeeJobs","EmployeeMatchProfile","optionKey","onOptionChange","disable","isChecked","disbleRadio","handleClick","stopPropagation","content","htmlFor","ReactDatePicker","selected","maxDate","minDate","inline","DatePicker","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","dateFormat","placeholderText","JobDatePicker","_formValues$name","_formValues$name2","_formValues$name3","initialValues","yearCurrent","formValues","startDate","handleDateSelect","showDatePicker","setShowDatePicker","selectedDate","setSelectedDate","handleFieldClick","dobDay","dobMonth","dobYear","rules","useController","selectedOptions","setSelectedOptions","modalOpen","setModalOpen","toggleModal","Select","isMulti","Boolean","currencyName","salaryName","onchange","entries","min","onMouseDown","imageKey","imageRemove","hideModal","handleModalClose","removePicModal","CONFIRM_MODAL","confirmBtn","onCloseCallback","handleRemoveImages","removeData","file_path","file_type","updatedImages","images","href","validFileTypes","startsWith","thumb","thumbnailPath","setThumbPath","setVideoPath","thumbPath","videoPath","isVideoFile","filename","lastIndexOf","_media$split$pop","substring","directory","filenameWithoutExtension","imageExtensions","imageFiles","ext","endsWith","_","filePath","handleFileChange","customFile","assign","accept","handleVideoChange","fields","useFieldArray","Controller","render","getDayArray","dayCount","i","padStart","monthNames","currentYear","currentMonth","currentDay","setIsOpen","pickerValue","setPickerValue","handlePickerChange","useCallback","newValue","monthIndex","indexOf","newDayArray","Number","newDay","readOnly","Transition","appear","show","as","Fragment","Dialog","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","Picker","wheelMode","Column","Item","handleDoneClick","formattedDate","formatDate","subtitle","multiple","Qoptions","sub_questions","search","datepicker","handleDatePickerSelect","datepickerDate","isDateSelected","exclude_jobrole","isClassAdded","setIsClassAdded","querySelectorAll","convertOptions","searchQuery","setSearchQuery","setFullYear","setDate","colClass","excludedValues","values","MyPicker","DynamicTextFields","_ref5","MultiSelect","ShowImages","MultiUploads","_ref6","_ref7","sub_question","flex","flexWrap","_ref8","_ref9","SalaryPicker","faSearch","ReviewJobEmployerProfile","handlePreview","setImages","setImageKey","questionKey","setQuestionKey","invalidFields","setInvalidFields","fetchVarification","extractedImages","step","dateStr","StepsDetails","_question$sub_questio","_question$sub_questio2","_question$title","_formValues$question$","_question$sub_questio3","_question$sub_questio4","_formValues$question$2","_formValues$question$3","isInvalid","isSalaryTypeValid","toUpperCase","Intl","NumberFormat","sub_index","subquestion","subIndex","colSpan","obj","invalidKeys","hasOwnProperty","validateObjectKeys","JobId","setUserData","formValueName","formType","displayArray","stepNumber","questionNumber","k","toLocaleDateString","MultiForm","_data$data","currentStep","currentTitle","validationName","setValidationName","disError","setDisError","checkQuestion","setCheckQuestion","isReview","setIsReview","isJobDetailsFetched","setIsJobDetailsFetched","review","setReview","setJobRole","jobError","jobLoading","isLoadings","setIsLoading","fetchJobDetails","handleContinue","allNames","currentName","subQuestionNames","subQuestion","salaryPickerValid","currency","amount","salaryTypeValid","jobSalaryTypeValid","every","prevCheckQuestion","prevQuestionIndex","prevStepIndex","validation","handleReset","handleOptionChange","currentValue","updatedValue","moment","upload_media","firstQuestion","handleFormSubmit","handleReviewGoBack","handlePreviewGoBack","Steps","sub_title","ReviewEmployerPost","Job","JobPostStatus","EmployeeJobpostStatus","SetStatus","statusArray","currentStatus","setCurrentStatus","activeButton","setActiveButton","setMessage","employee_status","handleButtonClick","saveStatus","ViewJob","initialValue","setInitialValue","setDatepickerDate","defaultValues","reset","isProfileDetailsFetched","setIsProfileDetailsFetched","initvalue","generateDefaultValues","profileDetails","employee_avilable_date","setIsDateSelected","SaveReview","employee_video","interests","faInfoCircle","isValid","checkvalues","someValue","employeeAvailable","employeeAvailableDate","employeeInterest","interest","isFetchBaseQueryError","CreateProfile","EmployerViewsJobs","setJobId","empDetails","setEmpDetails","unLikeEmployee","Status","setClassName","PreviewEmployee","EmployeeLikedJobs","MyLikedProfile","EmployeeDisLikedJobs","chatEmpDetails","setChatEmpDetails","MyDislikedProfile","Notification","activeTab","setActiveTab","isModalOpen","setIsModalOpen","setMemberId","interviewId","setInterviewId","memberFname","setMemberFName","memberLname","setMemberLName","memberDp","setMemberDp","timeSlot","setTimeSlot","interviewStatus","setInterviewStatus","setType","totalCount","setTotalCount","tab","myInterviewRefetch","jobInterviewRefetch","handleRearrange","newProfileInterview","setnewProfileInterview","profileInterview","useMyInterviewListQuery","interviewDetails","jobInterview","jobSuccess","useJobInterviewListQuery","cruzMemberList","setCruzMemberList","emit","acceptInterview","useAcceptInterviewMutation","handleAccept","interview_id","is_cancel","JSON","stringify","handleCancel","handleJoin","_details$meeting_id","postParams","meeting_id","subject","queryString","URLSearchParams","open","defaultLocale","days","formatTime","timeString","toLocaleTimeString","hour","minute","hour12","formatLastSeen","dateString","toLocaleString","convertToUKTime","timeZone","on","members","off","Nav","tabs","NavItem","NavLink","classnames","TabContent","TabPane","tabId","sm","interviewDate","interview_date","interview_time","nowTime","minuteDifference","diff","btnTheme","showRearrange","borderRadius","full_name","interview_status","member_fname","member_lname","pending_message_count","openChat","BookModal","toggleClose","handleCloseModal","userId","specialistName","specialistLastName","specialistDp","changeTimeSlot","reason","bookingId","CruzRoutes","Routes","Route","path","element","Cruz","Navigate"],"sourceRoot":""}