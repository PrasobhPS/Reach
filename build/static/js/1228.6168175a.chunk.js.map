{"version":3,"file":"static/js/1228.6168175a.chunk.js","mappings":"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","sources":["components/CustomSlider/CustomSlider.tsx","components/FullWindowImageBox/FullWindowImageBox.tsx","components/HalfWindowImageBox/HalfWindowImageBox.tsx","features/Partners/PartnersApiSlice.tsx","features/Partners/PartnerList.tsx","pages/Partners.tsx"],"sourcesContent":["import React, { forwardRef, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./CustomSlider.scss\";\nimport { CustomSliderProps } from \"../../types\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { Heading } from \"../Heading/Heading\";\nimport ReactPlayer from \"react-player\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport const CustomSlider = forwardRef<Slider, CustomSliderProps>((props, ref) => {\n  const { settings, items, className, isVideo } = props;\n  const [modal, setModal] = useState(false);\n  const [videoUrl, setVideoUrl] = useState<string | undefined>(undefined);\n  const [videoTitle, setTitle] = useState<string | undefined>(undefined);\n  const [embedUrl, setEmbededUrl] = useState<string | undefined>(undefined);\n  const toggle = () => {\n    setModal(!modal);\n  };\n  // let embedUrl: string | undefined = undefined;\n  const playVideo = (video: string | undefined, title: string | undefined) => {\n    setVideoUrl(video);\n    setTitle(title);\n    toggle();\n  };\n  const navigate = useNavigate();\n  return (\n    <div className=\"custom-slider-wrapper action-up-arrow\">\n      <Slider ref={ref} {...settings} className={className} >\n        {items &&\n          items.map((item, index) => {\n            return (\n              <div className={`item cursor-pointer ${item?.active ? 'chat-slider-active' : ''}`} key={`slide-${index}`} onClick={() => { if (props.clickCallback && item.room_id) props.clickCallback(item.room_id); }}>\n                {isVideo ? (\n                  <div className=\"video-wrapper\">\n                    {item.thumbnail ? (\n                      <div className=\"image-wrap\">\n                        <img\n                          src={item.thumbnail}\n                          alt={item?.alt}\n                          className=\"img-fluid\"\n                        />\n                        <a\n                          className=\"play-button\"\n                          onClick={() => playVideo(item.video, item.title)}\n                        >\n                          <FontAwesomeIcon icon={faPlay} />\n                        </a>\n                      </div>\n                    ) : (\n                      <div>\n                        <video\n                          className=\"w-100\"\n                          controls={false}\n                          playsInline\n                          src={item.video}\n                        ></video>\n                        <a\n                          className=\"play-button\"\n                          onClick={() => playVideo(item.video, item.title)}\n                        >\n                          <FontAwesomeIcon icon={faPlay} />\n                        </a>\n                      </div>\n                    )}\n                    {/* <video\n                    className=\"w-100\"\n                    controls={false}\n                    playsInline\n                    src={item.video}\n                  ></video>\n                  <a\n                    className=\"play-button\"\n                    onClick={() => playVideo(item.video)}\n                  >\n                    <FontAwesomeIcon icon={faPlay} />\n                  </a> */}\n                  </div>\n                ) : (item.isLink && item.url ? (\n                  <Link to={item.url} className={item?.active ? 'active' : ''}>\n                    <img src={item.image} alt={item?.alt} className=\"img-fluid\" />\n                  </Link>\n                ) : (\n                  <a onClick={() => navigate(`/chandlery`, {\n                    state: {\n                      chandlery_id: item.partner_id,\n                    },\n                  }\n                  )\n                  } target=\"_blank\" className={item?.active ? 'active' : ''}>\n                    <img src={item.image} alt={item?.alt} className=\"img-fluid\" />\n                  </a>)\n                )}\n                {item.title && <h6 className=\"itemlist-heading\">{item.title}</h6>}\n                {item.text && <p className=\"item-text\">{item.text}</p>}\n                {item.details && <p className=\"item-details\">{item.details}</p>}\n\n                {/* {item.title && <h6 className=\"itemlist-heading\">{item.text}</h6>}\n              {item.text && <p className=\"item-text\">{item.title}</p>}\n              {item.details && <p className=\"item-details\">{item.details}</p>} */}\n\n              </div>\n            )\n          })}\n      </Slider>\n      <div className=\"\">\n        <Modal\n          isOpen={modal}\n          toggle={toggle}\n          centered\n          className=\"videobox-modal\"\n        >\n          <ModalBody>\n            <ModalHeader toggle={toggle}>\n              <Heading tag=\"h3\" className=\"text-center\">\n                {videoTitle}\n              </Heading>\n            </ModalHeader>\n            <div className=\"video-player\">\n              <ReactPlayer url={videoUrl} controls={true} />\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>\n  );\n});\nexport default CustomSlider;","import { FullWindowImageBoxProps } from '../../types';\nimport './FullWindowImageBox.scss'\n\nexport const FullWindowImageBox = (props: FullWindowImageBoxProps) => {\n    const { isVideo, source, children, className } = props;\n\n    return (\n        <div className={`container-fluid g-0 full-window-image-box ${className}`}>\n            <div className=\"row g-0\">\n                <div className=\"col-12\">\n                    {\n                        isVideo ? (\n                            <>\n                                <div className='video-box'>\n                                    <video playsInline muted autoPlay loop>\n                                        <source src={source} type=\"video/mp4\" />\n                                        Your browser does not support the video tag.\n                                    </video>\n                                </div>\n                            </>\n                        )\n                            :\n                            (\n                                <>\n                                    <div className=\"image-box\">\n                                        <img src={source} alt=\"\" />\n                                    </div>\n                                </>\n                            )\n                    }\n                    <div className='content-box'>\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import { useNavigate } from \"react-router-dom\";\nimport { HalfWindowImageBoxProps } from \"../../types\";\nimport \"./HalfWindowImageBox.scss\";\n\nexport const HalfWindowImageBox = (props: HalfWindowImageBoxProps) => {\n  const { isVideo, url, sources, children, className, navigateTo, id } = props;\n  const firstUrl = url ? url[0] : undefined;\n  const secondUrl = url ? url[1] : undefined;\n  const navigate = useNavigate();\n\n  const isNavigate = navigateTo && navigateTo;\n  const linkProps = isNavigate\n    ? { onClick: () => navigate(`/chandlery`, { state: { chandlery_id: id } }) }\n    : { href: firstUrl, target: \"_blank\" };\n  const linkPropsSecond = isNavigate\n    ? { onClick: () => navigate(`/chandlery`, { state: { chandlery_id: id } }) }\n    : { href: secondUrl, target: \"_blank\" };\n  return (\n    <div className={`container-fluid g-0 half-window-image-box ${className}`}>\n      <div className=\"row g-0\">\n        <div className=\"col-md-6\">\n          <a style={{ cursor: \"pointer\" }} {...linkProps}>\n            {\n              isVideo ? (\n                <>\n                  <div className='video-box'>\n                    <video playsInline muted autoPlay loop>\n                      <source src={sources[0]} type=\"video/mp4\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  </div>\n                </>\n              )\n                : (\n                  <div className=\"image-box\">\n                    <img src={sources[0]} alt=\"\" className=\"img-fluid\" />\n                    <div className=\"content-box\">{children[0]}</div>\n                  </div>\n                )}\n          </a>\n        </div>\n        {sources[1] && (\n          <div className=\"col-md-6\">\n            <a style={{ cursor: \"pointer\" }} {...linkPropsSecond}>\n              <div className=\"image-box\">\n                <img src={sources[1]} alt=\"\" className=\"img-fluid\" />\n                <div className=\"content-box\">{children[1]}</div>\n              </div>\n            </a>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { apiSlice } from \"../../app/apiSlice\";\n\n// Create the cmsContentApiSlice using injectEndpoints\nexport const partnersApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    partners: builder.query({\n      query: () => ({\n        url: \"/ourPartners\",\n        method: \"GET\",\n      }),\n    }),\n  }),\n  overrideExisting: true,\n});\n\nexport const { usePartnersQuery } = partnersApiSlice;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport { FullWindowImageBox } from \"../../components/FullWindowImageBox/FullWindowImageBox\";\nimport { Heading } from \"../../components/Heading/Heading\";\nimport { HalfWindowImageBox } from \"../../components/HalfWindowImageBox/HalfWindowImageBox\";\nimport { CustomSlider } from \"../../components/CustomSlider/CustomSlider\";\nimport \"../../assets/scss/partners.scss\";\nimport { usePartnersQuery } from \"./PartnersApiSlice\";\nimport { getUserData } from \"../../utils/Utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectPartnerList, setPartnerList } from \"./PartnerSlice\";\ninterface Partner {\n  id: string;\n  partner_name: string;\n  partner_video_title: string;\n  partner_video: string;\n  partner_side_image?: string;\n  partner_details: string;\n  partner_logo: string;\n  partner_web_url: string;\n  video_file_type: string;\n  partner_video_thumb: string;\n  partner_side_video?: string;\n}\nfunction PartnerList() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const settings = {\n    centerMode: true,\n    slidesToShow: 3,\n    arrows: false,\n    dots: false,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    variableWidth: false,\n    centerPadding: \"0%\",\n    // draggable: false,  \n    // swipe: false,\n    // touchMove: false,\n    responsive: [\n      {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 1,\n          centerMode: true,\n          centerPadding: \"0%\",\n          arrows: false,\n        },\n      },\n    ],\n  };\n\n  const settings1 = {\n    slidesToShow: 3,\n    dots: false,\n    responsive: [\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 1,\n          centerMode: true,\n          centerPadding: \"10%\",\n          arrows: false,\n        },\n      },\n    ],\n  };\n  const userData = getUserData(\"userData\");\n  let memberType = \"\";\n  try {\n    if (userData !== null) {\n      memberType = userData.Member_type;\n    } else {\n      // console.error(\"User data not found in local storage\");\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n  const { data, error, isLoading, isSuccess } = usePartnersQuery({});\n  const [partnersList, setPartnersList] = useState<Partner[]>([]);\n  const [sourceToShow, setSourceToShow] = useState<string>('');\n  const [videoExist, setVideoExist] = useState<boolean>(false);\n  const [isLoadings, setIsLoading] = useState(true);\n  const [slides, setSlides] = useState<{ image: string; alt: string }[]>([]);\n  const [videos, setVideos] = useState<\n    {\n      video: string;\n      text: string;\n      title: string;\n      fileType: string;\n      thumbnail: string;\n    }[]\n  >([]);\n  useEffect(() => {\n    if (data?.data) {\n      dispatch(setPartnerList({ list: data }));\n    }\n\n  }, [data, dispatch]);\n  const partnerList = useSelector(selectPartnerList);\n  useEffect(() => {\n    if (!partnerList?.data?.length) return; // Ensure data exists\n\n    setPartnersList(partnerList.data);\n    setSourceToShow(partnerList?.filePath + \"/\" + (partnerList.data[0]?.partner_side_image || \"\"));\n    if (partnerList?.data?.[0]?.partner_side_video) {\n      setVideoExist(true);\n      setSourceToShow(partnerList?.filePath + \"/\" + (partnerList.data[0]?.partner_side_video || \"\"));\n    }\n\n    const newSlides = partnerList.data.map((partner: Partner) => ({\n      image: partnerList.filePath + \"/\" + partner.partner_logo,\n      alt: partner.partner_name,\n      details: partner.partner_details,\n      url: partner.partner_web_url,\n      partner_id: partner.id,\n    }));\n    setSlides(newSlides);\n\n    const newVideos = partnerList.data\n      .filter((partner: Partner) => partner.partner_video || partner.partner_video_thumb)\n      .map((partner: Partner) => ({\n        video: partner.partner_video\n          ? partner.video_file_type === \"File\"\n            ? partnerList.filePath + \"/\" + partner.partner_video\n            : partner.partner_video\n          : \"\",\n        text: partner.partner_video ? partner.partner_name : \"\",\n        title: partner.partner_video ? partner.partner_video_title : \"\",\n        fileType: partner.video_file_type,\n        thumbnail: partner.partner_video_thumb\n          ? partnerList.filePath + \"/\" + partner.partner_video_thumb\n          : \"\",\n      }));\n    setVideos(newVideos);\n\n  }, [partnerList]);\n\n  if (!isSuccess || !partnersList.length) return <div>No partners found.</div>;\n\n  const createHalfWindowBoxes = () => {\n    const boxes = [];\n    for (let i = 1; i < partnersList.length; i += 2) {\n      const url = [\n        partnersList[i]?.partner_web_url || \"\",\n        partnersList[i + 1]?.partner_web_url || \"\",\n      ];\n      let partnerSideImage = partnersList[i]?.partner_side_image;\n      let partnerSideImage1 = partnersList[i + 1]?.partner_side_image;\n      let videoExist = false;\n      if (partnersList[i]?.partner_side_video !== null) {\n        videoExist = true;\n        partnerSideImage = partnersList[i]?.partner_side_video;\n      }\n      if (partnersList[i + 1]?.partner_side_video !== null) {\n        partnerSideImage1 = partnersList[i + 1]?.partner_side_video;\n      }\n      const sources = [partnerSideImage ? data.filePath + \"/\" + partnerSideImage : \"\"];\n\n      if (partnerSideImage1) {\n        sources.push(data.filePath + \"/\" + partnerSideImage1);\n      }\n      const children = [\n        <div key={partnersList[i]?.id || `child${i}`}>\n          <Heading tag=\"h2\">{partnersList[i]?.partner_name}</Heading>\n          <p className=\"text-white\">{partnersList[i]?.partner_details}</p>\n        </div>,\n        partnersList[i + 1] && (\n          <div key={partnersList[i + 1]?.id || `child${i + 1}`}>\n            <Heading tag=\"h2\">{partnersList[i + 1]?.partner_name}</Heading>\n            <p className=\"text-white\">{partnersList[i + 1]?.partner_details}</p>\n          </div>\n        ),\n      ];\n      boxes.push(\n        <div>\n          {sources && <HalfWindowImageBox\n            isVideo={videoExist}\n            key={`box${i}`}\n            url={url}\n            sources={sources}\n            children={children}\n            navigateTo={true}\n            id={parseInt(partnersList[i]?.id)}\n          />}\n        </div>\n      );\n    }\n    return boxes;\n  };\n\n  return (\n    <div className=\"App partners-page\">\n      <div>\n        {sourceToShow && <FullWindowImageBox\n          isVideo={videoExist}\n          source={sourceToShow}\n        >\n          <a style={{ cursor: \"pointer\" }} onClick={() => navigate(`/chandlery`, {\n            state: {\n              chandlery_id: partnersList[0].id,\n            },\n          }\n          )\n          }>\n            <Heading tag=\"h2\">{partnersList[0]?.partner_name}</Heading>\n          </a>\n          <p className=\"text-white\">{partnersList[0]?.partner_details}</p>\n          <div className=\"button-group\">\n            {!memberType ? (\n              <Button\n                onClick={() => navigate(\"/member-signup\")}\n                text=\"Sign Up for Free\"\n                icon={true}\n                theme=\"dark\"\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n        </FullWindowImageBox>}\n        {/* )} */}\n      </div>\n      {isSuccess && createHalfWindowBoxes()}\n      <div className=\"slider-zoom-items\">\n        <h2 className=\"customHeading\">OUR PARTNERS</h2>\n        <div className=\"partners-slider\">\n          <CustomSlider\n            settings={settings}\n            items={slides}\n            className=\"slider-zoom\"\n          />\n        </div>\n        {/* <div className=\"text-para\">\n          <p>\n            Up to 20% off all Yeti products when using your exclusive REACH\n            membership discount code.\n          </p>\n        </div> */}\n      </div>\n      <div className=\"discover-partners\">\n        <div className=\"text-head\">\n          <h2 className=\"customHeading\">DISCOVER OUR PARTNERS</h2>\n        </div>\n        <CustomSlider settings={settings1} items={videos} isVideo={true} />\n      </div>\n    </div>\n  );\n}\n\nexport default PartnerList;\n","import React from \"react\";\nimport { Button } from \"../components/Button/Button\";\nimport { Heading } from \"../components/Heading/Heading\";\nimport \"../assets/scss/partners.scss\";\nimport { CmsHeader } from \"../components/CmsHeader/CmsHeader\";\nimport PartnerList from \"../features/Partners/PartnerList\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Partners() {\n  const navigate = useNavigate();\n  return (\n    <div className=\"App partners-page\">\n      <CmsHeader links={[]}></CmsHeader>\n      <PartnerList />\n      <div className=\"enquired-section\">\n        <div className=\"container\">\n          <div className=\"ext-text\">\n            <Heading tag=\"h2\">extend the ‘reach’ of your brand</Heading>\n            <p className=\"text-white\">\n              Selected. Aligned. Connected. Partner with REACH to shape the future of life on the water—together\n            </p>\n            <div className=\"Enquire-btn\">\n              <Button\n                onClick={() => navigate('/contact')}\n                text=\"Enquire Now\"\n                icon={true}\n                theme=\"light\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Partners;\n"],"names":["CustomSlider","forwardRef","props","ref","settings","items","className","isVideo","modal","setModal","useState","videoUrl","setVideoUrl","undefined","videoTitle","setTitle","embedUrl","setEmbededUrl","toggle","playVideo","video","title","navigate","useNavigate","_jsxs","children","_jsx","Slider","map","item","index","concat","active","onClick","clickCallback","room_id","thumbnail","src","alt","FontAwesomeIcon","icon","faPlay","controls","playsInline","isLink","url","Link","to","image","state","chandlery_id","partner_id","target","text","details","Modal","isOpen","centered","ModalBody","ModalHeader","Heading","tag","ReactPlayer","FullWindowImageBox","source","_Fragment","muted","autoPlay","loop","type","HalfWindowImageBox","sources","navigateTo","id","firstUrl","secondUrl","isNavigate","linkProps","href","linkPropsSecond","style","cursor","partnersApiSlice","apiSlice","injectEndpoints","endpoints","builder","partners","query","method","overrideExisting","usePartnersQuery","_partnersList$","_partnersList$2","dispatch","useDispatch","userData","getUserData","memberType","Member_type","error","console","data","isLoading","isSuccess","partnersList","setPartnersList","sourceToShow","setSourceToShow","videoExist","setVideoExist","isLoadings","setIsLoading","slides","setSlides","videos","setVideos","useEffect","setPartnerList","list","partnerList","useSelector","selectPartnerList","_partnerList$data","_partnerList$data$","_partnerList$data2","_partnerList$data2$","_partnerList$data$2","length","filePath","partner_side_image","partner_side_video","newSlides","partner","partner_logo","partner_name","partner_details","partner_web_url","newVideos","filter","partner_video","partner_video_thumb","video_file_type","partner_video_title","fileType","Button","theme","createHalfWindowBoxes","boxes","i","_partnersList$i","_partnersList","_partnersList$i2","_partnersList2","_partnersList$i3","_partnersList3","_partnersList$i5","_partnersList$i6","_partnersList$i7","_partnersList5","_partnersList6","_partnersList7","_partnersList$i8","partnerSideImage","partnerSideImage1","_partnersList$i4","_partnersList4","push","parseInt","centerMode","slidesToShow","arrows","dots","autoplay","autoplaySpeed","variableWidth","centerPadding","responsive","breakpoint","CmsHeader","links","PartnerList"],"sourceRoot":""}