{"version":3,"file":"static/js/6234.884229e9.chunk.js","mappings":"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","sources":["features/MemberSignup/SignWithGoogle.tsx","features/MemberSignup/FreeMembership.tsx","features/MemberSignup/MemberShipCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport \"./MembershipSetup.scss\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { auth, provider } from \"../../components/GoogleAuth/GoogleAuth\";\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEmailExistMutation, useLoginMutation } from \"../Login/authApiSlice\";\nimport \"./Membersignup.scss\";\nimport { setUserData } from \"../../utils/Utils\";\nimport { setCredentials } from \"../../app/authSlice\";\nimport { useAppDispatch } from \"../../Hooks/hooks\";\n\ninterface FormValues {\n    [key: string]: any;\n}\ninterface Signup {\n    members_email: string;\n}\ninterface loginData {\n    members_email: string;\n    google_token: string | undefined;\n}\ninterface FreeSignUpProps {\n    referral_code?: string;\n}\nexport const SignWithGoogle: React.FC<FreeSignUpProps> = ({\n    referral_code,\n}) => {\n    const form = useForm<Signup>();\n    const { register, control, handleSubmit, formState, watch, setValue } = form;\n    const [email, setEmail] = useState('');\n    const [memberName, setMemberName] = useState('');\n    const [googleToken, setGoogleToken] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n    const [checkEmail] = useEmailExistMutation();\n    const [loginMutation, { isLoading }] = useLoginMutation();\n    const dispatch = useAppDispatch();\n    const handleFormSubmit = async (data: Signup) => {\n        setErrorMessage('');\n        try {\n            const responseData = await checkEmail(data);\n            if (\"data\" in responseData) {\n                setErrorMessage(responseData?.data?.message);\n                if (responseData?.data?.success) {\n                    navigate(\n                        `/member-signup`,\n                        {\n                            state: {\n                                email: data?.members_email,\n                                referral_code: referral_code,\n                            },\n                        }\n                    )\n                } else {\n\n                }\n            }\n            if (\"error\" in responseData) {\n                setErrorMessage(responseData?.error?.data?.error);\n            }\n\n        } catch (error) {\n            console.error(\"Error during sign-in:\", error);\n        }\n    }\n    const handleInputClick = () => {\n        setErrorMessage('');\n    }\n\n    const loginFunction = async (loginData: loginData) => {\n        const userData = await loginMutation(loginData);\n        // let errorMessage: string = \"\";\n        if (\"error\" in userData) {\n            console.error(\"Error logging in:\", userData.error);\n        } else {\n            // console.log(userData, \"user\");\n            setUserData(userData.data.data);\n            const users = userData.data.data;\n            const { Member_type, Token } = users;\n            dispatch(setCredentials({ users, Token }));\n            navigate(`/cruz`);\n        }\n    }\n    const handleClick = async () => {\n        try {\n            const result = await signInWithPopup(auth, provider);\n            const credential = GoogleAuthProvider.credentialFromResult(result);\n            const googleToken = credential?.idToken;\n            const googleAccessToken = credential?.accessToken;\n            const user = result.user;\n            setEmail(user.email ?? '');\n            setMemberName(user.displayName ?? '');\n            setGoogleToken(googleToken ?? '');\n            if (user.email) {\n                let profileData = {\n                    members_email: user.email,\n                }\n                const responseData = await checkEmail(profileData);\n                if (\"data\" in responseData) {\n                    if (responseData?.data?.success) {\n                        navigate(\n                            `/member-signup`,\n                            {\n                                state: {\n                                    email: user?.email,\n                                    memberName: user?.displayName,\n                                    googleToken: googleToken,\n                                    phoneNumber: user?.phoneNumber,\n                                    googleAccessToken: googleAccessToken,\n                                    referral_code: referral_code,\n                                },\n                            }\n                        )\n                    } else {\n                        let loginData = {\n                            members_email: user.email,\n                            google_token: googleToken\n                        }\n                        loginFunction(loginData);\n                    }\n                }\n\n\n            }\n        } catch (error) {\n            console.error(\"Error during sign-in:\", error);\n        }\n    }\n    return (\n        <div className=\"signWithgoogle\">\n            <div className=\"box-card\">\n                <FormProvider {...form}>\n                    <form\n                        onSubmit={handleSubmit(handleFormSubmit)}\n                        noValidate\n                    >\n                        <a style={{ cursor: \"pointer\" }} onClick={handleClick}>\n                            <img src={require(\"../../assets/images/membersignup/google.png\")} alt=\"\" className=\"img-fluid\" />\n                        </a>\n                        <div className=\"divider\">\n                            <span className=\"divider-text\">or</span>\n                        </div>\n                        <div className=\"Emailform login-field\" >\n                            <CustomInput\n                                name=\"members_email\"\n                                placeholder=\"Email Address\"\n                                type=\"text\"\n                                registerConfig={{\n                                    required: {\n                                        value: true,\n                                        message: \"Email Address\",\n                                    },\n                                }}\n                                className=\"input-block\"\n                                onClick={handleInputClick}\n                            />\n                            <Button\n                                text=\"Join Now as Free Member\"\n                                icon={true}\n                                className=\"w-100 bg-white\"\n                                onClick={() => console.log(\"Hello\")}\n                            />\n                            <div className=\"error\" style={{ color: \"red\" }}>{errorMessage}</div>\n                        </div>\n                        <div className=\"caption\">\n                            <p>By continuing, you agree to REACH Terms of Service and Privacy Policy.</p>\n                        </div>\n                    </form>\n                </FormProvider>\n            </div>\n\n        </div>\n    )\n}\nexport default SignWithGoogle;","import React, { useEffect, useState } from \"react\";\nimport { Hero } from \"../../components/Hero/Hero\";\nimport { Heading } from \"../../components/Heading/Heading\";\nimport { Button } from \"../../components/Button/Button\";\nimport \"./MembershipSetup.scss\";\nimport { SignupInterface, initialSignupInterface } from \"../../types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-regular-svg-icons\";\nimport { MemberShipCard } from \"./MemberShipCard\";\nimport { FeaturesCard } from \"../../components/FeaturesCard/FeaturesCard\";\nimport { SignWithGoogle } from \"./SignWithGoogle\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { CmsHeader } from \"../../components/CmsHeader/CmsHeader\";\nimport { getUserData } from \"../../utils/Utils\";\nexport const FreeMembership = () => {\n\n    const location = useLocation();\n    const navigate = useNavigate();\n    const referral_code = location.state ? location.state : [];\n    const freeFeatures = [\n        'Free for Life',\n        'Access to Weather Reporting',\n        'Access to Club House (Chat)',\n        'Monthly Email Newsletter',\n        'Access to selected online events',\n        'Post Job Opportunities within CRUZ',\n    ];\n\n    const userData = getUserData('userData');\n\n    let memberType = \"\";\n    if (userData != null) {\n        memberType = userData.Member_type;\n    }\n\n    useEffect(() => {\n        if (memberType === \"M\") navigate(\"/\");\n\n    }, []);\n\n    return (\n        <div className=\"FreeMembershipCardpage card-parent\">\n            <CmsHeader links={[]}></CmsHeader>\n            <div className=\"innercontent-section\">\n                <div className=\"container\">\n                    <div className=\"membership-boxcard\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-12\">\n                                <MemberShipCard referral_code={referral_code['referral_code']} heading={\"Free MemberShip\"} type={\"Free\"} showButton={false} />\n                            </div>\n                            <div className=\"col-md-6 col-12\">\n                                <SignWithGoogle referral_code={referral_code['referral_code']} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default FreeMembership;","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport \"./MembershipSetup.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MemebershipProps } from \"../../types\";\nimport {\n  useReferralDiscountMutation,\n  useMembershipFeeQuery,\n  useJoinReachQuery,\n} from \"../Login/authApiSlice\";\n\ntype Currency = \"USD\" | \"GBP\" | \"EUR\";\ninterface MembershipFees {\n  full_membership_fee: string;\n  monthly_membership_fee: string;\n  referal_percentage: string;\n}\nexport const MemberShipCard: React.FC<MemebershipProps> = ({\n  referral_code,\n  heading,\n  plusNote,\n  membershipFee,\n  yearlyFee,\n  type,\n  showButton,\n  offerPrice,\n  currency,\n  setPaymentFee,\n  setCardCurrency,\n}) => {\n  const navigate = useNavigate();\n  const [referralDiscount] = useReferralDiscountMutation();\n  const { data, error, isLoading, isSuccess } = useMembershipFeeQuery({});\n  const [currencySelected, setCurrency] = useState<Currency>(currency || \"GBP\");\n  const [fees, setFees] = useState({\n    fee: membershipFee,\n    yearly: yearlyFee,\n  });\n  const currencySymbols: { [key: string]: string } = {\n    USD: \"$\",\n    EUR: \"€\",\n    GBP: \"£\",\n  };\n  const [updatedOfferPrice, setUpdatedOfferPrice] = useState<\n    MembershipFees | null | undefined\n  >(null);\n\n  useEffect(() => {\n    setUpdatedOfferPrice(offerPrice);\n  }, [offerPrice]);\n  useEffect(() => {\n    if (isSuccess && data) {\n      const feeArr: Record<Currency, { fee: any; monthly: any }> = {\n        USD: {\n          fee: data.data.full_membership_fee_dollar,\n          monthly: data.data.monthly_membership_fee_dollar,\n        },\n        GBP: {\n          fee: data.data.full_membership_fee,\n          monthly: data.data.monthly_membership_fee,\n        },\n        EUR: {\n          fee: data.data.full_membership_fee_euro,\n          monthly: data.data.monthly_membership_fee_euro,\n        },\n      };\n\n      const defaultFees = {\n        fee: feeArr[currencySelected].monthly,\n        yearly: feeArr[currencySelected].fee,\n      };\n\n      setFees(defaultFees);\n\n      // Ensure setPaymentFee is called with default values\n      if (setPaymentFee) {\n        setPaymentFee({\n          currency: currencySelected,\n          fee: defaultFees.fee,\n          yearly: defaultFees.yearly,\n        });\n      }\n    }\n  }, [isSuccess, data, currencySelected]);\n\n\n  useEffect(() => {\n    const fetchReferralDiscount = async () => {\n      if (referral_code) {\n        try {\n          const formData = {\n            referral_code: referral_code,\n            currency: currencySelected,\n          };\n          const responseOther = await referralDiscount(formData).unwrap();\n          if (responseOther.success) {\n            setUpdatedOfferPrice(responseOther.data);\n\n            if (setPaymentFee) {\n              setPaymentFee({\n                currency: currencySelected,\n                fee: responseOther.data.monthly_membership_fee,\n                yearly: responseOther.data.full_membership_fee,\n              });\n            }\n\n          }\n        } catch (error) {\n          //console.log(error, \"ERROR RESPONSE\");\n        }\n      }\n    };\n\n    // Call the async function\n    fetchReferralDiscount();\n  }, [referral_code, currencySelected]);\n\n  const handleCurrencyChange = async (\n    e: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    const selectedCurrency = e.target.value as Currency; // Cast to Currency type\n    setCurrency(selectedCurrency);\n    if (setCardCurrency) {\n      setCardCurrency(selectedCurrency);\n    }\n    if (data) {\n      const feeArr: Record<Currency, { fee: any; monthly: any }> = {\n        USD: {\n          fee: data.data.full_membership_fee_dollar,\n          monthly: data.data.monthly_membership_fee_dollar,\n        },\n        GBP: {\n          fee: data.data.full_membership_fee,\n          monthly: data.data.monthly_membership_fee,\n        },\n        EUR: {\n          fee: data.data.full_membership_fee_euro,\n          monthly: data.data.monthly_membership_fee_euro,\n        },\n      };\n\n      setFees({\n        fee: feeArr[selectedCurrency].monthly,\n        yearly: feeArr[selectedCurrency].fee,\n      });\n      if (setPaymentFee) {\n        setPaymentFee({\n          currency: selectedCurrency,\n          fee: feeArr[selectedCurrency].monthly,\n          yearly: feeArr[selectedCurrency].fee,\n        });\n      }\n      if (referral_code) {\n        try {\n          const formData = {\n            referral_code: referral_code,\n            currency: selectedCurrency,\n          };\n          const responseOther = await referralDiscount(formData).unwrap();\n          if (responseOther.success) {\n            setUpdatedOfferPrice(responseOther.data);\n          }\n        } catch (error) {\n          //console.log(error, \"ERROR RESPONSE\");\n        }\n      }\n    }\n  };\n\n  const [freeFeatures, setFreeFeatures] = useState(\"\");\n  const [fullFeatures, setFullFeatures] = useState(\"\");\n  const [freeheading, setFreeHeading] = useState(\"\");\n  const [fullheading, setFullHeading] = useState(\"\");\n  const {\n    data: joinReachDetails,\n    isLoading: joinReachLoading,\n    isSuccess: joinReachSuccess,\n  } = useJoinReachQuery({});\n  useEffect(() => {\n    if (joinReachSuccess && joinReachDetails?.data) {\n      const featureData = joinReachDetails.data;\n      setFreeFeatures(featureData[0]?.membership_description || \"\");\n      setFreeHeading(featureData[0]?.membership_title || \"\");\n      setFullFeatures(featureData[1]?.membership_description || \"\");\n      setFullHeading(featureData[1]?.membership_title || \"\");\n    } else {\n      console.warn(\"joinReachDetails or data is missing\");\n    }\n  }, [joinReachDetails, joinReachSuccess]);\n\n  const getCookie = (name: string) => {\n    const cookies = document.cookie.split(\"; \");\n    const cookie = cookies.find((row) => row.startsWith(`${name}=`));\n    return cookie ? cookie.split(\"=\")[1] : null;\n  };\n  const [hasCookies, setHasCookies] = useState(false);\n  useEffect(() => {\n    const cookieValue = getCookie(\"CookieConsent\");\n    setHasCookies(!!cookieValue); // Convert to boolean\n  }, [document.cookie]);\n\n  const handleClick = () => {\n    //if (hasCookies) {\n    if (type === \"Free\") {\n      navigate(`/freemembership`, {\n        state: { referral_code },\n      });\n    }\n    if (type === \"Full\") {\n      navigate(`/member-signup`, {\n        state: {\n          referral_code: referral_code,\n          selectedCurrency: currencySelected,\n        },\n      });\n    }\n    // }\n  };\n  return (\n    <div\n      className={`Membership-cardtheme ${type === \"Free\" ? \"full-membershipcard\" : \"free-membershipcard\"\n        }`}\n    >\n      <div className=\"card-themeheader\"></div>\n      <div className=\"card-content\">\n        <div className=\"card-heading\">\n          {type === \"Free\" ? (\n            <h3 className=\"customHeading\">{freeheading}</h3>\n          ) : (\n            <h3 className=\"customHeading\">{fullheading}</h3>\n          )}\n        </div>\n        <div className=\"card-body\">\n          {type === \"Free\" ? (\n            <div\n              className=\"text-white text-custom\"\n              dangerouslySetInnerHTML={{ __html: freeFeatures }}\n            />\n          ) : (\n            <div\n              className=\"text-white text-custom\"\n              dangerouslySetInnerHTML={{ __html: fullFeatures }}\n            />\n          )}\n\n          <div className=\"amount-details\">\n            {type === \"Free\" ? (\n              <div className=\"free-membership\">\n                <h4 className=\"customHeading\">FREE</h4>\n              </div>\n            ) : (\n              <>\n                <div className=\"fullmembership-content\">\n                  {updatedOfferPrice?.full_membership_fee ? (\n                    <>\n                      <h4 className=\"customHeading discountAmnt strike-through\">\n                        <select\n                          className=\"form-select\"\n                          value={currencySelected}\n                          onChange={handleCurrencyChange}\n                        >\n                          <option value=\"GBP\">£</option>\n                          <option value=\"EUR\">€</option>\n                          <option value=\"USD\">$</option>\n                        </select>\n                        {fees.yearly} pa{\" \"}\n                        <span>\n                          ({currencySymbols[currencySelected]}\n                          {fees.fee} pcm)\n                        </span>\n                      </h4>\n                      <h4 className=\"customHeading\">\n                        {currencySymbols[currencySelected]}\n                        {updatedOfferPrice?.full_membership_fee} pa{\" \"}\n                        <span>\n                          ({currencySymbols[currencySelected]}\n                          {updatedOfferPrice?.monthly_membership_fee} pcm)\n                        </span>\n                      </h4>\n                    </>\n                  ) : (\n                    <h4 className=\"customHeading discountAmnt\">\n                      <select\n                        className=\"form-select\"\n                        value={currencySelected}\n                        onChange={handleCurrencyChange}\n                      >\n                        <option value=\"GBP\">£</option>\n                        <option value=\"EUR\">€</option>\n                        <option value=\"USD\">$</option>\n                      </select>\n                      {fees.yearly} pa{\" \"}\n                      <span>\n                        ({currencySymbols[currencySelected]}\n                        {fees.fee} pcm)\n                      </span>\n                    </h4>\n                  )}\n                </div>\n                <div className=\"cancel-time\">\n                  <span>Cancel any time</span>\n                </div>\n              </>\n            )}\n          </div>\n\n          {showButton && (\n            <div className=\"btn-groups\">\n              <Button\n                onClick={handleClick}\n                text=\"Join Now\"\n                icon={true}\n                theme=\"light\"\n                className=\"w-100\"\n              />\n            </div>\n          )}\n          {type === \"Full\" && !showButton && (\n            <div className=\"payment-details\">\n              <p>Secure Payments powered by Stripe</p>\n              <div className=\"payment-card\">\n                <img\n                  src={require(\"../../assets/images/membersignup/payments.png\")}\n                  alt=\"Payment methods\"\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MemberShipCard;\n"],"names":["SignWithGoogle","_ref","referral_code","form","useForm","register","control","handleSubmit","formState","watch","setValue","email","setEmail","useState","memberName","setMemberName","googleToken","setGoogleToken","errorMessage","setErrorMessage","navigate","useNavigate","checkEmail","useEmailExistMutation","loginMutation","isLoading","useLoginMutation","dispatch","useAppDispatch","_jsx","className","children","FormProvider","_jsxs","onSubmit","async","responseData","data","_responseData$data","_responseData$data2","_responseData$error","_responseData$error$d","message","success","state","members_email","error","console","noValidate","style","cursor","onClick","_user$email","_user$displayName","result","signInWithPopup","auth","provider","credential","GoogleAuthProvider","credentialFromResult","idToken","googleAccessToken","accessToken","user","displayName","profileData","_responseData$data3","phoneNumber","userData","loginData","setUserData","users","Member_type","Token","setCredentials","loginFunction","google_token","src","require","alt","CustomInput","name","placeholder","type","registerConfig","required","value","handleInputClick","Button","text","icon","log","color","FreeMembership","location","useLocation","getUserData","memberType","useEffect","CmsHeader","links","MemberShipCard","heading","showButton","plusNote","membershipFee","yearlyFee","offerPrice","currency","setPaymentFee","setCardCurrency","referralDiscount","useReferralDiscountMutation","isSuccess","useMembershipFeeQuery","currencySelected","setCurrency","fees","setFees","fee","yearly","currencySymbols","USD","EUR","GBP","updatedOfferPrice","setUpdatedOfferPrice","feeArr","full_membership_fee_dollar","monthly","monthly_membership_fee_dollar","full_membership_fee","monthly_membership_fee","full_membership_fee_euro","monthly_membership_fee_euro","defaultFees","formData","responseOther","unwrap","fetchReferralDiscount","handleCurrencyChange","selectedCurrency","e","target","freeFeatures","setFreeFeatures","fullFeatures","setFullFeatures","freeheading","setFreeHeading","fullheading","setFullHeading","joinReachDetails","joinReachLoading","joinReachSuccess","useJoinReachQuery","_featureData$","_featureData$2","_featureData$3","_featureData$4","featureData","membership_description","membership_title","warn","hasCookies","setHasCookies","cookieValue","cookie","document","split","find","row","startsWith","concat","getCookie","dangerouslySetInnerHTML","__html","_Fragment","onChange","handleClick","theme"],"sourceRoot":""}