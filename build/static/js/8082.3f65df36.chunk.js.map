{"version":3,"file":"static/js/8082.3f65df36.chunk.js","mappings":"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","sources":["components/TwoColumnImageBox/TwoColumnImageBox.tsx","features/Chandlery/ChandleryApiSlice.tsx","pages/Chandlery.tsx"],"sourcesContent":["import React from 'react';\nimport { TwoColumnImageBoxProps } from '../../types';\nimport './TwoColumnImageBox.scss';\n\nexport const TwoColumnImageBox = (props: TwoColumnImageBoxProps) => {\n    const { source, children, swapColumn, isBackground, logo } = props;\n\n    // Define the style object for background image if isBackground is true\n    const backgroundStyle = isBackground ? { backgroundImage: `url(${source})` } : {};\n\n    return (\n        <div className={`container-fluid two-col-box g-0 ${isBackground ? 'background-image' : ''}`} style={backgroundStyle}>\n            <div className=\"logo-container\">\n                {logo && (<img src={logo} alt=\"Image\"  className='img-fluid' />)}\n            </div>\n            <div className='row g-0 align-items-center Twocolumnimagebox'>\n                <div className={`col-md-6 col-12 ${swapColumn ? 'order-md-last' : ''}`}>\n                    <div className='image-box'>\n                        {!isBackground && <img src={source} alt=\"Image\" className='img-fluid' />}\n\n                    </div>\n                </div>\n                <div className='col-md-6 col-12'>\n                    <div className='content-box'>\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TwoColumnImageBox;\n","import { url } from \"inspector\";\nimport { apiSlice } from \"../../app/apiSlice\";\n\nexport const ChandleryApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        Chandlery: builder.query({\n            query: () => ({\n                url: \"/chandlery\",\n                method: \"GET\",\n            }),\n        }),\n        getCouponCode: builder.mutation({\n            query: (passData) => ({\n                url: \"/getCouponCode\",\n                method: \"POST\",\n                body: passData,\n            }),\n        }),\n    }),\n    overrideExisting: true,\n});\n\nexport const {\n    useChandleryQuery,\n    useGetCouponCodeMutation,\n} = ChandleryApiSlice","import React, { useEffect, useRef, useState } from \"react\";\nimport { Hero } from \"../components/Hero/Hero\";\nimport { TwoColumnImageBox } from \"../components/TwoColumnImageBox/TwoColumnImageBox\";\nimport { Button } from \"../components/Button/Button\";\nimport { Heading } from \"../components/Heading/Heading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport MenuSlider from \"../components/MenuSlider/MenuSlider\";\nimport { getUserData } from \"../utils/Utils\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../utils/GlobalModal\";\nimport \"../../src/assets/scss/chandlery.scss\";\nimport { CmsHeader } from \"../components/CmsHeader/CmsHeader\";\nimport { useChandleryQuery, useGetCouponCodeMutation } from \"../features/Chandlery/ChandleryApiSlice\";\nimport { CustomSlider } from \"../components/CustomSlider/CustomSlider\";\nimport { useLocation } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\ninterface ChandleryData {\n  id: number;\n  logo?: string;\n  image: string;\n  name: string;\n  discription: string;\n  discount: number | \"\";\n  coupon: string | null;\n  website: string | \"\";\n  show_coupon_code?: number;\n\n}\n\nconst Chandlery = () => {\n  const userData = getUserData(\"userData\");\n  let memberType = \"\";\n  let token = \"\";\n  let member_id = \"\";\n  try {\n    if (userData !== null) {\n      memberType = userData.Member_type;\n      token = userData.Token;\n      member_id = userData.Member_id;\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n\n  const { showModal } = useGlobalModalContext();\n  const memberModal = () => {\n    showModal(MODAL_TYPES.MEMBERSHIP_MODAL);\n  };\n\n  const location = useLocation();\n  const [chandlerydata, setChandlerydata] = useState<ChandleryData[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    data: chandleryDetails = {},\n    isLoading: chandleryLoading,\n    isSuccess,\n    refetch\n  } = useChandleryQuery({}, { skip: !token });\n  const [getCouponCode] = useGetCouponCodeMutation();\n\n  useEffect(() => {\n    if (isSuccess && chandleryDetails.data) {\n      const transformedData = chandleryDetails.data.map((item: {\n        id: string;\n        chandlery_coupon_code: string;\n        chandlery_description: string;\n        chandlery_discount: string;\n        chandlery_image: string;\n        chandlery_name: string;\n        chandlery_website: string;\n        chandlery_logo: string;\n        show_coupon_code: number;\n      }) => ({\n        id: item.id,\n        logo: item.chandlery_logo ? `${chandleryDetails.filePath}/${item.chandlery_logo}` : null,\n        image: `${chandleryDetails.filePath}/${item.chandlery_image}`,\n        name: item.chandlery_name,\n        discription: item.chandlery_description,\n        discount: item.chandlery_discount,\n        coupon: item.chandlery_coupon_code,\n        website: item.chandlery_website,\n        show_coupon_code: item.show_coupon_code,\n      }));\n      setChandlerydata(transformedData);\n    }\n  }, [chandleryDetails, isSuccess]);\n\n\n\n  useEffect(() => {\n    if (memberType !== \"M\") memberModal();\n\n  }, []);\n\n  const couponRefs = useRef<{ [key: string]: HTMLDivElement | null }>({});\n  const chandleryId = location.state?.chandlery_id || null;\n  useEffect(() => {\n    if (chandleryId && couponRefs.current[chandleryId]) {\n      couponRefs.current[chandleryId]?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  }, [chandleryId, chandlerydata]);\n  const handleCopyClick = (couponCode: string | null, id: number) => {\n    if (!couponCode) {\n      console.error(\"Coupon code is empty\");\n      return;\n    }\n\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n      navigator.clipboard.writeText(couponCode)\n        .then(() => {\n          setbuttonCopied(id);\n        })\n        .catch((error) => {\n          console.error(\"Failed to copy text to clipboard:\", error);\n        });\n    } else {\n      console.error(\"Clipboard API not available\");\n      fallbackCopyTextToClipboard(couponCode, id);\n    }\n  };\n\n  const fallbackCopyTextToClipboard = (text: string, id: number) => {\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.position = \"fixed\";\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n      document.execCommand(\"copy\");\n      setbuttonCopied(id);\n    } catch (err) {\n      console.error(\"Fallback: Oops, unable to copy\", err);\n    }\n    document.body.removeChild(textArea);\n  };\n\n  const [buttonCopied, setbuttonCopied] = useState(0);\n  const [codeGenerated, setcodeGenerated] = useState(0);\n\n  const handleGenerateCode = async (id: number) => {\n\n    try {\n      const passData = {\n        id: id\n      }\n      const response = await getCouponCode(passData);\n\n      if ('data' in response && response.data?.success) {\n        refetch();\n      } else if ('error' in response) {\n        console.error('Error:', response.error?.message || 'Something went wrong');\n        //alert(response.error?.message || 'Something went wrong');\n      } else {\n        console.error('Unexpected response:', response);\n        Swal.fire({\n          title: \"No Code!\",\n          text: response.data.message,\n          icon: \"error\",\n          showCancelButton: false,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"OK\",\n          backdrop: `\n                                                      rgba(255, 255, 255, 0.5)\n                                                      left top\n                                                      no-repeat\n                                                      filter: blur(5px);\n                                                    `,\n          background: \"#fff\",\n        }).then(async (result) => { });\n\n      }\n    } catch (error) {\n      console.error('API call failed:', error);\n      alert('Failed to fetch coupon code. Please try again later.');\n    }\n  }\n\n  const links = [\n    { url: \"#1\", text: \"All\" },\n    { url: \"#2\", text: \"Gear\" },\n    { url: \"#3\", text: \"Clothing\" },\n    { url: \"#4\", text: \"Sailing\" },\n    { url: \"#5\", text: \"Yachts\" },\n    { url: \"#6\", text: \"Accessories\" },\n    { url: \"#7\", text: \"Restorents\" },\n    { url: \"#8\", text: \"Others\" },\n  ];\n\n  const slides = [\n    { alt: \"\", title: \"All\" },\n    { alt: \"\", title: \"Gear\" },\n    { alt: \"\", title: \"Clothing\" },\n    { alt: \"\", title: \"Sailing\" },\n    { alt: \"\", title: \"Yachts\" },\n    { alt: \"\", title: \"Accessories\" },\n    { alt: \"\", title: \"Restorents\" },\n    { alt: \"\", title: \"Others\" },\n  ];\n\n  const slidesettings = {\n    dots: false,\n    centerPadding: \"0px\",\n    infinite: false,\n    slidesToShow: 8,\n    slidesToScroll: 1,\n    draggable: false,\n    responsive: [\n      {\n        breakpoint: 1200,\n        settings: {\n          arrows: true,\n          centerPadding: \"0px\",\n          slidesToShow: 5,\n        },\n      },\n      {\n        breakpoint: 992,\n        settings: {\n          arrows: true,\n          centerPadding: \"0px\",\n          slidesToShow: 5,\n        },\n      },\n      {\n        breakpoint: 640,\n        settings: {\n          arrows: true,\n          centerPadding: \"10\",\n          slidesToShow: 5,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          arrows: true,\n          centerPadding: \"10\",\n          slidesToShow: 5,\n        },\n      },\n    ],\n  };\n\n  const firstChandleryItem = chandlerydata[0];\n  const remainingChandleryData = chandlerydata.slice(1);\n\n  const handleClick = (website: string, event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    if (member_id) {\n      window.dataLayer = window.dataLayer || [];\n      window.dataLayer.push({\n        event: \"links_click\",\n        userId: member_id, // Replace with dynamic user ID\n        altsLink: `${website}`\n      });\n    }\n    window.open(website, \"_blank\");\n\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"Chandlery-page\">\n        <CmsHeader links={links} />\n        {/* <div className=\"menu-sliderslick\">\n          <CustomSlider settings={slidesettings} items={slides} />\n        </div> */}\n        <div className=\"container-fluid Chandlery-pagecontainer\">\n          <div className=\"row\">\n\n            {firstChandleryItem && (\n              <div className=\"col-12 header-parentbox\" key={firstChandleryItem.id}\n                ref={(el) => (couponRefs.current[firstChandleryItem.id] = el)}\n                tabIndex={-1}>\n                <TwoColumnImageBox\n                  source={firstChandleryItem.image}\n                  swapColumn={false}\n                  isBackground={true}\n                  logo={firstChandleryItem.logo}\n                >\n                  <div className=\"coupon-container\">\n                    {/* <ul className=\"cat-list\">\n                      <li>Cloths</li>\n                      <li>Accessories</li>\n                    </ul> */}\n                    <div className=\"offer-label\">{firstChandleryItem.discount}% OFF</div>\n                    <Heading>{firstChandleryItem.name}</Heading>\n                    <p>{firstChandleryItem.discription}</p>\n                    {firstChandleryItem.show_coupon_code === 1 && (\n                      <div className=\"coupon-code\" >\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={firstChandleryItem.coupon || ''}\n                        />\n\n                        <Button\n                          onClick={firstChandleryItem.coupon ? () => handleCopyClick(firstChandleryItem.coupon, firstChandleryItem.id) : () => handleGenerateCode(firstChandleryItem.id)}\n                          text={firstChandleryItem.coupon ? \"Copy Code\" : \"Get Code\"}\n                          icon={false}\n                          theme=\"dark\"\n                        />\n\n                      </div>\n                    )}\n                    {firstChandleryItem.website && (\n                      (() => {\n                        try {\n                          const url = new URL(firstChandleryItem.website);\n                          const domainName = url.hostname;\n                          return (\n                            <a className=\"visiturl alts_link\" onClick={(e) => {\n\n                              handleClick(firstChandleryItem.website, e)\n                            }} target=\"_blank\" rel=\"noopener noreferrer\">\n                              Visit {domainName}\n                              <span className=\"btn-icon\">\n                                <FontAwesomeIcon icon={faAngleRight} />\n                              </span>\n                            </a>\n                          );\n                        } catch (error) {\n                          console.error(\"Error parsing website URL:\", error);\n                          return (\n                            <a className=\"visiturl\" href={firstChandleryItem.website} target=\"_blank\" rel=\"noopener noreferrer\">\n                              Visit {firstChandleryItem.website}\n                              <span className=\"btn-icon\">\n                                <FontAwesomeIcon icon={faAngleRight} />\n                              </span>\n                            </a>\n                          );\n                        }\n                      })()\n                    )}\n                  </div>\n                </TwoColumnImageBox>\n              </div>\n            )}\n          </div>\n          <div className=\"row\">\n            {remainingChandleryData.map((chandleryData) => (\n              <div className=\"col-md-6 more-card-field\" key={chandleryData.id}\n                ref={(el) => (couponRefs.current[chandleryData.id] = el)}\n                tabIndex={-1}>\n                <TwoColumnImageBox\n                  source={chandleryData.image}\n                  swapColumn={false}\n                  isBackground={true}\n                  logo={chandleryData.logo}\n                >\n                  <div className=\"coupon-container\">\n                    {/* <ul className=\"cat-list\">\n                      <li>Cloths</li>\n                      <li>Accessories</li>\n                    </ul> */}\n                    <div className=\"offer-label\">{chandleryData.discount}% OFF</div>\n                    <Heading>{chandleryData.name}</Heading>\n                    <p>{chandleryData.discription}</p>\n                    {chandleryData.show_coupon_code === 1 && (\n                      <div className=\"coupon-code\" >\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={chandleryData.coupon || ''}\n                        />\n\n                        <Button\n                          onClick={chandleryData.coupon ? () => handleCopyClick(chandleryData.coupon, chandleryData.id) : () => handleGenerateCode(chandleryData.id)}\n                          text={chandleryData.coupon ? \"Copy Code\" : \"Get Code\"}\n                          icon={false}\n                          theme=\"dark\"\n                        />\n\n                      </div>\n                    )}\n                    {chandleryData.website && (\n                      (() => {\n                        try {\n                          const url = new URL(chandleryData.website);\n                          const domainName = url.hostname;\n                          return (\n                            <a className=\"visiturl alts_link\" onClick={(e) => {\n\n                              handleClick(chandleryData.website, e)\n                            }} target=\"_blank\" rel=\"noopener noreferrer\">\n                              Visit {domainName}\n                            </a>\n                          );\n                        } catch (error) {\n                          console.error(\"Error parsing website URL:\", error);\n                          return (\n                            <a className=\"visiturl alts_link\" onClick={(e) => {\n\n                              handleClick(chandleryData.website, e)\n                            }} target=\"_blank\" rel=\"noopener noreferrer\">\n                              Visit {chandleryData.website}\n                            </a>\n                          );\n                        }\n                      })()\n                    )}\n                  </div>\n                </TwoColumnImageBox>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chandlery;\n"],"names":["TwoColumnImageBox","props","source","children","swapColumn","isBackground","logo","backgroundStyle","backgroundImage","concat","_jsxs","className","style","_jsx","src","alt","ChandleryApiSlice","apiSlice","injectEndpoints","endpoints","builder","Chandlery","query","url","method","getCouponCode","mutation","passData","body","overrideExisting","useChandleryQuery","useGetCouponCodeMutation","_location$state","userData","getUserData","memberType","token","member_id","Member_type","Token","Member_id","error","console","showModal","useGlobalModalContext","location","useLocation","chandlerydata","setChandlerydata","useState","isLoading","setIsLoading","data","chandleryDetails","chandleryLoading","isSuccess","refetch","skip","useEffect","transformedData","map","item","id","chandlery_logo","filePath","image","chandlery_image","name","chandlery_name","discription","chandlery_description","discount","chandlery_discount","coupon","chandlery_coupon_code","website","chandlery_website","show_coupon_code","MODAL_TYPES","MEMBERSHIP_MODAL","couponRefs","useRef","chandleryId","state","chandlery_id","_couponRefs$current$c","current","scrollIntoView","behavior","block","handleCopyClick","couponCode","navigator","clipboard","writeText","then","setbuttonCopied","catch","fallbackCopyTextToClipboard","text","textArea","document","createElement","value","position","top","left","appendChild","focus","select","execCommand","err","removeChild","buttonCopied","codeGenerated","setcodeGenerated","handleGenerateCode","async","_response$data","response","success","_response$error","message","Swal","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","backdrop","background","alert","firstChandleryItem","remainingChandleryData","slice","handleClick","event","preventDefault","window","dataLayer","push","userId","altsLink","open","CmsHeader","links","ref","el","tabIndex","Heading","type","Button","onClick","theme","domainName","URL","hostname","e","target","rel","FontAwesomeIcon","faAngleRight","href","chandleryData"],"sourceRoot":""}