{"version":3,"file":"static/js/7579.69a5c42b.chunk.js","mappings":"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","sources":["../node_modules/@jitsi/react-sdk/lib/constants/index.js","../node_modules/@jitsi/react-sdk/lib/init.js","../node_modules/@jitsi/react-sdk/lib/utils/index.js","../node_modules/@jitsi/react-sdk/lib/components/JitsiMeeting.js","features/VideoCall/VideoCallApiSlice.tsx","features/VideoCall/VideoCall.tsx"],"sourcesContent":["export const DEFAULT_DOMAIN = 'meet.jit.si';\nexport const JAAS_STAGING_DOMAIN = 'stage.8x8.vc';\nexport const JAAS_PROD_DOMAIN = '8x8.vc';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_DOMAIN } from './constants';\nconst loadExternalApi = (domain, release, appId) => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        if (window.JitsiMeetExternalAPI) {\n            return resolve(window.JitsiMeetExternalAPI);\n        }\n        const script = document.createElement('script');\n        const releaseParam = release ? `?release=${release}` : '';\n        const appIdPath = appId ? `${appId}/` : '';\n        script.async = true;\n        script.src = `https://${domain}/${appIdPath}external_api.js${releaseParam}`;\n        script.onload = () => resolve(window.JitsiMeetExternalAPI);\n        script.onerror = () => reject(new Error(`Script load error: ${script.src}`));\n        document.head.appendChild(script);\n    });\n});\nlet scriptPromise;\n/**\n * Injects the external_api.js script for the corresponding domain in DOM\n * and resolves with either the `JitsiMeetExternalApi` class definition or an error.\n *\n * Only the first script will be injected, therefore avoid using multiple instances\n * with mixed domains and release version at the same time.\n *\n * @param {string} domain - The domain of the external API\n * @param {string} release - The Jitsi Meet release. Expected format: 'release-1234'\n * @param {string} appId - The tenant for JaaS Meetings\n * @returns {Promise<JitsiMeetExternalApi>} - The JitsiMeetExternalAPI or an error\n */\nexport const fetchExternalApi = (domain = DEFAULT_DOMAIN, release, appId) => {\n    if (scriptPromise) {\n        return scriptPromise;\n    }\n    scriptPromise = loadExternalApi(domain, release, appId);\n    return scriptPromise;\n};\n","import { JAAS_PROD_DOMAIN, JAAS_STAGING_DOMAIN } from '../constants';\n/**\n * Returns the complete room name\n *\n * @param {string} roomName\n * @param {string} tenant\n * @returns {string} the complete room name\n */\nexport const getRoomName = (roomName, tenant) => {\n    if (tenant) {\n        return `${tenant}/${roomName}`;\n    }\n    return roomName;\n};\n/**\n * Returns the appId or tenant value\n *\n * @param {string} roomName\n * @returns {string|undefined}\n */\nexport const getAppId = (roomName) => {\n    const roomParts = roomName.split('/');\n    if (roomParts.length <= 1) {\n        return;\n    }\n    return roomParts[0];\n};\n/**\n * Returns the JaaS domain\n *\n * @param {boolean|undefined} useStaging\n * @returns {string} the JaaS domain\n */\nexport const getJaaSDomain = (useStaging) => {\n    if (useStaging) {\n        return JAAS_STAGING_DOMAIN;\n    }\n    return JAAS_PROD_DOMAIN;\n};\nlet instancesCounter = 0;\n/**\n * Generates an unique id\n * @param {string} prefix\n * @returns {string} the component id\n */\nexport const generateComponentId = (prefix) => `${prefix}-${instancesCounter++}`;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { DEFAULT_DOMAIN } from '../constants';\nimport { fetchExternalApi } from '../init';\nimport { generateComponentId, getAppId } from '../utils';\n/**\n * Returns the JitsiMeeting Component with access to a custom External API\n * to be used as-it-is in React projects\n *\n * @param {IJitsiMeetingProps} props the component's props\n * @returns {ReactElement} the `JitsiMeeting` Component\n * @example\n  ```js\n    <JitsiMeeting\n        domain='meet.jit.si'\n        roomName: 'TestingJitsiMeetingComponent'\n        spinner={CustomSpinner}\n        onApiReady={(externalApi) => console.log(externalApi)}\n    />\n  ```\n */\nconst JitsiMeeting = ({ domain = DEFAULT_DOMAIN, roomName, configOverwrite, interfaceConfigOverwrite, jwt, invitees, devices, userInfo, release, lang, spinner: Spinner, onApiReady, onReadyToClose, getIFrameRef }) => {\n    const [loading, setLoading] = useState(true);\n    const [apiLoaded, setApiLoaded] = useState(false);\n    const externalApi = useRef();\n    const apiRef = useRef();\n    const meetingRef = useRef(null);\n    const componentId = useMemo(() => generateComponentId('jitsiMeeting'), [generateComponentId]);\n    useEffect(() => {\n        fetchExternalApi(domain, release, getAppId(roomName))\n            .then((api) => {\n            externalApi.current = api;\n            setApiLoaded(true);\n        })\n            .catch((e) => console.error(e.message));\n    }, []);\n    const loadIFrame = useCallback((JitsiMeetExternalAPI) => {\n        apiRef.current = new JitsiMeetExternalAPI(domain, {\n            roomName,\n            configOverwrite,\n            interfaceConfigOverwrite,\n            jwt,\n            invitees,\n            devices,\n            userInfo,\n            release,\n            lang,\n            parentNode: meetingRef.current\n        });\n        setLoading(false);\n        if (apiRef.current) {\n            typeof onApiReady === 'function' && onApiReady(apiRef.current);\n            apiRef.current.on('readyToClose', () => {\n                typeof onReadyToClose === 'function' && onReadyToClose();\n            });\n            if (meetingRef.current && typeof getIFrameRef === 'function') {\n                getIFrameRef(meetingRef.current);\n            }\n        }\n    }, [\n        apiRef,\n        meetingRef,\n        onApiReady,\n        onReadyToClose,\n        getIFrameRef,\n        domain,\n        roomName,\n        configOverwrite,\n        interfaceConfigOverwrite,\n        jwt,\n        invitees,\n        devices,\n        userInfo,\n        release,\n        lang\n    ]);\n    useEffect(() => {\n        if (apiLoaded && !apiRef.current) {\n            if (externalApi.current) {\n                loadIFrame(externalApi.current);\n            }\n        }\n    }, [apiLoaded, loadIFrame]);\n    const renderLoadingSpinner = useCallback(() => {\n        if (!Spinner) {\n            return null;\n        }\n        if (!loading || apiRef.current) {\n            return null;\n        }\n        return _jsx(Spinner, {}, void 0);\n    }, [Spinner, apiRef.current]);\n    return (_jsxs(_Fragment, { children: [renderLoadingSpinner(), _jsx(\"div\", { id: componentId, ref: meetingRef }, componentId)] }, void 0));\n};\nexport default JitsiMeeting;\n","import { apiSlice } from \"../../app/apiSlice\";\n\nexport const VideoCallApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        extendSlotAvailable: builder.mutation({\n            query: ({ meeting_id }) => ({\n                url: \"/member/extendslotAvailable\",\n                method: \"POST\",\n                body: { meeting_id },\n            }),\n        }),\n        joinMeeting: builder.mutation({\n            query: ({ meeting_id, member_id }) => ({\n                url: \"/member/meetingJointime\",\n                method: \"POST\",\n                body: { meeting_id, member_id },\n            }),\n        }),\n        leftMeeting: builder.mutation({\n            query: ({ meeting_id, member_id }) => ({\n                url: \"/member/meetinglefttime\",\n                method: \"POST\",\n                body: { meeting_id, member_id },\n            }),\n        }),\n        updateExpertPayment: builder.mutation({\n            query: ({ meeting_id }) => ({\n                url: `/member/meeting_ended/${meeting_id}`,\n                method: \"GET\",\n            }),\n        }),\n        checkExpertRating: builder.mutation({\n            query: ({ meeting_id }) => ({\n                url: \"/specialists/specialistAlreadyRated\",\n                method: \"POST\",\n                body: { meeting_id },\n            }),\n        }),\n        expertRating: builder.mutation({\n            query: ({ meeting_id,rating,review }) => ({\n                url: \"/specialists/specialistRating\",\n                method: \"POST\",\n                body: { meeting_id,rating,review },\n            }),\n        }),\n    }),\n    overrideExisting: true,\n});\n\nexport const {\n    useExtendSlotAvailableMutation,\n    useJoinMeetingMutation,\n    useLeftMeetingMutation,\n    useUpdateExpertPaymentMutation,\n    useCheckExpertRatingMutation,\n    useExpertRatingMutation,\n} = VideoCallApiSlice;\n","import { useLocation, useNavigate } from \"react-router-dom\";\nimport { getUserData } from \"../../utils/Utils\";\nimport \"../../components/VideoLayout/VideoLayout.scss\";\nimport { JitsiMeeting } from \"@jitsi/react-sdk\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport loaderImage from \"../../assets/images/cruz/Frame.png\";\nimport { Modal, ModalBody } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExclamationTriangle, faFaceGrinStars } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"../../components/Button/Button\";\nimport { useCheckExpertRatingMutation, useUpdateExpertPaymentMutation, useExpertRatingMutation, useExtendSlotAvailableMutation, useJoinMeetingMutation, useLeftMeetingMutation } from \"./VideoCallApiSlice\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../../utils/GlobalModal\";\nimport moment from \"moment\";\nimport { useBookSpecialistMutation } from \"../../features/Specialist/SpecialistApiSlice\";\nimport Swal from \"sweetalert2\";\nimport { useSocket } from \"../../contexts/SocketContext\";\nimport StarRating from \"../../pages/StarRating\";\n\ninterface ExtendSlotDetailsinterface {\n    status: string;\n    message: string;\n    extended_end_time: string;\n    extended_start_time: string;\n    specialist_id: string;\n    specialist_member_id: string;\n    call_fee: string;\n}\n\nexport default () => {\n    const userData = getUserData('userData');\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { socket } = useSocket();\n    const [extendSlotAvailableCall] = useExtendSlotAvailableMutation();\n    const [joinMeetingCall] = useJoinMeetingMutation();\n    const [leftMeetingCAll] = useLeftMeetingMutation();\n    const [updateExpertPayment] = useUpdateExpertPaymentMutation();\n    const [checkExpertRating] = useCheckExpertRatingMutation();\n    const [expertRating] = useExpertRatingMutation();\n    const [BookSpecialist] = useBookSpecialistMutation();\n    const { showModal, hideModal } = useGlobalModalContext();\n    const [showExtendSlotModal, setShowExtendSlotModal] = useState<boolean>(false);\n    const [showNoSlotModal, setShowNoSlotModal] = useState<boolean>(false);\n    const [showPaymentModal, setShowPaymentModal] = useState<boolean>(false);\n    const [showExpertRatingModal, setShowExpertRatingModal] = useState<boolean>(false);\n    const [rating, setRating] = useState(0)\n    const [feedback, setFeedback] = useState('');\n    const [feedbackError, setFeedbackError] = useState<string>('');\n    const [feedbackCompleted, setFeedbackCompleted] = useState<boolean>(false);\n\n    const getQueryParams = () => {\n        const queryParams = new URLSearchParams(location.search);\n        const callDate = queryParams.get('call_date');\n\n        return {\n            meeting_id: queryParams.get('meeting_id') || 'demo',\n            subject: queryParams.get('subject') || 'Reach Meet',\n            call_date: callDate ? callDate : undefined,\n            duration: queryParams.get('duration') || undefined,\n            type: queryParams.get('type') || undefined,\n            is_expert: queryParams.get('is_expert') || undefined,\n        };\n    };\n\n    const postParams = location.state?.postParams ?? getQueryParams();\n    const meetingId = postParams?.meeting_id ?? Date.now();\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    const redirectAfterCall = () => {\n        if (location.state?.postParams) {\n            navigate('/profile');\n            window.location.reload();\n        } else {\n            window.close();\n        }\n    };\n\n    let callDisconnectionTimeout: any = undefined;\n    const notifyBeforeInMinutes = 10;\n    const [isMeetingStarted, setIsMeetingStarted] = useState<boolean>(false);\n    const [callDate, setCallDate] = useState<Date>();\n    const [duration, setDuration] = useState<number>();\n    const [meetingApi, setMeetingApi] = useState<any>();\n    const [extendSlotDetails, setExtendSlotDetails] = useState<ExtendSlotDetailsinterface | undefined>(undefined);\n    const [extend, setExtend] = useState<boolean>(false);\n\n    useEffect(() => {\n        setCallDate(postParams.call_date);\n        setDurationInMinutes();\n    }, []);\n\n    useEffect(() => {\n        if (!socket?.connected) return;\n\n        socket.on('meetingDuration', (data: any) => {\n            if (data.duration && data.meeting_id == meetingId) {\n                setDuration(data.duration);\n                setShowExtendSlotModal(false);\n            }\n        });\n\n        return () => {\n            socket.off('meetingDuration');\n        };\n    }, [socket, meetingId]);\n\n    const setDurationInMinutes = useCallback((addMins: number | undefined = undefined) => {\n        setDuration(duration => {\n            if (duration && addMins) {\n                return duration + addMins;\n            } else if (postParams.duration) {\n                let durationInMinutes = parseInt(postParams.duration, 10);\n                return durationInMinutes < 3 ? durationInMinutes *= 60 : durationInMinutes;\n            }\n\n            return undefined;\n        });\n    }, [postParams.duration]);\n\n    useEffect(() => {\n        if (isMeetingStarted && callDate && duration && postParams.type == 'call' && postParams.is_expert && postParams.is_expert == 0) {\n            const ukTime = new Date(callDate + \" GMT+0000\");\n            ukTime.setMinutes(ukTime.getMinutes() + (duration - notifyBeforeInMinutes));\n            let differenceInMilliseconds = ukTime.getTime() - new Date().getTime();\n            differenceInMilliseconds = differenceInMilliseconds > 0 ? differenceInMilliseconds : 0;\n            const warningTimeout = setTimeout(() => {\n                setShowExtendSlotModal(true);\n            }, differenceInMilliseconds);\n\n            return () => {\n                clearTimeout(warningTimeout);\n            };\n        }\n    }, [isMeetingStarted, callDate, duration, postParams.type, meetingApi, postParams.is_expert]);\n\n    useEffect(() => {\n        if (meetingApi && isMeetingStarted && callDate && duration && postParams.type == 'call') {\n\n            const ukTime = new Date(callDate + \" GMT+0000\");\n            ukTime.setMinutes(ukTime.getMinutes() + duration);\n            let differenceInMilliseconds = ukTime.getTime() - new Date().getTime();\n            differenceInMilliseconds = differenceInMilliseconds > 0 ? differenceInMilliseconds : 0;\n\n            callDisconnectionTimeout = setTimeout(() => {\n                meetingApi.executeCommand('endConference');\n            }, differenceInMilliseconds);\n\n            return () => {\n                clearTimeout(callDisconnectionTimeout);\n            };\n        }\n    }, [isMeetingStarted, callDate, duration, meetingApi, postParams.type]);\n\n    const handleExtendMeetingTime = async () => {\n        setShowExtendSlotModal(false);\n\n        if (meetingId) {\n            const params = {\n                meeting_id: meetingId\n            };\n\n            const response: any = await extendSlotAvailableCall(params);\n\n            if (\"error\" in response) {\n                console.error(JSON.stringify(response.error));\n                return;\n            } else {\n                const result = response.data;\n                setExtendSlotDetails(result);\n                setExtend(true)\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (showPaymentModal) {\n            showModal(MODAL_TYPES.PAYMENT_MODAL, {\n                onCloseCallback: handlePaymentSubmit,\n                handleSubmit: (stripeToken: any) => {\n                    handlePaymentSubmit(stripeToken);\n                },\n                hideInstruction: true,\n                amount: extendSlotDetails?.call_fee\n            });\n        }\n    }, [showPaymentModal]);\n\n    const handleShowPaymentFailed = () => {\n        Swal.fire({\n            title: \"Payment Failed\",\n            text: \"There was an issue processing your payment. Please try again.\",\n            icon: \"error\",\n            showConfirmButton: true,\n            confirmButtonText: \"OK\",\n            backdrop: `rgba(255, 255, 255, 0.5) left top no-repeat filter: blur(5px);`,\n            background: '#fff',\n        });\n    };\n\n    const handlePaymentSubmit = useCallback(async (stripeToken: any) => {\n        if (stripeToken === 'Error') {\n            handleShowPaymentFailed();\n            return false;\n        }\n\n\n    }, [extendSlotDetails, userData, meetingId]);\n\n    useEffect(() => {\n        if (!extendSlotDetails && extend) return;\n        extendCall()\n    }, [extendSlotDetails, extend])\n\n    const extendCall = async () => {\n        setIsLoading(true);\n        try {\n            if (extendSlotDetails) {\n                hideModal();\n                const selectedDate = moment(extendSlotDetails.extended_start_time).format(\"YYYY-MM-DD\");\n                const selectedTime = moment(extendSlotDetails.extended_start_time).format(\"HH:mm\");\n                const response = await BookSpecialist({\n                    specialist_id: extendSlotDetails.specialist_id,\n                    call_scheduled_date: selectedDate,\n                    call_scheduled_time: selectedTime,\n                    call_scheduled_timezone: \"Europe/London\",\n                    call_scheduled_reason: null,\n                    type: 'AutoBooking',\n                    timeSlot: \"30 min\",\n                    call_status: 'A',\n                    is_member: 1,\n                    currency: userData?.currency,\n                    meeting_id: meetingId,\n                    member_id: userData?.Member_id,\n                });\n\n                if (\"error\" in response) {\n                    handleShowPaymentFailed();\n                    console.error(\"Error while extending call time: \", JSON.stringify(response.error));\n                } else {\n                    const newDuration = duration ? duration + 30 : undefined;\n\n                    if (newDuration) {\n                        // updateExpertPayment({meeting_id: meetingId})\n                        setDuration(newDuration);\n                    }\n\n                    Swal.fire({\n                        title: \"Payment Done!\",\n                        text: \"Meeting time has been extended as a new slot\",\n                        icon: \"success\",\n                        timer: 5000,\n                        showConfirmButton: true,\n                        confirmButtonText: \"OK\",\n                        backdrop: `rgba(255, 255, 255, 0.5) left top no-repeat filter: blur(5px);`,\n                        background: '#fff',\n                    });\n\n                    if (newDuration) {\n                        socket?.emit('meetingDuration', {\n                            to_member_id: userData?.Member_id,\n                            meeting_id: meetingId,\n                            duration: newDuration\n                        });\n\n                        socket?.emit('meetingDuration', {\n                            to_member_id: extendSlotDetails.specialist_member_id,\n                            meeting_id: meetingId,\n                            duration: newDuration\n                        });\n                    }\n                    setExtendSlotDetails(undefined)\n                    setExtend(false);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error while extend call: \", error);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    const handleJoinMeetingCall = useCallback(async () => {\n        if (userData?.Member_id && meetingId) {\n            await joinMeetingCall({\n                meeting_id: meetingId,\n                member_id: userData.Member_id,\n            });\n        }\n    }, [meetingId, userData?.Member_id]);\n\n    const handleLeftMeetingCall = useCallback(async () => {\n        if (userData?.Member_id && meetingId) {\n            await leftMeetingCAll({\n                meeting_id: meetingId,\n                member_id: userData.Member_id,\n            });\n            // updateExpertPayment({meeting_id: meetingId})\n        }\n    }, [meetingId, userData?.Member_id]);\n\n    const handleExpertRating = async () => {\n\n        setFeedbackError('');\n\n        if (!feedback.trim()) {\n            setFeedbackError('We value your feedback! Kindly share your experience.');\n            return;\n        }\n\n        if (!rating) {\n            setFeedbackError('Please select a star rating to help us improve.');\n            return;\n        }\n\n        setFeedbackCompleted(true);\n\n        await expertRating({\n            meeting_id: meetingId,\n            rating,\n            review: feedback\n        })\n\n        setTimeout(() => {\n            redirectAfterCall();\n            handleLeftMeetingCall();\n        }, 2500);\n\n    }\n\n    const completeCall = async () => {\n\n        if (postParams.is_expert !== '1' && postParams.type == 'call') {\n            let expertRating: any = await checkExpertRating({\n                meeting_id: meetingId,\n                member_id: userData?.Member_id,\n            });\n            if (!expertRating.data.success) {\n                setShowExpertRatingModal(true);\n                return\n            }\n        }\n\n        handleLeftMeetingCall();\n        redirectAfterCall();\n    }\n\n    return (\n        <>\n            <div>\n                <JitsiMeeting\n                    domain={process.env.REACT_APP_MEETING_URL}\n                    roomName={meetingId}\n                    jwt=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZWFjaF9hcHBfaWQiLCJpc3MiOiJyZWFjaF9hcHBfaWQiLCJzdWIiOiJiZXRhMi5yZWFjaC5ib2F0cyIsInJvb20iOiIqIn0.s0yimMdQQUuUv6TBQdkwl8wlaKhq5sClj11rBO29Is0\"\n                    configOverwrite={{\n                        startWithAudioMuted: true,\n                        startWithVideoMuted: false,\n                        disableDeepLinking: true,\n                        prejoinPageEnabled: false,\n                        hideConferenceSubject: true,\n                    }}\n                    userInfo={{\n                        displayName: userData?.Member_fullname || 'Guest',\n                        email: ''\n                    }}\n                    getIFrameRef={(iframeRef) => {\n                        iframeRef.style.height = '100%';\n                        iframeRef.className = \"iframe-div\";\n\n                        const parentDiv = iframeRef.parentNode as HTMLDivElement;\n\n                        if (parentDiv) {\n                            parentDiv.classList.add('videolayout-parent');\n                        }\n                    }}\n                    onApiReady={(externalApi) => {\n                        externalApi.addListener('videoConferenceLeft', () => {\n                            completeCall();\n                        });\n\n                        externalApi.addListener(\"toolbarButtonClicked\", function (event) {\n                            if (event.key == \"hangup-menu\") {\n                                externalApi.executeCommand('hangup');\n                            }\n                        });\n\n                        externalApi.addListener('videoConferenceJoined', () => {\n                            setIsLoading(false);\n                            setIsMeetingStarted(true);\n                            setMeetingApi(externalApi);\n                            handleJoinMeetingCall();\n                        });\n\n                        if (userData?.members_profile_picture) {\n                            externalApi.executeCommand('avatarUrl', userData.members_profile_picture);\n                        }\n                    }}\n                />\n            </div>\n            {isLoading && (\n                <div className=\"page-loader\">\n                    <div className=\"page-innerLoader\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <img src={loaderImage} alt=\"Loading...\" className=\"img-fluid\" />\n                        </div>\n                    </div>\n                </div>\n            )}\n            <div>\n                <Modal isOpen={showExtendSlotModal} centered className=\"Remove-alert confirm-modal videolayout-modal\" >\n                    <ModalBody>\n                        <div className=\"confirm-box\">\n                            <div className=\"confirm-box-inner\">\n                                <div className=\"row  mx-0\">\n                                    <div className=\"row content-box-new  justify-content-center\">\n                                        <span className=\"icon-info\">\n                                            <FontAwesomeIcon icon={faExclamationTriangle} className=\"text-warning\" />\n                                        </span>\n                                        <p className=\"row justify-content-center text-center\">\n                                            Your meeting will be expired within 10 minutes.\n                                            You may have to pay additional call extension fee.\n                                            Do you want to continue the meeting?\n                                        </p>\n                                    </div>\n                                    <div className=\"row content-box-new justify-content-center\">\n                                        <div className=\"col-md-4\">\n                                            <Button\n                                                onClick={handleExtendMeetingTime}\n                                                text=\"Yes\"\n                                                icon={false}\n                                                theme=\"light\"\n                                                className=\"w-100\"\n                                            />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <Button\n                                                onClick={() => setShowExtendSlotModal(false)}\n                                                text=\"No\"\n                                                icon={false}\n                                                theme=\"dark\"\n                                                className=\"w-100\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </div>\n            <div>\n                <Modal isOpen={showNoSlotModal} toggle={() => setShowNoSlotModal(false)} centered className=\"Remove-alert confirm-modal videolayout-modal\" >\n                    <ModalBody>\n                        <div className=\"confirm-box\">\n                            <div className=\"confirm-box-inner\">\n                                <div className=\"row  mx-0\">\n                                    <div className=\"row content-box-new  justify-content-center\">\n                                        <p className=\"row justify-content-center text-center\">No slot available to extend the meeting</p>\n                                    </div>\n                                    <div className=\"row content-box-new justify-content-center\">\n                                        <div className=\"col-md-4\">\n                                            <Button\n                                                onClick={() => setShowNoSlotModal(false)}\n                                                text=\"Ok\"\n                                                icon={false}\n                                                theme=\"dark\"\n                                                className=\"w-100\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </div>\n\n            <div>\n                <Modal isOpen={showExpertRatingModal} centered className=\"Remove-alert confirm-modal videolayout-modal\" >\n                    <ModalBody>\n                        <div className=\"confirm-box\">\n                            <div className=\"confirm-box-inner\">\n                                <div className=\"row  mx-0\">\n                                    <div className=\"row content-box-new  justify-content-center\">\n                                        <span className=\"icon-info\">\n                                            <FontAwesomeIcon icon={faFaceGrinStars} className=\"text-warning\" />\n                                        </span>\n                                        <h3 className=\"row justify-content-center text-center\">\n                                            Rate your expert!\n                                        </h3>\n                                    </div>\n                                    <div className=\"row justify-content-center text-center\">\n                                        <div className=\"rating-star mb-3\">\n                                            <StarRating\n                                                onClick={(rate: number) => { setRating(rate) }}\n                                                size={30}\n                                            />\n                                        </div>\n                                        {!feedbackCompleted && (\n                                            <form>\n                                                <textarea\n                                                    rows={4}\n                                                    cols={20}\n                                                    className=\"form-control mb-3\"\n                                                    placeholder=\"Write your feedback here...\"\n                                                    value={feedback}\n                                                    onChange={(e) => setFeedback(e.target.value)} >\n                                                </textarea>\n                                            </form>\n                                        )}\n                                        {feedbackCompleted && (\n                                            <div>\n                                                <p className=\"text-warning\">{feedback}</p>\n                                                <h3 className=\"row justify-content-center text-center text-success\">\n                                                    Thank you for your feedback!\n                                                </h3>\n                                            </div>\n                                        )}\n                                        {feedbackError && (\n                                            <div>\n                                                <p className=\"text-danger\">{feedbackError}</p>\n                                            </div>\n                                        )}\n                                    </div>\n                                    {!feedbackCompleted && (\n                                        <div className=\"row content-box-new justify-content-center\">\n                                            <div className=\"col-md-4\">\n                                                <Button\n                                                    onClick={() => { redirectAfterCall(); handleLeftMeetingCall() }}\n                                                    text=\"Ask me later\"\n                                                    icon={false}\n                                                    theme=\"light\"\n                                                    className=\"w-100\"\n                                                />\n                                            </div>\n                                            <div className=\"col-md-4\">\n                                                <Button\n                                                    onClick={() => handleExpertRating()}\n                                                    text=\"Submit\"\n                                                    icon={false}\n                                                    theme=\"dark\"\n                                                    className=\"w-100\"\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </div>\n\n        </>\n    );\n};\n"],"names":["DEFAULT_DOMAIN","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","scriptPromise","fetchExternalApi","loadExternalApi","domain","release","appId","window","JitsiMeetExternalAPI","script","document","createElement","releaseParam","concat","appIdPath","async","src","onload","onerror","Error","head","appendChild","arguments","length","undefined","instancesCounter","generateComponentId","prefix","_ref","roomName","configOverwrite","interfaceConfigOverwrite","jwt","invitees","devices","userInfo","lang","spinner","Spinner","onApiReady","onReadyToClose","getIFrameRef","loading","setLoading","useState","apiLoaded","setApiLoaded","externalApi","useRef","apiRef","meetingRef","componentId","useMemo","useEffect","roomParts","split","getAppId","api","current","catch","console","error","message","loadIFrame","useCallback","parentNode","on","renderLoadingSpinner","_jsx","_jsxs","_Fragment","children","id","ref","VideoCallApiSlice","apiSlice","injectEndpoints","endpoints","builder","extendSlotAvailable","mutation","query","meeting_id","url","method","body","joinMeeting","_ref2","member_id","leftMeeting","_ref3","updateExpertPayment","_ref4","checkExpertRating","_ref5","expertRating","_ref6","rating","review","overrideExisting","useExtendSlotAvailableMutation","useJoinMeetingMutation","useLeftMeetingMutation","useUpdateExpertPaymentMutation","useCheckExpertRatingMutation","useExpertRatingMutation","_location$state$postP","_location$state","_postParams$meeting_i","userData","getUserData","location","useLocation","navigate","useNavigate","socket","useSocket","extendSlotAvailableCall","joinMeetingCall","leftMeetingCAll","BookSpecialist","useBookSpecialistMutation","showModal","hideModal","useGlobalModalContext","showExtendSlotModal","setShowExtendSlotModal","showNoSlotModal","setShowNoSlotModal","showPaymentModal","setShowPaymentModal","showExpertRatingModal","setShowExpertRatingModal","setRating","feedback","setFeedback","feedbackError","setFeedbackError","feedbackCompleted","setFeedbackCompleted","postParams","state","getQueryParams","queryParams","URLSearchParams","search","callDate","get","subject","call_date","duration","type","is_expert","meetingId","Date","now","isLoading","setIsLoading","redirectAfterCall","_location$state2","reload","close","callDisconnectionTimeout","isMeetingStarted","setIsMeetingStarted","setCallDate","setDuration","meetingApi","setMeetingApi","extendSlotDetails","setExtendSlotDetails","extend","setExtend","setDurationInMinutes","connected","data","off","addMins","durationInMinutes","parseInt","ukTime","setMinutes","getMinutes","differenceInMilliseconds","getTime","warningTimeout","setTimeout","clearTimeout","executeCommand","MODAL_TYPES","PAYMENT_MODAL","onCloseCallback","handlePaymentSubmit","handleSubmit","stripeToken","hideInstruction","amount","call_fee","handleShowPaymentFailed","Swal","title","text","icon","showConfirmButton","confirmButtonText","backdrop","background","extendCall","selectedDate","moment","extended_start_time","format","selectedTime","response","specialist_id","call_scheduled_date","call_scheduled_time","call_scheduled_timezone","call_scheduled_reason","timeSlot","call_status","is_member","currency","Member_id","JSON","stringify","newDuration","timer","emit","to_member_id","specialist_member_id","handleJoinMeetingCall","handleLeftMeetingCall","JitsiMeeting","process","startWithAudioMuted","startWithVideoMuted","disableDeepLinking","prejoinPageEnabled","hideConferenceSubject","displayName","Member_fullname","email","iframeRef","style","height","className","parentDiv","classList","add","addListener","success","completeCall","event","key","members_profile_picture","role","loaderImage","alt","Modal","isOpen","centered","ModalBody","FontAwesomeIcon","faExclamationTriangle","Button","onClick","params","theme","toggle","faFaceGrinStars","StarRating","rate","size","rows","cols","placeholder","onChange","target","trim","handleExpertRating"],"sourceRoot":""}