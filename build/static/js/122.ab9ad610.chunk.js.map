{"version":3,"file":"static/js/122.ab9ad610.chunk.js","mappings":"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","sources":["components/FullWindowImageBox/FullWindowImageBox.tsx","components/HalfWindowImageBox/HalfWindowImageBox.tsx","features/Chat/Api/ClubHouseApiSlice.tsx","pages/ClubHouse.tsx"],"sourcesContent":["import { FullWindowImageBoxProps } from '../../types';\nimport './FullWindowImageBox.scss'\n\nexport const FullWindowImageBox = (props: FullWindowImageBoxProps) => {\n    const { isVideo, source, children, className } = props;\n\n    return (\n        <div className={`container-fluid g-0 full-window-image-box ${className}`}>\n            <div className=\"row g-0\">\n                <div className=\"col-12\">\n                    {\n                        isVideo ? (\n                            <>\n                                <div className='video-box'>\n                                    <video playsInline muted autoPlay loop>\n                                        <source src={source} type=\"video/mp4\" />\n                                        Your browser does not support the video tag.\n                                    </video>\n                                </div>\n                            </>\n                        )\n                            :\n                            (\n                                <>\n                                    <div className=\"image-box\">\n                                        <img src={source} alt=\"\" />\n                                    </div>\n                                </>\n                            )\n                    }\n                    <div className='content-box'>\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import { useNavigate } from \"react-router-dom\";\nimport { HalfWindowImageBoxProps } from \"../../types\";\nimport \"./HalfWindowImageBox.scss\";\n\nexport const HalfWindowImageBox = (props: HalfWindowImageBoxProps) => {\n  const { isVideo, url, sources, children, className, navigateTo, id } = props;\n  const firstUrl = url ? url[0] : undefined;\n  const secondUrl = url ? url[1] : undefined;\n  const navigate = useNavigate();\n\n  const isNavigate = navigateTo && navigateTo;\n  const linkProps = isNavigate\n    ? { onClick: () => navigate(`/chandlery`, { state: { chandlery_id: id } }) }\n    : { href: firstUrl, target: \"_blank\" };\n  const linkPropsSecond = isNavigate\n    ? { onClick: () => navigate(`/chandlery`, { state: { chandlery_id: id } }) }\n    : { href: secondUrl, target: \"_blank\" };\n  return (\n    <div className={`container-fluid g-0 half-window-image-box ${className}`}>\n      <div className=\"row g-0\">\n        <div className=\"col-md-6\">\n          <a style={{ cursor: \"pointer\" }} {...linkProps}>\n            {\n              isVideo ? (\n                <>\n                  <div className='video-box'>\n                    <video playsInline muted autoPlay loop>\n                      <source src={sources[0]} type=\"video/mp4\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  </div>\n                </>\n              )\n                : (\n                  <div className=\"image-box\">\n                    <img src={sources[0]} alt=\"\" className=\"img-fluid\" />\n                    <div className=\"content-box\">{children[0]}</div>\n                  </div>\n                )}\n          </a>\n        </div>\n        {sources[1] && (\n          <div className=\"col-md-6\">\n            <a style={{ cursor: \"pointer\" }} {...linkPropsSecond}>\n              <div className=\"image-box\">\n                <img src={sources[1]} alt=\"\" className=\"img-fluid\" />\n                <div className=\"content-box\">{children[1]}</div>\n              </div>\n            </a>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { url } from \"inspector\";\nimport { apiSlice } from \"../../../app/apiSlice\";\n\nexport const ClubHouseApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        ClubHouse: builder.mutation({\n            query: () => ({\n                url: \"/clubHouse\",\n                method: \"GET\",\n            }),\n        }),\n    }),\n    overrideExisting: true,\n});\nexport const {\n    useClubHouseMutation,\n} = ClubHouseApiSlice","import React, { useState } from \"react\";\nimport { Hero } from \"../components/Hero/Hero\";\nimport { Button } from \"../components/Button/Button\";\nimport { Heading } from \"../components/Heading/Heading\";\nimport { HalfWindowImageBox } from \"../components/HalfWindowImageBox/HalfWindowImageBox\";\nimport { FullWindowImageBox } from \"../components/FullWindowImageBox/FullWindowImageBox\";\nimport \"../assets/scss/clubhouse.scss\";\nimport { getUserData } from \"../utils/Utils\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../utils/GlobalModal\";\nimport { useEffect } from \"react\";\nimport { useClubHouseMutation } from \"../features/Chat/Api/ClubHouseApiSlice\";\nimport { CmsHeader } from \"../components/CmsHeader/CmsHeader\";\nimport { useNavigate } from 'react-router-dom';\n\ninterface ClubHouseDetails {\n  id: string;\n  name: string;\n  details: string;\n  button: string;\n  image: string;\n}\nfunction ClubHouse() {\n  const userData = getUserData(\"userData\");\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  let memberType = \"\";\n  let token = \"\";\n  try {\n    if (userData !== null) {\n      memberType = userData.Member_type;\n      token = userData.Token;\n    } else {\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n  const { showModal } = useGlobalModalContext();\n  const memberModal = () => {\n    showModal(MODAL_TYPES.MEMBERSHIP_MODAL);\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.matchMedia('(max-width: 767px)').matches);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const [ClubHouse] = useClubHouseMutation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [details, setdetails] = useState<ClubHouseDetails[]>([]);\n  const fetchClubHouseApi = async () => {\n    setIsLoading(true);\n    try {\n      const response = await ClubHouse(token);\n      if (\"error\" in response) {\n        throw new Error(\"Failed to fetch specialist list\");\n      }\n      const data = await response.data.data;\n      const transformedData = data.map((item: {\n        id: string;\n        club_name: string;\n        club_short_desc: string;\n        club_image: string;\n        club_button_name: string;\n        club_image_mob: string;\n      }) => ({\n        id: item.id,\n        name: item.club_name,\n        details: item.club_short_desc,\n        button: item.club_button_name,\n        image: `${response.data.filePath}/${isMobile ? item.club_image_mob ? item.club_image_mob : item.club_image : item.club_image}`,\n      }));\n      setdetails(transformedData);\n    } catch (error) {\n\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!memberType) memberModal();\n    if (token) fetchClubHouseApi();\n  }, []);\n\n  const firstClubDetails = details[0];\n  const remainingClubDetails = details.slice(1);\n\n  const sanitizeText = (text: string) => text.replace(/&amp;/g, '&');\n\n  const navigate = useNavigate();\n\n  const navigateToChat = (roomId: string) => {\n    navigate(`/group-chat/${roomId}`);\n  };\n\n  return (\n    <div className=\"App clubhouse-section\">\n      <CmsHeader links={[]} />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          {firstClubDetails && (\n            <FullWindowImageBox\n              isVideo={false}\n              source={firstClubDetails.image}\n            >\n              <Heading tag=\"h2\">{firstClubDetails.name}</Heading>\n              <p className=\"text-white\">\n                {sanitizeText(firstClubDetails.details)}\n              </p>\n              <div className=\"button-group\">\n                <Button\n                  onClick={() => navigateToChat(firstClubDetails.id)}\n                  text={firstClubDetails.button}\n                  icon={true}\n                  theme=\"light\"\n                />\n              </div>\n            </FullWindowImageBox>\n          )}\n          {remainingClubDetails && remainingClubDetails.map((detail, index) => {\n            if (index % 2 === 0 && remainingClubDetails[index + 1]) {\n              return (\n                <HalfWindowImageBox\n                  key={index}\n                  className=\"clubhouse-windowSection\"\n                  sources={[\n                    remainingClubDetails[index].image,\n                    remainingClubDetails[index + 1].image,\n                  ]}\n                  children={[\n                    <div key={`${index}-child1`}>\n                      <Heading tag=\"h2\">{remainingClubDetails[index].name}</Heading>\n                      <p className=\"text-white\">{sanitizeText(remainingClubDetails[index].details)}</p>\n                      <div className=\"button-group\">\n                        <Button\n                          onClick={() => navigateToChat(remainingClubDetails[index].id)}\n                          text={remainingClubDetails[index].button}\n                          icon={true}\n                          theme=\"light\"\n                        />\n                      </div>\n                    </div>,\n                    <div key={`${index}-child2`}>\n                      <Heading tag=\"h2\">{remainingClubDetails[index + 1].name}</Heading>\n                      <p className=\"text-white\">{remainingClubDetails[index + 1].details}</p>\n                      <div className=\"button-group\">\n                        <Button\n                          onClick={() => navigateToChat(remainingClubDetails[index + 1].id)}\n                          text={remainingClubDetails[index + 1].button}\n                          icon={true}\n                          theme=\"light\"\n                        />\n                      </div>\n                    </div>,\n                  ]}\n                />\n              );\n            } else if (index % 2 === 0) {\n              // Handle the case when there is an odd number of remainingClubDetails\n              return (\n                <HalfWindowImageBox\n                  key={index}\n                  className=\"clubhouse-windowSection\"\n                  sources={[remainingClubDetails[index].image]}\n                  children={[\n                    <div key={`${index}-child1`}>\n                      <Heading tag=\"h2\">{remainingClubDetails[index].name}</Heading>\n                      <p className=\"text-white\">{sanitizeText(remainingClubDetails[index].details)}</p>\n                      <div className=\"button-group\">\n                        <Button\n                          onClick={() => navigateToChat(remainingClubDetails[index].id)}\n                          text={remainingClubDetails[index].button}\n                          icon={true}\n                          theme=\"light\"\n                        />\n                      </div>\n                    </div>,\n                  ]}\n                />\n              );\n            }\n            return null;\n          })}\n\n\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default ClubHouse;\n"],"names":["FullWindowImageBox","props","isVideo","source","children","className","_jsx","concat","_jsxs","_Fragment","playsInline","muted","autoPlay","loop","src","type","alt","HalfWindowImageBox","url","sources","navigateTo","id","firstUrl","undefined","secondUrl","navigate","useNavigate","isNavigate","linkProps","onClick","state","chandlery_id","href","target","linkPropsSecond","style","cursor","ClubHouseApiSlice","apiSlice","injectEndpoints","endpoints","builder","ClubHouse","mutation","query","method","overrideExisting","useClubHouseMutation","userData","getUserData","isMobile","setIsMobile","useState","window","innerWidth","memberType","token","Member_type","Token","error","console","showModal","useGlobalModalContext","useEffect","handleResize","matchMedia","matches","addEventListener","removeEventListener","isLoading","setIsLoading","details","setdetails","MODAL_TYPES","MEMBERSHIP_MODAL","async","response","Error","transformedData","data","map","item","name","club_name","club_short_desc","button","club_button_name","image","filePath","club_image_mob","club_image","fetchClubHouseApi","firstClubDetails","remainingClubDetails","slice","sanitizeText","text","replace","navigateToChat","roomId","CmsHeader","links","Heading","tag","Button","icon","theme","detail","index"],"sourceRoot":""}