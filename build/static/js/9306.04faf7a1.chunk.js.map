{"version":3,"file":"static/js/9306.04faf7a1.chunk.js","mappings":"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","sources":["components/FullWindowImageBox/FullWindowImageBox.tsx","features/Home/HomeApiSlice.tsx","pages/Home.tsx"],"sourcesContent":["import { FullWindowImageBoxProps } from '../../types';\nimport './FullWindowImageBox.scss'\n\nexport const FullWindowImageBox = (props: FullWindowImageBoxProps) => {\n    const { isVideo, source, children, className } = props;\n\n    return (\n        <div className={`container-fluid g-0 full-window-image-box ${className}`}>\n            <div className=\"row g-0\">\n                <div className=\"col-12\">\n                    {\n                        isVideo ? (\n                            <>\n                                <div className='video-box'>\n                                    <video playsInline muted autoPlay loop>\n                                        <source src={source} type=\"video/mp4\" />\n                                        Your browser does not support the video tag.\n                                    </video>\n                                </div>\n                            </>\n                        )\n                            :\n                            (\n                                <>\n                                    <div className=\"image-box\">\n                                        <img src={source} alt=\"\" />\n                                    </div>\n                                </>\n                            )\n                    }\n                    <div className='content-box'>\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import { apiSlice } from \"../../app/apiSlice\";\n\nexport const HomeApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n\n        HomeDetails: builder.query({\n            query: () => ({\n                url: \"/getSiteHomeDetails\",\n                method: \"GET\",\n            }),\n        }),\n    }),\n    overrideExisting: true,\n});\nexport const {\n    useHomeDetailsQuery\n} = HomeApiSlice","import { FullWindowImageBox } from \"../components/FullWindowImageBox/FullWindowImageBox\";\nimport { Button } from \"../components/Button/Button\";\nimport { Heading } from \"../components/Heading/Heading\";\nimport { faHomeAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserData } from \"../utils/Utils\";\nimport \"../assets/scss/HomePage.scss\";\nimport { MODAL_TYPES, useGlobalModalContext } from \"../utils/GlobalModal\";\nimport { useHomeDetailsQuery } from \"../features/Home/HomeApiSlice\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectHomeCms, setHomeCms } from \"../features/Home/HomeSlice\";\n\n\ninterface HomeData {\n  home_page_section_header: string;\n  home_page_section_type: string;\n  home_page_section_images: string;\n  home_page_section_details: string;\n  home_page_section_button: string;\n  home_page_section_button_link: string;\n  home_page_video: string | null;\n}\nfunction Home() {\n  const [isLoadings, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userData = getUserData(\"userData\");\n  let memberType = \"\";\n  let member_id = \"\";\n  try {\n    if (userData !== null) {\n      memberType = userData.Member_type;\n      member_id = userData.Member_id;\n    } else {\n    }\n  } catch (error) {\n    console.error(\"Error parsing user data:\", error);\n  }\n  let buttonName = 'Join';\n  if (memberType && memberType !== \"M\") {\n    buttonName = 'Upgrade Membership';\n  }\n  const { showModal } = useGlobalModalContext();\n  const memberModal = () => {\n    showModal(MODAL_TYPES.MEMBERSHIP_MODAL);\n  };\n\n  const baseUrl = process.env.REACT_APP_STORAGE_URL;\n  const { data: homeData, isLoading, isSuccess, refetch } = useHomeDetailsQuery({});\n  const [homeDetails, setHomeDetails] = useState<HomeData[]>([]);\n  const [homeVideoDetails, setHomeVideoDetails] = useState<HomeData[]>([]);\n  useEffect(() => {\n    dispatch(setHomeCms({ cms: homeData }));\n  }, [homeData]);\n  const homeCms = useSelector(selectHomeCms);\n  useEffect(() => {\n    if (homeCms) {\n      const details = homeCms.data;\n\n      // Add the first item to transformedDataWithVideo\n      const transformedDataWithVideo = details.length > 0 ? [{\n        home_page_section_header: details[0].home_page_section_header,\n        home_page_section_type: details[0].home_page_section_type,\n        home_page_section_images: details[0].home_page_section_images,\n        home_page_section_details: details[0].home_page_section_details,\n        home_page_section_button: details[0].home_page_section_button,\n        home_page_section_button_link: details[0].home_page_section_button_link,\n        home_page_video: details[0].home_page_video,\n      }] : [];\n\n      // Add all other items to transformedData\n      const transformedData = details.slice(1).map((item: {\n        home_page_section_header: string;\n        home_page_section_type: string;\n        home_page_section_images: string;\n        home_page_section_details: string;\n        home_page_section_button: string;\n        home_page_section_button_link: string;\n        home_page_video: string | null;\n      }) => ({\n        home_page_section_header: item.home_page_section_header,\n        home_page_section_type: item.home_page_section_type,\n        home_page_section_images: item.home_page_section_images,\n        home_page_section_details: item.home_page_section_details,\n        home_page_section_button: item.home_page_section_button,\n        home_page_section_button_link: item.home_page_section_button_link,\n        home_page_video: item.home_page_video,\n      }));\n\n      setHomeVideoDetails(transformedDataWithVideo);\n      setHomeDetails(transformedData);\n    }\n  }, [homeCms]);\n  useEffect(() => {\n    refetch();\n  }, [])\n\n  return (\n    <div className=\"home-content\">\n      <div className=\"row mx-0\">\n\n        {homeVideoDetails.map((videoDetails, index) => (\n          <FullWindowImageBox\n            key={`video-${index}`}\n            isVideo={true}\n            // source={'https://images.pexels.com/photos/36717/amazing-animal-beautiful-beautifull.jpg'}\n            source={`${baseUrl}/${videoDetails.home_page_video}`}\n          >\n            <Heading tag=\"h2\">\n              <div className=\"heading-parenthome\">\n                {videoDetails.home_page_section_header}\n              </div>\n            </Heading>\n            <div className=\"button-group\">\n              <Button\n                onClick={() => navigate(`/${videoDetails.home_page_section_button_link}`)}\n                text={videoDetails.home_page_section_button}\n                icon={true}\n                theme=\"light\"\n              />\n              {memberType !== \"M\" && memberType !== \"F\" ? (\n                <Button\n                  onClick={() => navigate('/joinmembership')}\n                  text={buttonName}\n                  icon={true}\n                  theme=\"dark\"\n                />\n              ) : memberType === \"F\" ? (\n                <Button\n                  onClick={() => navigate('/member-signup')}\n                  text={buttonName}\n                  icon={true}\n                  theme=\"dark\"\n                />\n              ) : \"\"}\n            </div>\n          </FullWindowImageBox>\n        ))}\n        {homeDetails.map((details, index) => {\n          let videoExist = false;\n          let sourceToShow = `${baseUrl}/${details.home_page_section_images}`;\n          if (details.home_page_video !== null) {\n            videoExist = true;\n            sourceToShow = `${baseUrl}/${details.home_page_video}`\n          }\n          let halfWidth = '';\n          if (details.home_page_section_type === 'H') {\n            halfWidth = 'col-md-6 mx-0';\n          }\n\n          return (\n            <FullWindowImageBox\n              key={`detail-${index}`}\n              isVideo={videoExist}\n              className={halfWidth}\n              source={sourceToShow}\n            >\n              <Heading tag=\"h2\">{details.home_page_section_header}</Heading>\n              <p className=\"text-white\">{details.home_page_section_details} </p>\n              <div className=\"button-group\">\n                <Button\n                  onClick={() => {\n\n\n                    navigate(`/${details.home_page_section_button_link}`)\n                  }}\n                  text={details.home_page_section_button}\n                  icon={true}\n                  theme=\"light\"\n                />\n              </div>\n            </FullWindowImageBox>\n          );\n\n\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"names":["FullWindowImageBox","props","isVideo","source","children","className","_jsx","concat","_jsxs","_Fragment","playsInline","muted","autoPlay","loop","src","type","alt","HomeApiSlice","apiSlice","injectEndpoints","endpoints","builder","HomeDetails","query","url","method","overrideExisting","useHomeDetailsQuery","isLoadings","setIsLoading","useState","navigate","useNavigate","dispatch","useDispatch","userData","getUserData","memberType","member_id","Member_type","Member_id","error","console","buttonName","showModal","useGlobalModalContext","baseUrl","process","data","homeData","isLoading","isSuccess","refetch","homeDetails","setHomeDetails","homeVideoDetails","setHomeVideoDetails","useEffect","setHomeCms","cms","homeCms","useSelector","selectHomeCms","details","transformedDataWithVideo","length","home_page_section_header","home_page_section_type","home_page_section_images","home_page_section_details","home_page_section_button","home_page_section_button_link","home_page_video","transformedData","slice","map","item","videoDetails","index","Heading","tag","Button","onClick","text","icon","theme","videoExist","sourceToShow","halfWidth"],"sourceRoot":""}