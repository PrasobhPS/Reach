{"version":3,"file":"static/js/4590.8760dd48.chunk.js","mappings":"8PASO,MAAMA,EAAwBA,KACjC,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,IAAqBC,EAAAA,EAAAA,OACrBC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GACvCG,GAAWC,EAAAA,EAAAA,OACX,MAAEC,EAAQ,GAAE,KAAEC,EAAO,IAAOH,EAASI,OAAS,CAAC,GAErDC,EAAAA,EAAAA,YAAU,KAEN,MAAMC,EAAQC,YAAW,KACrBR,GAAc,EAAK,GACpB,KAEH,MAAO,IAAMS,aAAaF,EAAM,GACjC,IAyBH,OACIG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKhB,GACGc,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,UAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAiBC,KAAK,SAAQF,UACzCF,EAAAA,EAAAA,KAAA,OAAKK,IAAKC,EAAQ,OAAuCC,IAAI,GAAGJ,UAAU,qBAKtFH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBD,UACjCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAChBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBD,UAChCM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,qBAAoBD,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC5BF,EAAAA,EAAAA,KAACS,EAAAA,EAAe,CAACC,KAAMC,EAAAA,SAE3BH,EAAAA,EAAAA,MAAA,OAAKL,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6BACJF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBM,EAAAA,EAAAA,MAAA,QAAAN,SAAA,CAAM,MACER,EAAK,wJAIhBL,IACGW,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBM,EAAAA,EAAAA,MAAA,KAAGL,UAAU,SAAQD,SAAA,CAAC,uBAElBF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,YAAYS,QAtDvDC,UACjB1B,GAAa,GAEb,MAAM2B,EAAY,CAAErB,SACdsB,QAAiB/B,EAAkB8B,GACzC3B,GAAa,GAET,UAAW4B,IACXC,IAAAA,KAAU,CACNC,MAAO,oBACPP,KAAM,UACNb,MAAO,IACPqB,mBAAmB,EACnBC,SAAS,iEACTC,WAAY,SAGhBtB,YAAW,KACPhB,EAAS,IAAI,GACd,KACP,EAkC8FoB,SAAC,uCAW5F,EAIX,G","sources":["features/MemberSignup/EmailVerificationSend.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Emailverification.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelopeOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"../../components/Button/Button\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useResendEmailVerifyMutation } from \"../Login/authApiSlice\";\nimport Swal from \"sweetalert2\";\n\nexport const EmailVerificationSend = () => {\n    const navigate = useNavigate();\n    const [resendEmailVerify] = useResendEmailVerifyMutation();\n    const [isLoading, setIsLoading] = useState(false);\n    const [showResend, setShowResend] = useState(false);\n    const location = useLocation();\n    const { email = '', name = '' } = location.state || {};\n\n    useEffect(() => {\n        // Show \"Send it again\" after 5 seconds\n        const timer = setTimeout(() => {\n            setShowResend(true);\n        }, 5000);\n\n        return () => clearTimeout(timer);\n    }, []);\n\n    const handleSubmit = async () => {\n        setIsLoading(true);\n\n        const checkData = { email };\n        const userData = await resendEmailVerify(checkData);\n        setIsLoading(false);\n\n        if (\"error\" in userData) {\n            Swal.fire({\n                title: \"Already Verified!\",\n                icon: \"warning\",\n                timer: 3000,\n                showConfirmButton: false,\n                backdrop: `rgba(255, 255, 255, 0.5) left top no-repeat filter: blur(5px);`,\n                background: '#fff',\n            });\n\n            setTimeout(() => {\n                navigate(\"/\");\n            }, 3000);\n        }\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <div className=\"page-loader\">\n                    <div className=\"page-innerLoader\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <img src={require(\"../../assets/images/cruz/Frame.png\")} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"EmailVerified-parent\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 col-sm-12\">\n                                <div className=\"Email-verifiedPage\">\n                                    <div className=\"message-iconbox\">\n                                        <FontAwesomeIcon icon={faEnvelopeOpen} />\n                                    </div>\n                                    <div className=\"text-content\">\n                                        <h1>Check Your Inbox Please</h1>\n                                        <div className=\"content-para\">\n                                            <span>\n                                                Hi {name}, to start using Reach, we need to verify your email.\n                                                We've already sent out the verification link. Please check it and confirm it's really you.\n                                            </span>\n                                        </div>\n                                        {showResend && (\n                                            <div className=\"dont-get\">\n                                                <a className=\"resend\">\n                                                    Don't get an email?\n                                                    <span className=\"text-pink\" onClick={handleSubmit}> Send it again</span>\n                                                </a>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default EmailVerificationSend;\n"],"names":["EmailVerificationSend","navigate","useNavigate","resendEmailVerify","useResendEmailVerifyMutation","isLoading","setIsLoading","useState","showResend","setShowResend","location","useLocation","email","name","state","useEffect","timer","setTimeout","clearTimeout","_jsx","_Fragment","children","className","role","src","require","alt","_jsxs","FontAwesomeIcon","icon","faEnvelopeOpen","onClick","async","checkData","userData","Swal","title","showConfirmButton","backdrop","background"],"sourceRoot":""}