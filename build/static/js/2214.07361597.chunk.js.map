{"version":3,"file":"static/js/2214.07361597.chunk.js","mappings":"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","sources":["components/WeatherComponent.tsx","pages/Weather.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"../assets/scss/weather.scss\";\nimport { useLocation } from \"react-router-dom\";\n\ninterface Location {\n  lat: number | null;\n  lng: number | null;\n}\n\n// Extend the Window interface to include windyInit\ndeclare global {\n  interface Window {\n    windyInit: (options: any, callback: (windyAPI: any) => void) => void;\n  }\n}\n\nconst WeatherComponent: React.FC = () => {\n  const [isAnnouncementAbsent, setIsAnnouncementAbsent] = useState(false);\n  const [location, setLocation] = useState<Location>({ lat: null, lng: null });\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [scriptLoaded, setScriptLoaded] = useState<boolean>(false);\n  const [mapInstance, setMapInstance] = useState<any>(null);\n  const [marker, setMarker] = useState<any>(null);\n  const [time, setTime] = useState<string>(\"\");\n  const fallbackToIPLocation = async () => {\n    try {\n      const response = await fetch(\"https://ipapi.co/json/\"); // Replace with your preferred geolocation API\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch IP location.\");\n      }\n      const data = await response.json();\n      const { latitude, longitude } = data;\n      setLocation({ lat: latitude, lng: longitude });\n      initializeMap(latitude, longitude); // Initialize map with fallback location\n    } catch (error) {\n      console.error(\"Fallback failed:\", error);\n      setErrorMessage(\n        \"Unable to retrieve location. Please check your connection.\"\n      );\n    }\n  };\n\n  const initializeMap = (lat: number, lng: number) => {\n    const options = {\n      key: \"Emv4UOlkc3c1xZammChgPejw9Na4szAv\",\n      lat: lat,\n      lon: lng,\n      zoom: 6,\n      verbose: true,\n    };\n\n    window.windyInit(options, (windyAPI: any) => {\n      const { map, picker, utils, store, broadcast } = windyAPI;\n\n      map.setView([lat, lng], 7);\n      setMapInstance(map);\n\n      // Ensure the time slider (progress bar) is displayed\n      store.set(\"timestamp\", Date.now() / 1000); // Current time\n      store.set(\"product\", \"ecmwf\"); // Ensure a forecast model is selected\n\n      // Listen for time changes\n      store.on(\"timestamp\", (timestamp: number) => {\n        setTime(new Date(timestamp * 1000).toLocaleTimeString());\n      });\n\n      // Open picker on map click\n      map.on(\n        \"click\",\n        async (event: { latlng: { lat: number; lng: number } }) => {\n          const { lat, lng } = event.latlng;\n          picker.open({ lat, lon: lng });\n\n          picker.on(\n            \"pickerOpened\",\n            ({\n              lat,\n              lng,\n              values,\n            }: {\n              lat: number;\n              lng: number;\n              values: any;\n            }) => {\n              const windObject = utils.wind2obj(values);\n            }\n          );\n        }\n      );\n\n      // Ensure the timeline slider updates\n      broadcast.on(\"timestamp\", (timestamp: number) => {\n\n        setTime(new Date(timestamp * 1000).toLocaleTimeString());\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (!scriptLoaded) {\n\n      // Load Windy API script\n      const windyScript = document.createElement(\"script\");\n      windyScript.src = `https://api.windy.com/assets/map-forecast/libBoot.js`;\n      windyScript.async = true;\n      windyScript.onload = () => {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const userLat = position.coords.latitude;\n            const userLon = position.coords.longitude;\n            setLocation({ lat: userLat, lng: userLon });\n            initializeMap(userLat, userLon);\n          },\n          (error) => {\n            console.error(\n              \"Geolocation error:\",\n              error.message || \"No message provided.\"\n            );\n            switch (error.code) {\n              case error.PERMISSION_DENIED:\n                setErrorMessage(\"Location access denied by the user.\");\n                break;\n              case error.POSITION_UNAVAILABLE:\n                setErrorMessage(\n                  \"Location information is unavailable. Using fallback...\"\n                );\n                break;\n              case error.TIMEOUT:\n                setErrorMessage(\n                  \"The request to get user location timed out. Using fallback...\"\n                );\n                break;\n              default:\n                setErrorMessage(\"An unknown error occurred. Using fallback...\");\n            }\n            fallbackToIPLocation();\n          },\n          {\n            enableHighAccuracy: true,\n            timeout: 20000, // 20 seconds\n            maximumAge: 0, // No cached location\n          }\n        );\n        setScriptLoaded(true);\n      };\n\n      windyScript.onerror = () => {\n        setErrorMessage(\"Failed to load Windy API\");\n      };\n\n      // Append the script to the document head\n      document.head.appendChild(windyScript);\n    }\n  }, [scriptLoaded]);\n  const locations = useLocation();\n\n  useEffect(() => {\n    if (locations.pathname === \"/weather\") {\n      document.body.classList.add(\"weatherbody\");\n    } else {\n      document.body.classList.remove(\"weatherbody\");\n    }\n    return () => {\n      document.body.classList.remove(\"weatherbody\");\n    };\n  }, [locations.pathname]);\n  return (\n    <div\n      className={`weatherparent ${isAnnouncementAbsent ? \"weather-class\" : \"\"}`}\n    >\n      <div className=\"container-fluid\">\n        {/* {errorMessage && <p className=\"error-message\">{errorMessage}</p>} */}\n        <div\n          id=\"windy\"\n          className=\"weather-section\"\n          style={{ width: \"100%\", height: \"100%\" }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherComponent;\n","import React from \"react\";\nimport WeatherComponent from \"../components/WeatherComponent\";\n\nconst Weather: React.FC = () => {\n  return (\n    <div>\n      <WeatherComponent />\n    </div>\n  );\n};\n\nexport default Weather;\n"],"names":["WeatherComponent","isAnnouncementAbsent","setIsAnnouncementAbsent","useState","location","setLocation","lat","lng","errorMessage","setErrorMessage","scriptLoaded","setScriptLoaded","mapInstance","setMapInstance","marker","setMarker","time","setTime","initializeMap","options","key","lon","zoom","verbose","window","windyInit","windyAPI","map","picker","utils","store","broadcast","setView","set","Date","now","on","timestamp","toLocaleTimeString","async","event","latlng","open","_ref","values","wind2obj","useEffect","windyScript","document","createElement","src","onload","navigator","geolocation","getCurrentPosition","position","userLat","coords","latitude","userLon","longitude","error","console","message","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","response","fetch","ok","Error","data","json","fallbackToIPLocation","enableHighAccuracy","timeout","maximumAge","onerror","head","appendChild","locations","useLocation","pathname","body","classList","add","remove","_jsx","className","concat","children","id","style","width","height","Weather"],"sourceRoot":""}