{"version":3,"file":"static/js/6862.ff021f4b.chunk.js","mappings":"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","sources":["components/CustomSelect/CustomSelect.tsx","components/FullWindowImageBox/FullWindowImageBox.tsx","features/MemberSignup/MemberShipCard.tsx","features/MemberSignup/PayementCard.tsx","features/MemberSignup/MemberSignForm.tsx","features/MemberSignup/MemberSignup.tsx","types/ProfileData.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CustomSelectProps } from '../../types';\nimport './CustomSelect.scss';\nimport { useFormContext, useFormState } from 'react-hook-form';\n\nconst CustomSelect: React.FC<CustomSelectProps> = ({ name, options, registerConfig, placeholder, handleChange }) => {\n  const { register } = useFormContext();\n  const { errors } = useFormState();\n  const error = errors[name]?.message;\n  const [selectName, setSelectName] = useState<string>('Select');\n  useEffect(() => {\n    if (placeholder) {\n      setSelectName(placeholder);\n    }\n  }, [placeholder])\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = event.target.value;\n    if (handleChange)\n      handleChange(selectedValue);\n\n  };\n\n  return (\n    <div className={`form-group custom-select ${error ? 'has-error' : ''}`}>\n      <select className='form-control' {...register(name, registerConfig)} defaultValue=\"\" onChange={handleSelectChange}>\n        <option value=\"\" disabled>{selectName}</option>\n        {options.map(option => (\n          <option key={option.value} value={option.value}>{option.label}</option>\n        ))}\n      </select>\n      {error && <span className='error'>{`${error}`}</span>}\n    </div>\n  );\n};\n\nexport default CustomSelect;\n","import { FullWindowImageBoxProps } from '../../types';\nimport './FullWindowImageBox.scss'\n\nexport const FullWindowImageBox = (props: FullWindowImageBoxProps) => {\n    const { isVideo, source, children, className } = props;\n\n    return (\n        <div className={`container-fluid g-0 full-window-image-box ${className}`}>\n            <div className=\"row g-0\">\n                <div className=\"col-12\">\n                    {\n                        isVideo ? (\n                            <>\n                                <div className='video-box'>\n                                    <video playsInline muted autoPlay loop>\n                                        <source src={source} type=\"video/mp4\" />\n                                        Your browser does not support the video tag.\n                                    </video>\n                                </div>\n                            </>\n                        )\n                            :\n                            (\n                                <>\n                                    <div className=\"image-box\">\n                                        <img src={source} alt=\"\" />\n                                    </div>\n                                </>\n                            )\n                    }\n                    <div className='content-box'>\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../components/Button/Button\";\nimport \"./MembershipSetup.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MemebershipProps } from \"../../types\";\nimport {\n  useReferralDiscountMutation,\n  useMembershipFeeQuery,\n  useJoinReachQuery,\n} from \"../Login/authApiSlice\";\n\ntype Currency = \"USD\" | \"GBP\" | \"EUR\";\ninterface MembershipFees {\n  full_membership_fee: string;\n  monthly_membership_fee: string;\n  referal_percentage: string;\n}\nexport const MemberShipCard: React.FC<MemebershipProps> = ({\n  referral_code,\n  heading,\n  plusNote,\n  membershipFee,\n  yearlyFee,\n  type,\n  showButton,\n  offerPrice,\n  currency,\n  setPaymentFee,\n  setCardCurrency,\n}) => {\n  const navigate = useNavigate();\n  const [referralDiscount] = useReferralDiscountMutation();\n  const { data, error, isLoading, isSuccess } = useMembershipFeeQuery({});\n  const [currencySelected, setCurrency] = useState<Currency>(currency || \"GBP\");\n  const [fees, setFees] = useState({\n    fee: membershipFee,\n    yearly: yearlyFee,\n  });\n  const currencySymbols: { [key: string]: string } = {\n    USD: \"$\",\n    EUR: \"€\",\n    GBP: \"£\",\n  };\n  const [updatedOfferPrice, setUpdatedOfferPrice] = useState<\n    MembershipFees | null | undefined\n  >(null);\n\n  useEffect(() => {\n    setUpdatedOfferPrice(offerPrice);\n  }, [offerPrice]);\n  useEffect(() => {\n    if (isSuccess && data) {\n      const feeArr: Record<Currency, { fee: any; monthly: any }> = {\n        USD: {\n          fee: data.data.full_membership_fee_dollar,\n          monthly: data.data.monthly_membership_fee_dollar,\n        },\n        GBP: {\n          fee: data.data.full_membership_fee,\n          monthly: data.data.monthly_membership_fee,\n        },\n        EUR: {\n          fee: data.data.full_membership_fee_euro,\n          monthly: data.data.monthly_membership_fee_euro,\n        },\n      };\n\n      const defaultFees = {\n        fee: feeArr[currencySelected].monthly,\n        yearly: feeArr[currencySelected].fee,\n      };\n\n      setFees(defaultFees);\n\n      // Ensure setPaymentFee is called with default values\n      if (setPaymentFee) {\n        setPaymentFee({\n          currency: currencySelected,\n          fee: defaultFees.fee,\n          yearly: defaultFees.yearly,\n        });\n      }\n    }\n  }, [isSuccess, data, currencySelected]);\n\n\n  useEffect(() => {\n    const fetchReferralDiscount = async () => {\n      if (referral_code) {\n        try {\n          const formData = {\n            referral_code: referral_code,\n            currency: currencySelected,\n          };\n          const responseOther = await referralDiscount(formData).unwrap();\n          if (responseOther.success) {\n            setUpdatedOfferPrice(responseOther.data);\n\n            if (setPaymentFee) {\n              setPaymentFee({\n                currency: currencySelected,\n                fee: responseOther.data.monthly_membership_fee,\n                yearly: responseOther.data.full_membership_fee,\n              });\n            }\n\n          }\n        } catch (error) {\n          //console.log(error, \"ERROR RESPONSE\");\n        }\n      }\n    };\n\n    // Call the async function\n    fetchReferralDiscount();\n  }, [referral_code, currencySelected]);\n\n  const handleCurrencyChange = async (\n    e: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    const selectedCurrency = e.target.value as Currency; // Cast to Currency type\n    setCurrency(selectedCurrency);\n    if (setCardCurrency) {\n      setCardCurrency(selectedCurrency);\n    }\n    if (data) {\n      const feeArr: Record<Currency, { fee: any; monthly: any }> = {\n        USD: {\n          fee: data.data.full_membership_fee_dollar,\n          monthly: data.data.monthly_membership_fee_dollar,\n        },\n        GBP: {\n          fee: data.data.full_membership_fee,\n          monthly: data.data.monthly_membership_fee,\n        },\n        EUR: {\n          fee: data.data.full_membership_fee_euro,\n          monthly: data.data.monthly_membership_fee_euro,\n        },\n      };\n\n      setFees({\n        fee: feeArr[selectedCurrency].monthly,\n        yearly: feeArr[selectedCurrency].fee,\n      });\n      if (setPaymentFee) {\n        setPaymentFee({\n          currency: selectedCurrency,\n          fee: feeArr[selectedCurrency].monthly,\n          yearly: feeArr[selectedCurrency].fee,\n        });\n      }\n      if (referral_code) {\n        try {\n          const formData = {\n            referral_code: referral_code,\n            currency: selectedCurrency,\n          };\n          const responseOther = await referralDiscount(formData).unwrap();\n          if (responseOther.success) {\n            setUpdatedOfferPrice(responseOther.data);\n          }\n        } catch (error) {\n          //console.log(error, \"ERROR RESPONSE\");\n        }\n      }\n    }\n  };\n\n  const [freeFeatures, setFreeFeatures] = useState(\"\");\n  const [fullFeatures, setFullFeatures] = useState(\"\");\n  const [freeheading, setFreeHeading] = useState(\"\");\n  const [fullheading, setFullHeading] = useState(\"\");\n  const {\n    data: joinReachDetails,\n    isLoading: joinReachLoading,\n    isSuccess: joinReachSuccess,\n  } = useJoinReachQuery({});\n  useEffect(() => {\n    if (joinReachSuccess && joinReachDetails?.data) {\n      const featureData = joinReachDetails.data;\n      setFreeFeatures(featureData[0]?.membership_description || \"\");\n      setFreeHeading(featureData[0]?.membership_title || \"\");\n      setFullFeatures(featureData[1]?.membership_description || \"\");\n      setFullHeading(featureData[1]?.membership_title || \"\");\n    } else {\n      console.warn(\"joinReachDetails or data is missing\");\n    }\n  }, [joinReachDetails, joinReachSuccess]);\n\n  const getCookie = (name: string) => {\n    const cookies = document.cookie.split(\"; \");\n    const cookie = cookies.find((row) => row.startsWith(`${name}=`));\n    return cookie ? cookie.split(\"=\")[1] : null;\n  };\n  const [hasCookies, setHasCookies] = useState(false);\n  useEffect(() => {\n    const cookieValue = getCookie(\"CookieConsent\");\n    setHasCookies(!!cookieValue); // Convert to boolean\n  }, [document.cookie]);\n\n  const handleClick = () => {\n    //if (hasCookies) {\n    if (type === \"Free\") {\n      navigate(`/freemembership`, {\n        state: { referral_code },\n      });\n    }\n    if (type === \"Full\") {\n      navigate(`/member-signup`, {\n        state: {\n          referral_code: referral_code,\n          selectedCurrency: currencySelected,\n        },\n      });\n    }\n    // }\n  };\n  return (\n    <div\n      className={`Membership-cardtheme ${type === \"Free\" ? \"full-membershipcard\" : \"free-membershipcard\"\n        }`}\n    >\n      <div className=\"card-themeheader\"></div>\n      <div className=\"card-content\">\n        <div className=\"card-heading\">\n          {type === \"Free\" ? (\n            <h3 className=\"customHeading\">{freeheading}</h3>\n          ) : (\n            <h3 className=\"customHeading\">{fullheading}</h3>\n          )}\n        </div>\n        <div className=\"card-body\">\n          {type === \"Free\" ? (\n            <div\n              className=\"text-white text-custom\"\n              dangerouslySetInnerHTML={{ __html: freeFeatures }}\n            />\n          ) : (\n            <div\n              className=\"text-white text-custom\"\n              dangerouslySetInnerHTML={{ __html: fullFeatures }}\n            />\n          )}\n\n          <div className=\"amount-details\">\n            {type === \"Free\" ? (\n              <div className=\"free-membership\">\n                <h4 className=\"customHeading\">FREE</h4>\n              </div>\n            ) : (\n              <>\n                <div className=\"fullmembership-content\">\n                  {updatedOfferPrice?.full_membership_fee ? (\n                    <>\n                      <h4 className=\"customHeading discountAmnt strike-through\">\n                        <select\n                          className=\"form-select\"\n                          value={currencySelected}\n                          onChange={handleCurrencyChange}\n                        >\n                          <option value=\"GBP\">£</option>\n                          <option value=\"EUR\">€</option>\n                          <option value=\"USD\">$</option>\n                        </select>\n                        {fees.yearly} pa{\" \"}\n                        <span>\n                          ({currencySymbols[currencySelected]}\n                          {fees.fee} pcm)\n                        </span>\n                      </h4>\n                      <h4 className=\"customHeading\">\n                        {currencySymbols[currencySelected]}\n                        {updatedOfferPrice?.full_membership_fee} pa{\" \"}\n                        <span>\n                          ({currencySymbols[currencySelected]}\n                          {updatedOfferPrice?.monthly_membership_fee} pcm)\n                        </span>\n                      </h4>\n                    </>\n                  ) : (\n                    <h4 className=\"customHeading discountAmnt\">\n                      <select\n                        className=\"form-select\"\n                        value={currencySelected}\n                        onChange={handleCurrencyChange}\n                      >\n                        <option value=\"GBP\">£</option>\n                        <option value=\"EUR\">€</option>\n                        <option value=\"USD\">$</option>\n                      </select>\n                      {fees.yearly} pa{\" \"}\n                      <span>\n                        ({currencySymbols[currencySelected]}\n                        {fees.fee} pcm)\n                      </span>\n                    </h4>\n                  )}\n                </div>\n                <div className=\"cancel-time\">\n                  <span>Cancel any time</span>\n                </div>\n              </>\n            )}\n          </div>\n\n          {showButton && (\n            <div className=\"btn-groups\">\n              <Button\n                onClick={handleClick}\n                text=\"Join Now\"\n                icon={true}\n                theme=\"light\"\n                className=\"w-100\"\n              />\n            </div>\n          )}\n          {type === \"Full\" && !showButton && (\n            <div className=\"payment-details\">\n              <p>Secure Payments powered by Stripe</p>\n              <div className=\"payment-card\">\n                <img\n                  src={require(\"../../assets/images/membersignup/payments.png\")}\n                  alt=\"Payment methods\"\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MemberShipCard;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Membersignup.scss\";\nimport { loadStripe, Token } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { CheckoutForm } from \"../../components/PaymentModal/CheckoutForm\";\n\ninterface PaymentCardProps {\n  stripeTokenHandler: (token: string) => void;\n  currency: string;\n  amount: number;\n  country: string;\n  isValid?: boolean;\n\n}\nconst stripe_key = process.env.REACT_APP_STRIPE_PUBLIC_KEY;\nconst stripePromise = loadStripe(`${stripe_key}`);\nexport const PaymentCard: React.FC<PaymentCardProps> = ({\n  stripeTokenHandler,\n  currency,\n  amount,\n  country,\n  isValid\n}) => {\n  const [isTokenGenerated, setIsTokenGenerated] = useState(false);\n\n  const handleTokenGenerated = () => {\n    setIsTokenGenerated(true);\n  };\n\n  return (\n    <div className=\"payment-formcard\">\n      <Elements stripe={stripePromise}>\n        <CheckoutForm\n          stripeTokenHandler={stripeTokenHandler}\n          onTokenGenerated={handleTokenGenerated}\n          currency={currency}\n          amount={amount}\n          country={country}\n          isValid={isValid}\n        />\n      </Elements>\n    </div>\n  );\n};\n\nexport default PaymentCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Membersignup.scss\";\nimport { FormProvider, set, useForm } from \"react-hook-form\";\nimport { Button } from \"../../components/Button/Button\";\nimport { Heading } from \"../../components/Heading/Heading\";\nimport { SignupInterface, initialSignupInterface } from \"../../types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  useMemberSignupMutation,\n  useMemberUpdateMutation,\n  useRegisterMutation,\n  useValidateReferralCodeMutation,\n  useReferralDiscountMutation,\n  useEmailExistMutation,\n  useIosloginMutation,\n} from \"../Login/authApiSlice\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CountryPicker from \"../../components/CountryPicker/CountryPicker\";\nimport { TelephoneField } from \"../../components/TelephoneField/TelephoneField\";\nimport { DobPicker } from \"../../components/DobPicker/DobPicker\";\nimport { getUserData, setUserData } from \"../../utils/Utils\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useProfileMutation } from \"../Profile/profileApiSlice\";\nimport { ProfileData, initialProfileData } from \"../../types/ProfileData\";\nimport { FullWindowImageBox } from \"../../components/FullWindowImageBox/FullWindowImageBox\";\nimport { FetchBaseQueryError } from \"@reduxjs/toolkit/query/react\";\nimport MemberShipCard from \"./MemberShipCard\";\nimport CustomSelect from \"../../components/CustomSelect/CustomSelect\";\nimport PaymentCard from \"./PayementCard\";\nimport Swal from \"sweetalert2\";\n\ninterface LocalData {\n  members_profile_picture: string;\n  Member_fullname: string;\n  Member_type: string;\n  Token: string;\n  Member_id: string;\n  IsEmployer: string;\n  IsEmployee: string;\n  is_specialist: string;\n  currency?: string;\n}\ninterface paymentFee {\n  currency: string\n  fee: string;\n  yearly: string;\n}\ninterface MemberSignFormProps {\n  setFunction: (code: MembershipFees | null) => void;\n  setRefferal: (code: string) => void;\n  currency?: \"USD\" | \"GBP\" | \"EUR\";\n  ios_token?: string;\n  paymentFee?: paymentFee;\n  monthlyFee: number;\n  yearlyFee: number;\n}\ninterface MembershipFees {\n  full_membership_fee: string;\n  monthly_membership_fee: string;\n  referal_percentage: string;\n}\nexport const MemberSignForm = ({ setFunction, setRefferal, currency, ios_token, paymentFee, monthlyFee, yearlyFee }: MemberSignFormProps) => {\n\n  const currencySymbols: { [key: string]: string } = {\n    USD: \"$\",\n    EUR: \"€\",\n    GBP: \"£\",\n  };\n\n  const navigate = useNavigate();\n  const [signupMutation, { isLoading }] = useMemberSignupMutation();\n  const [updateMutation] = useMemberUpdateMutation();\n  const [registerMutation, { isLoading: registerLoading }] =\n    useRegisterMutation();\n  const [profileMutation] = useProfileMutation();\n  const [validateReferral] = useValidateReferralCodeMutation();\n  const [referralDiscount] = useReferralDiscountMutation();\n  const location = useLocation();\n  const [profileData, setProfileData] =\n    useState<ProfileData>(initialProfileData);\n  const form = useForm<SignupInterface>();\n  const [stripeToken, setStripeToken] = useState<string>(\"\");\n  const [stripeError, setStripeError] = useState<boolean>(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFocus, setIsCpasswordFocused] = useState(false);\n  const [disable, setDisable] = useState<boolean>(false);\n  const [acceptTerms, setAcceptTerms] = useState<boolean>(false);\n  const appLink = process.env.REACT_APP_LINK_URL;\n  const fallbackUrl = process.env.REACT_APP_FALLBACK_URL;\n\n  const [iosLoginCalled, setIosLoginCalled] = useState(false);\n  const [userToken, setUserToken] = useState<string>(\"\");\n  const [ios_login] = useIosloginMutation();\n\n  let token = \"\";\n  let memberType = \"\";\n\n  useEffect(() => {\n    const updateData = async () => {\n      if (!ios_token || iosLoginCalled) return; // Skip if token is missing or already called\n\n      try {\n        setIosLoginCalled(true); // Set the flag before calling to prevent duplicate calls\n        const formData = { ios_token };\n        const response = await ios_login(formData).unwrap();\n\n        if (\"error\" in response) {\n          console.error(\"Error logging in:\", response.error);\n        } else {\n          setUserData(response.userData);\n          reset(response.data);\n          setProfileData(response.data);\n        }\n      } catch (error) {\n        console.error(\"An error occurred during iOS login:\", error);\n      }\n    };\n\n    updateData();\n  }, [ios_token, ios_login, iosLoginCalled]);\n\n  const {\n    referral_code = \"\",\n    email = \"\",\n    memberName = \"\",\n    googleToken = \"\",\n    phoneNumber = \"\",\n    googleAccessToken = \"\",\n  } = location.state || {};\n  const [firstName = \"\", lastName = \"\"] = memberName\n    ? memberName.split(\" \")\n    : [\"\", \"\"];\n  const { register, control, handleSubmit, formState, reset, watch } = form;\n  const { errors, isValid } = formState;\n  const [errorMessage, setErrorMsg] = useState(\"\");\n  const [isSetLoading, setIsSetLoading] = useState(false);\n  const localData: LocalData | null = getUserData(\"userData\");\n  const [profileReferral, setProfileReferral] = useState<string>(referral_code);\n  const [disableReferral, setDisableReferral] = useState<boolean>(false);\n  const [iosPaymentToken, setIosPaymentToken] = useState<string>(\"\");\n\n  if (localData != null) {\n    token = localData.Token;\n    memberType = localData.Member_type;\n  }\n  useEffect(() => {\n    if (memberType === \"M\") navigate(\"/\");\n    if (token || !email) {\n      setValidate(true);\n      if (token) {\n        fetchData();\n      }\n\n      if (email) {\n        setDisable(true);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if ((email || referral_code) && !token) {\n      setSaveButton(\"Register\");\n      if (!email) {\n        setValidate(true);\n      }\n\n      let details = {\n        ...initialProfileData,\n        referral_code: referral_code,\n        google_token: googleAccessToken,\n        members_email: email,\n        members_fname: firstName,\n        members_lname: lastName,\n      };\n      reset(details);\n      setProfileData(details);\n    }\n    if (email || token) {\n      setDisable(true);\n    }\n  }, [email]);\n\n  const fetchData = async () => {\n    try {\n      const response = await profileMutation(token);\n      if (\"error\" in response) {\n      } else {\n        reset(response.data.data);\n        setProfileData(response.data.data);\n        setProfileReferral(response.data.data.referral_code);\n        handleCountryChange(response.data.data.members_country);\n      }\n    } catch (error) { }\n  };\n  // let originalDate = \"0000-00-00\";\n  // if (profileData.members_dob) originalDate = profileData.members_dob;\n  // const [year, month, day] = originalDate.split(\"-\").map((value) => {\n  //   const parsedValue = parseInt(value, 10);\n  //   return parsedValue < 10 ? parsedValue.toString() : parsedValue;\n  // }) as [number, number, number];\n\n  const onSubmit = async (data: SignupInterface) => {\n    // data.members_region = \"\";\n    data.currency = currency;\n    data.members_phone_code = data.phone_code;\n    // data.members_region = \"\";\n    if (stripeError) {\n      setErrorMsg(\"Please complete the payment to proceed\");\n      setIsSetLoading(false);\n      return false;\n    }\n    if (stripeToken && stripeToken !== \"Error\") {\n      data.stripeToken = stripeToken;\n    }\n    if (!acceptTerms) {\n      setErrorMsg(\"Please accept terms and conditions\");\n      setIsSetLoading(false);\n      return false;\n    }\n    if (stripeToken === \"Error\") {\n      setIsSetLoading(false);\n      return false;\n    }\n    try {\n      setIsSetLoading(true);\n\n      let encodedToken = \"\";\n      if (ios_token) {\n        const randomToken = Math.random().toString(36).substring(2, 8);\n        data.ios_payment_token = randomToken;\n        encodedToken = btoa(randomToken);\n        setIosPaymentToken(encodedToken);\n      }\n\n      let userData;\n      let showMessage = false;\n      if ((!token && email) || countryError !== \"\") {\n        userData = await registerMutation(data);\n      } else {\n        userData = await signupMutation(data);\n        showMessage = true;\n      }\n      if (\"error\" in userData) {\n        if (typeof userData.error === \"string\") {\n          setErrorMsg(userData.error);\n          // console.error(\"Error register in:\", userData.error);\n        } else {\n          const fetchError = userData.error as FetchBaseQueryError; // Type assertion\n          if (\n            fetchError.data &&\n            typeof fetchError.data === \"object\" &&\n            \"error\" in fetchError.data &&\n            typeof fetchError.data.error === \"string\"\n          ) {\n            setErrorMsg(fetchError.data.error);\n            // console.error(\"Error in:\", fetchError.data.error);\n          } else {\n            setErrorMsg(\"An error occurred\"); // Handle cases where error property doesn't exist\n          }\n        }\n      } else {\n\n        if (showMessage) {\n          const newLocalData = userData.data.data;\n          if (localData != null) {\n            localData.Member_type = newLocalData.Member_type;\n            localData.currency = currency;\n            setUserData(localData);\n          } else setUserData(newLocalData);\n          if (ios_token) {\n            Swal.fire({\n              title: \"Payment Done!\",\n              text: \"You have upgraded successfully.\",\n              icon: \"success\",\n              showCancelButton: false,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"OK\",\n              cancelButtonText: \"Cancel\",\n              backdrop: `\n                      rgba(255, 255, 255, 0.5)\n                      left top\n                      no-repeat\n                      filter: blur(5px);\n                    `,\n              background: \"#fff\",\n            }).then(async (result) => {\n              if (result.isConfirmed) {\n                //const appLink = `reach://192.168.1.129:3000/${encodedToken}`;\n                //const fallbackLink = \"https://192.168.1.129:3000\";\n\n                window.location.href = appLink + encodedToken;\n\n                setTimeout(() => {\n                  window.location.href = fallbackUrl || \"\";\n                }, 2000); // Adjust timeout for user experience\n              }\n            });\n          } else {\n            Swal.fire({\n              title: \"Payment Done!\",\n              text: \"You have registered successfully.\",\n              icon: \"success\",\n              timer: 3000,\n              showConfirmButton: false,\n              backdrop: `\n            rgba(255, 255, 255, 0.5)\n            left top\n            no-repeat\n            filter: blur(5px);\n          `,\n              background: \"#fff\",\n            });\n          }\n          navigate(\"/\");\n\n        } else {\n          navigate('/emailVerificationSend', {\n            state: {\n              email: data.members_email,\n              name: data.members_fname,\n            },\n          }\n          );\n        }\n\n        //navigate(\"/\");\n      }\n    } catch (error) {\n      setErrorMsg(\"An error occurred during submission\");\n    } finally {\n      setIsSetLoading(false);\n    }\n  };\n  const password = watch(\"members_password\");\n  const validatePasswordMatch = (value: string) => {\n    return value === password || \"Passwords do not match\";\n  };\n\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [showConfirmPassword, setShowConfirmPassword] =\n    useState<boolean>(false);\n  const passwordPattern = /^(?=.*\\d)[A-Za-z\\d\\W]{8,}$/;\n\n  const options = [\n    { value: \"Annual\", label: \"Annual Subscription\" },\n    { value: \"Monthly\", label: \"Monthly Subscription\" },\n  ];\n\n  const [saveButton, setSaveButton] = useState<string>(\"Pay Securely Now\");\n  const [validate, setValidate] = useState<boolean>(false);\n\n  const stripeTokenHandler = async (Token: any) => {\n    if (Token === \"Error\") {\n      setIsSetLoading(false);\n      setStripeError(true);\n      if (token) {\n        handleSubmit(onSubmit)();\n      }\n    } else {\n      if (Token) {\n        setStripeToken(Token);\n        setStripeError(false);\n        setIsSetLoading(false);\n        handleSubmit(onSubmit)();\n      } else {\n        setIsSetLoading(false);\n        setStripeError(true);\n\n      }\n      handleSubmit(onSubmit)();\n    }\n    if (!token && Token === \"Error\") {\n      // setIsSetLoading(false);\n      handleSubmit(onSubmit)();\n    }\n  };\n  useEffect(() => {\n    if (profileReferral && currency) {\n      checkReferral();\n      if (token) {\n        setDisableReferral(true);\n      }\n    }\n  }, [profileReferral, currency]);\n  const [referral_msg, setReferralMsg] = useState<string>(\"\");\n  const [successClass, setSuccessClass] = useState<string>(\"\");\n  const [offerPrice, setOfferPrice] = useState<MembershipFees | null>(null);\n\n  const checkReferral = async (\n    event?: React.FocusEvent<HTMLInputElement, Element>\n  ) => {\n    const enteredValue = event ? event.target.value : profileReferral;\n\n    if (enteredValue) {\n      try {\n        const formData = {\n          referral_code: enteredValue,\n          currency: currency,\n        };\n        const response = await validateReferral(formData).unwrap();\n        if (response.success) {\n          const responseOther = await referralDiscount(formData).unwrap();\n          if (responseOther.success) {\n            setSuccessClass(\"success\");\n            setReferralMsg(\n              `${responseOther.data?.referal_percentage\n                ? parseInt(responseOther.data?.referal_percentage)\n                : \"\"\n              } % referral discount applied successfully.`\n            );\n            setRefferal(enteredValue);\n            setOfferPrice(responseOther.data);\n            setFunction(responseOther.data);\n          }\n        } else {\n          setReferralMsg(response.data.message);\n        }\n      } catch (error) {\n        if (error && typeof error === \"object\" && \"data\" in error) {\n          const typedError = error as { data: any }; // Casting 'error' to the expected shape\n          setReferralMsg(typedError.data.message);\n          setSuccessClass(\"error\");\n          setOfferPrice(null);\n          setFunction(null);\n        }\n      }\n    } else {\n      setSuccessClass(\"\");\n      setReferralMsg(\"\");\n      setOfferPrice(null);\n      setFunction(null);\n    }\n  };\n\n  const [checkEmail] = useEmailExistMutation();\n  const [errorMsg, setErrorMessage] = useState(\"\");\n  const checkEmailExist = async (\n    event: React.FocusEvent<HTMLInputElement, Element>\n  ) => {\n    const enteredValue = event.target.value;\n    if (enteredValue && !token) {\n      try {\n        let profileData = {\n          members_email: enteredValue,\n        };\n        const responseData = await checkEmail(profileData);\n        if (\"data\" in responseData) {\n          if (responseData.data.success) {\n            setErrorMessage(\"\");\n          } else {\n            setErrorMessage(responseData?.data?.message);\n          }\n        }\n      } catch (error) {\n        console.log(error, \"ERROR RESPONSE\");\n      }\n    } else {\n      setErrorMessage(\"\");\n    }\n  };\n  const [countryError, setCountryError] = useState<string>('');\n  const handleCountryChange = async (country: { name: string; iso: string }) => {\n    if (country.name === 'United States') {\n      setStripeToken('');\n      setCountryError('Currently the full membership option is not available for American residents');\n      Swal.fire({\n        title: \"\",\n        text: \"Currently the full membership option is not available for American residents\",\n        icon: \"warning\",\n        showConfirmButton: true,\n        backdrop: `\n        rgba(255, 255, 255, 0.5)\n        left top\n        no-repeat\n        filter: blur(5px);\n      `,\n        background: \"#fff\",\n      });\n    } else {\n      setCountryError(\"\");\n    }\n    if (country.iso) {\n      setCountryCode(country.iso);\n    }\n  }\n  const handleChange = async (select: string) => {\n    if (select == 'Monthly') {\n      if (paymentFee?.fee) {\n        setAmount(parseFloat(paymentFee?.fee));\n      }\n    } else {\n      if (paymentFee?.yearly) {\n        setAmount(parseFloat(paymentFee?.yearly));\n      }\n    }\n\n  }\n  useEffect(() => {\n    if (stripeToken) {\n      handleSubmit(onSubmit)(); // Call handleSubmit only when stripeToken is set\n    }\n  }, [stripeToken]);\n  const [amount, setAmount] = useState<number>(yearlyFee);\n  const [currencysymb, setCurrencysymb] = useState<string>(currencySymbols[paymentFee?.currency || 'GBP']);\n  const [countryCode, setCountryCode] = useState<string>('GB');\n  useEffect(() => {\n    if (paymentFee?.yearly) {\n      setAmount(parseFloat(paymentFee?.yearly));\n    }\n    if (paymentFee?.currency) {\n      setCurrencysymb(currencySymbols[paymentFee?.currency]);\n    }\n  }, [paymentFee]);\n\n  const handleAccept = async () => {\n    setAcceptTerms(!acceptTerms)\n  }\n\n  return (\n    <div className=\"content-box-details\">\n      <Heading tag=\"h4\">Your details</Heading>\n      {isSetLoading ? (\n        <div className=\"page-loader\">\n          <div className=\"page-innerLoader\">\n            <div className=\"spinner-border\" role=\"status\">\n              <img\n                src={require(\"../../assets/images/cruz/Frame.png\")}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <FormProvider {...form}>\n        <form\n          className=\"login-field\"\n          id=\"register-form\"\n          method=\"post\"\n          onSubmit={handleSubmit(onSubmit)}\n          noValidate\n        >\n          {googleAccessToken ? (\n            <CustomInput\n              name=\"google_token\"\n              placeholder=\"Google Token\"\n              type=\"hidden\"\n              registerConfig={{\n                required: { value: false, message: \"Email is required\" },\n              }}\n              className=\"input-block\"\n            />\n          ) : (\n            \"\"\n          )}\n          <div\n            className={`member-emails ${errorMsg !== \"\" ? \"error-active\" : \"\"}`}\n          >\n            <CustomInput\n              name=\"members_email\"\n              placeholder=\"Email Address\"\n              type=\"email\"\n              disable={disable}\n              registerConfig={{\n                required: { value: true, message: \"Email is required\" },\n              }}\n              className=\"input-block\"\n              onBlur={(event) => checkEmailExist(event)}\n            />\n            {errorMsg !== \"\" && <div className=\"error\">{errorMsg}</div>}\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <CustomInput\n                name=\"members_name_title\"\n                placeholder=\"Title\"\n                type=\"text\"\n                registerConfig={{\n                  required: {\n                    value: true,\n                    message: \"Title is required\",\n                  },\n                }}\n                className=\"input-block\"\n              />\n            </div>\n            <div className=\"col-md-5\">\n              <CustomInput\n                name=\"members_fname\"\n                placeholder=\"First Name\"\n                type=\"text\"\n                registerConfig={{\n                  required: {\n                    value: true,\n                    message: \"First Name is required\",\n                  },\n                }}\n                className=\"input-block\"\n              />\n            </div>\n            <div className=\"col-md-5\">\n              <CustomInput\n                name=\"members_lname\"\n                placeholder=\"Surname\"\n                type=\"text\"\n                registerConfig={{\n                  required: {\n                    value: true,\n                    message: \"Last Name is required\",\n                  },\n                }}\n                className=\"input-block\"\n              />\n            </div>\n          </div>\n          <TelephoneField\n            name=\"members_phone\"\n            registerConfig={{\n              required: {\n                value: validate,\n                message: \"Phone number is required\",\n              },\n            }}\n            initialValue={\n              profileData.members_phone_code\n                ? profileData.members_phone_code\n                : \"225\"\n            }\n          />\n\n          <CustomInput\n            name=\"members_address\"\n            placeholder=\"Address\"\n            type=\"text\"\n            registerConfig={{\n              required: {\n                value: validate,\n                message: \"Address is required\",\n              },\n            }}\n            className=\"input-block\"\n          />\n          <CustomInput\n            name=\"members_town\"\n            placeholder=\"Town\"\n            type=\"text\"\n            registerConfig={{\n              required: { value: validate, message: \"Town is required\" },\n            }}\n            className=\"input-block\"\n          />\n\n          <CustomInput\n            name=\"members_region\"\n            placeholder=\"Region / County\"\n            type=\"text\"\n            registerConfig={{\n              required: {\n                value: validate,\n                message: \"Region is required\",\n              },\n            }}\n            className=\"input-block\"\n          />\n          <CustomInput\n            name=\"members_postcode\"\n            placeholder=\"Postcode\"\n            type=\"text\"\n            registerConfig={{\n              required: {\n                value: validate,\n                message: \"Postcode is required\",\n              },\n              minLength: {\n                value: 5, // Minimum length for postcode\n                message: \"Postcode must be at least 5 characters long\",\n              },\n              maxLength: {\n                value: 10, // Maximum length for postcode\n                message: \"Postcode cannot be more than 10 characters long\",\n              },\n            }}\n            className=\"input-block\"\n          />\n          <div\n            className={`CountryPicker ${countryError !== \"\" ? \"error-Occured\" : \"CountryPicker-section\"\n              }`}\n          >\n            <CountryPicker\n              name=\"members_country\"\n              registerConfig={{\n                required: {\n                  value: validate,\n                  message: \"Country is required\",\n                },\n              }}\n              handleChange={handleCountryChange}\n            />\n            {countryError !== \"\" && (\n              <div className=\"error CountryPicker-error\">{countryError}</div>\n            )}\n          </div>\n          {!token ? (\n            <div>\n              <div\n                className={`password-area ${isFocused ? \"focused\" : \"\"}`}\n                onFocus={() => setIsFocused(true)}\n                onBlur={() => setIsFocused(false)}\n              >\n                <CustomInput\n                  name=\"members_password\"\n                  placeholder=\"Password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  registerConfig={{\n                    required: {\n                      value: true,\n                      message: \"Password is required\",\n                    },\n                    pattern: {\n                      value: passwordPattern,\n                      message:\n                        \"Password must be at least 8 characters long and should include one number.\",\n                    },\n                  }}\n                  className=\"input-block\"\n                />\n                <div\n                  className=\"icon\"\n                  onClick={() => setShowPassword((preValue) => !preValue)}\n                >\n                  <FontAwesomeIcon icon={showPassword ? faEye : faEyeSlash} />\n                </div>\n              </div>\n              <div\n                className={`password-area ${isFocus ? \"ConfirmPasswordfocused\" : \"\"\n                  }`}\n                onFocus={() => setIsCpasswordFocused(true)}\n                onBlur={() => setIsCpasswordFocused(false)}\n              >\n                <CustomInput\n                  name=\"members_password_confirmation\"\n                  placeholder=\"Confirm Password\"\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  registerConfig={{\n                    required: {\n                      value: true,\n                      message: \"Confirm Password is required\",\n                    },\n                    validate: validatePasswordMatch,\n                  }}\n                  className=\"input-block\"\n                />\n                <div\n                  className=\"icon\"\n                  onClick={() =>\n                    setShowConfirmPassword((preValue) => !preValue)\n                  }\n                >\n                  <FontAwesomeIcon\n                    icon={showConfirmPassword ? faEye : faEyeSlash}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className=\"row\">\n            <CustomInput\n              name=\"referral_code\"\n              placeholder=\"Do you have a Referral Code\"\n              type=\"text\"\n              disable={disableReferral}\n              registerConfig={{\n                required: { value: false, message: \"\" },\n              }}\n              className=\"input-block\"\n              onBlur={(event) => checkReferral(event)}\n            />\n            {referral_msg !== \"\" && (\n              <div className={successClass}>{referral_msg}</div>\n            )}\n          </div>\n          {currency ? (\n            <CustomInput\n              name=\"currency\"\n              type=\"hidden\"\n              registerConfig={{\n                required: { value: false, message: \"Email is required\" },\n              }}\n              className=\"input-block\"\n            />\n          ) : (\n            \"\"\n          )}\n\n          {email || (countryError !== \"\" && memberType !== \"F\") ? (\n            <div>\n              <div className=\"sub-box\">\n                <div className=\"col keep-logged\">\n                  <input type=\"checkbox\" id=\"keeplogged\" onChange={handleAccept} />\n                  <label htmlFor=\"keeplogged\">\n                    Accept our{\" \"}\n                    <a\n                      href=\"https://reach.boats/legal\"\n                      className=\"text-pink\"\n                      target=\"_blank\"\n                    >\n                      Terms and conditions\n                    </a>\n                  </label>\n                </div>\n              </div>\n              <div className=\"error\">{errorMessage}</div>\n              <Button\n                disabled={isLoading}\n                onClick={() => {\n                  !acceptTerms\n                    ? setErrorMsg(\"Please accept terms and conditions\")\n                    : setErrorMsg(\"\");\n                  isValid && setIsSetLoading(true);\n                }}\n                text={isLoading ? \"Please wait...\" : saveButton}\n                icon={true}\n                theme=\"light\"\n                className=\"w-100\"\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </form>\n\n        {!email && countryError === \"\" ? (\n          <div className=\"mt-3\">\n            <div className=\"col-md-12 col-12 AnnualSubscription\">\n              <CustomSelect\n                name=\"subscription_plan\"\n                placeholder=\"Subscription Plan\"\n                options={options}\n                registerConfig={{\n                  required: {\n                    value: true,\n                    message: \"Subscription plan is required\",\n                  },\n                }}\n                handleChange={handleChange}\n              />\n            </div>\n            <PaymentCard stripeTokenHandler={stripeTokenHandler} currency={currencysymb} amount={amount} country={countryCode} isValid={isValid} />\n            <div className=\"sub-box\">\n\n              <div className=\"col keep-logged\">\n\n                <input\n                  type=\"checkbox\"\n                  id=\"keeploggednew\"\n                  onChange={handleAccept}\n                />\n                <label htmlFor=\"keeploggednew\">\n                  Accept our{\" \"}\n                  <a\n                    href=\"https://reach.boats/legal\"\n                    className=\"text-pink\"\n                    target=\"_blank\"\n                  >\n                    Terms and conditions\n                  </a>\n                </label>\n              </div>\n            </div>\n            <div className=\"error\">{errorMessage}</div>\n            <Button\n              disabled={isLoading}\n              onClick={() => {\n                !acceptTerms\n                  ? setErrorMsg(\"Please accept terms and conditions\")\n                  : setErrorMsg(\"\");\n                isValid && setIsSetLoading(true);\n                stripeTokenHandler(stripeToken);\n              }}\n              text={isLoading ? \"Please wait...\" : saveButton}\n              icon={true}\n              form=\"checkout-form\"\n              theme=\"light\"\n              className=\"w-100\"\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </FormProvider>\n    </div>\n  );\n};\n\nexport default MemberSignForm;\n","import React, { useEffect, useState } from \"react\";\nimport { Hero } from \"../../components/Hero/Hero\";\nimport { Heading } from \"../../components/Heading/Heading\";\nimport \"./Membersignup.scss\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { SignupInterface, initialSignupInterface } from \"../../types\";\nimport {\n  useIosloginMutation,\n  useMemberSignupMutation,\n  useMemberUpdateMutation,\n} from \"../Login/authApiSlice\";\nimport { getUserData, setUserData } from \"../../utils/Utils\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useProfileMutation } from \"../Profile/profileApiSlice\";\nimport { ProfileData, initialProfileData } from \"../../types/ProfileData\";\nimport { FullWindowImageBox } from \"../../components/FullWindowImageBox/FullWindowImageBox\";\nimport { FetchBaseQueryError } from \"@reduxjs/toolkit/query/react\";\nimport MemberShipCard from \"./MemberShipCard\";\nimport MemberSignForm from \"./MemberSignForm\";\nimport { useMembershipFeeQuery } from \"../Login/authApiSlice\";\nimport { CmsHeader } from \"../../components/CmsHeader/CmsHeader\";\ninterface LocalData {\n  members_profile_picture: string;\n  Member_fullname: string;\n  Member_type: string;\n  Token: string;\n  Member_id: string;\n  IsEmployer: string;\n  IsEmployee: string;\n  is_specialist: string;\n}\ninterface MembershipFees {\n  full_membership_fee: string;\n  monthly_membership_fee: string;\n  referal_percentage: string;\n}\ninterface paymentFee {\n  currency: string\n  fee: string;\n  yearly: string;\n}\ntype Currency = \"USD\" | \"GBP\" | \"EUR\";\nfunction MemberSignup() {\n  const navigate = useNavigate();\n  const [memberShipFee, setMemberShipFee] = useState(0);\n  const [yearlyFee, setYearlyFee] = useState(0);\n  const getMemberShipFee = useMembershipFeeQuery({});\n  useEffect(() => {\n    if (getMemberShipFee?.data?.data.full_membership_fee) {\n      setMemberShipFee(getMemberShipFee?.data?.data.monthly_membership_fee);\n      setYearlyFee(getMemberShipFee?.data?.data.full_membership_fee);\n    }\n  }, [getMemberShipFee?.data?.data]);\n\n  const { ios_token } = useParams<{ ios_token: string }>();\n\n\n  const localData: LocalData | null = getUserData(\"userData\");\n\n  const location = useLocation();\n  const { email, memberName, googleToken, phoneNumber, referral_code, selectedCurrency } = location.state || {};\n  const [referralCode, setReferralCode] = useState<string>('');\n  const [offerPrice, setOfferPrice] = useState<MembershipFees | null>(null);\n  const effectiveReferralCode = referral_code || referralCode;\n  const [currency, setCurrency] = useState<Currency>(selectedCurrency || 'GBP');\n  let token = \"\";\n  let memberType = \"\";\n  if (localData != null) {\n    token = localData.Token;\n    memberType = localData.Member_type;\n  }\n\n  useEffect(() => {\n    if (memberType === \"M\") navigate(\"/\");\n\n  }, []);\n  // \n  const fullFeatures = [\n    'Full access to the entire site and content',\n    'Discounts with Selected Partners',\n    'Book calls with boating experts',\n    'Browse and accept jobs on CRUZ',\n  ];\n  const freeFeatures = [\n    'Free for Life',\n    'Access to Weather Reporting',\n    'Access to Club House (Chat)',\n    'Monthly Email Newsletter',\n    'Access to selected online events',\n    'Post Job Opportunities within CRUZ',\n  ];\n\n  const setFunction = (code: MembershipFees | null) => {\n    setOfferPrice(code);\n  }\n  const setReferral = (code: string) => {\n    setReferralCode(code);\n  }\n  const setCardCurrency = (currency: \"USD\" | \"GBP\" | \"EUR\") => {\n    setCurrency(currency);\n  }\n  const [paymentFee, setPaymentFee] = useState<paymentFee>();\n  const setFees = (code: paymentFee) => {\n    setPaymentFee(code);\n  }\n  return (\n    <div className=\"MemberSignup\">\n      <CmsHeader links={[]}></CmsHeader>\n      <div className=\"signup-box\">\n        <div className=\"signup-box-inner\">\n          <div className=\"box-innercontents\">\n            <div className=\"row \">\n              <div className=\"col-md-6 col-12\">\n                <div className=\"fullMembership-card\">\n                  {email ? (\n                    <MemberShipCard referral_code={effectiveReferralCode} heading={\"Free Membership\"} type={\"Free\"} showButton={false} />\n                  ) : (\n                    <MemberShipCard referral_code={effectiveReferralCode} currency={currency} setCardCurrency={setCardCurrency} offerPrice={offerPrice} heading={\" Full Membership\"} plusNote={\"As free plus\"} membershipFee={memberShipFee} yearlyFee={yearlyFee} type={\"Full\"} showButton={false} setPaymentFee={setFees} />\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-6 col-12 content-box\">\n                <MemberSignForm setFunction={setFunction} ios_token={ios_token} setRefferal={setReferral} currency={currency} paymentFee={paymentFee} monthlyFee={memberShipFee} yearlyFee={yearlyFee} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"membership-heighlights d-none\">\n        <h2 className=\"customHeading\">MEMBERSHIP HIGHLIGHTS</h2>\n        <div className=\"box-card\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-12\">\n              <FullWindowImageBox\n                isVideo={false}\n                className=\"odd\"\n                source={require(\"../../assets/images/membersignup/card-1.png\")}\n              >\n                <Heading tag=\"h2\">CHANDLERY</Heading>\n                <p className=\"text-para\">\n                  Lorem ipsum dolor sit amet consectetur. Nunc lectus turpis\n                  tempor vitae gravida. Rhoncus nisi nulla morbi.\n                </p>\n              </FullWindowImageBox>\n            </div>\n            <div className=\"col-md-6 col-12\">\n              <FullWindowImageBox\n                isVideo={false}\n                className=\"even\"\n                source={require(\"../../assets/images/membersignup/card-2.png\")}\n              >\n                <Heading tag=\"h2\">SPEAK TO EXPERTS</Heading>\n                <p className=\"text-para\">\n                  Lorem ipsum dolor sit amet consectetur. Nunc lectus turpis\n                  tempor vitae gravida. Rhoncus nisi nulla morbi.\n                </p>\n              </FullWindowImageBox>\n            </div>\n            <div className=\"col-md-6 col-12\">\n              <FullWindowImageBox\n                isVideo={false}\n                className=\"odd\"\n                source={require(\"../../assets/images/membersignup/card-3.png\")}\n              >\n                <Heading tag=\"h2\">CRUZ</Heading>\n                <p className=\"text-para\">\n                  Lorem ipsum dolor sit amet consectetur. Nunc lectus turpis\n                  tempor vitae gravida. Rhoncus nisi nulla morbi.\n                </p>\n              </FullWindowImageBox>\n            </div>\n            <div className=\"col-md-6 col-12\">\n              <FullWindowImageBox\n                isVideo={false}\n                className=\"even\"\n                source={require(\"../../assets/images/membersignup/card-4.png\")}\n              >\n                <Heading tag=\"h2\">club house</Heading>\n                <p className=\"text-para\">\n                  Lorem ipsum dolor sit amet consectetur. Nunc lectus turpis\n                  tempor vitae gravida. Rhoncus nisi nulla morbi.\n                </p>\n              </FullWindowImageBox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MemberSignup;\n","export interface DobValues {\n  dobDay: string;\n  dobMonth: string;\n  dobYear: string;\n}\nexport interface StatusValues {\n  members_name: string;\n  members_email: string;\n  members_phone: string;\n  members_dob: string;\n  members_address: string;\n  members_country: string;\n  members_region: string;\n  members_biography: string;\n  members_about_me: string;\n  members_interest: string;\n}\nexport interface ProfileData {\n  members_name_title: string;\n  members_fname: string;\n  members_lname: string;\n  members_email: string;\n  members_status: string;\n  members_payment_status: string;\n  members_dob: string;\n  members_dob_data: DobValues;\n  members_phone_code: string;\n  members_phone: string;\n  members_address: string;\n  members_country: string;\n  members_region: string;\n  members_employment: string;\n  members_employment_history: string;\n  members_biography: string;\n  members_interest: string;\n  members_about_me: string;\n  members_type: string;\n  dobYear: string;\n  dobMonth: string;\n  dobDay: string;\n  members_profile_picture: string;\n  phone_code: string;\n  members_town: string;\n  members_street: string;\n  members_postcode: string;\n  members_dial_code: string;\n  displayStatus: StatusValues;\n  google_token?: string;\n  referral_code?: string;\n  members_subscription_end_date?: string;\n  members_subscription_plan?: string;\n  discount_amount?: string;\n}\nexport const initialProfileData: ProfileData = {\n  members_name_title: \"\",\n  members_fname: \"\",\n  members_lname: \"\",\n  members_email: \"\",\n  members_status: \"\",\n  members_payment_status: \"\",\n  members_dob: \"\",\n  members_dob_data: {\n    dobDay: \"\",\n    dobMonth: \"\",\n    dobYear: \"\",\n  },\n  members_phone_code: \"\",\n  members_phone: \"\",\n  members_address: \"\",\n  members_country: \"\",\n  members_region: \"\",\n  members_employment: \"\",\n  members_employment_history: \"\",\n  members_biography: \"\",\n  members_interest: \"\",\n  members_about_me: \"\",\n  members_type: \"\",\n  dobYear: \"\",\n  dobMonth: \"\",\n  dobDay: \"\",\n  members_profile_picture: \"\",\n  phone_code: \"\",\n  members_town: \"\",\n  members_street: \"\",\n  members_postcode: \"\",\n  members_dial_code: \"\",\n  displayStatus: {\n    members_name: \"\",\n    members_email: \"\",\n    members_phone: \"\",\n    members_dob: \"\",\n    members_address: \"\",\n    members_country: \"\",\n    members_region: \"\",\n    members_biography: \"\",\n    members_about_me: \"\",\n    members_interest: \"\",\n  },\n};\n"],"names":["_ref","_errors$name","name","options","registerConfig","placeholder","handleChange","register","useFormContext","errors","useFormState","error","message","selectName","setSelectName","useState","useEffect","_jsxs","className","concat","children","defaultValue","onChange","event","selectedValue","target","value","_jsx","disabled","map","option","label","FullWindowImageBox","props","isVideo","source","_Fragment","playsInline","muted","autoPlay","loop","src","type","alt","MemberShipCard","referral_code","heading","plusNote","membershipFee","yearlyFee","showButton","offerPrice","currency","setPaymentFee","setCardCurrency","navigate","useNavigate","referralDiscount","useReferralDiscountMutation","data","isLoading","isSuccess","useMembershipFeeQuery","currencySelected","setCurrency","fees","setFees","fee","yearly","currencySymbols","USD","EUR","GBP","updatedOfferPrice","setUpdatedOfferPrice","feeArr","full_membership_fee_dollar","monthly","monthly_membership_fee_dollar","full_membership_fee","monthly_membership_fee","full_membership_fee_euro","monthly_membership_fee_euro","defaultFees","async","formData","responseOther","unwrap","success","fetchReferralDiscount","handleCurrencyChange","selectedCurrency","e","freeFeatures","setFreeFeatures","fullFeatures","setFullFeatures","freeheading","setFreeHeading","fullheading","setFullHeading","joinReachDetails","joinReachLoading","joinReachSuccess","useJoinReachQuery","_featureData$","_featureData$2","_featureData$3","_featureData$4","featureData","membership_description","membership_title","console","warn","hasCookies","setHasCookies","cookieValue","cookie","document","split","find","row","startsWith","getCookie","dangerouslySetInnerHTML","__html","Button","onClick","handleClick","state","text","icon","theme","require","stripePromise","loadStripe","process","stripeTokenHandler","amount","country","isValid","isTokenGenerated","setIsTokenGenerated","Elements","stripe","CheckoutForm","onTokenGenerated","handleTokenGenerated","setFunction","setRefferal","ios_token","paymentFee","monthlyFee","signupMutation","useMemberSignupMutation","updateMutation","useMemberUpdateMutation","registerMutation","registerLoading","useRegisterMutation","profileMutation","useProfileMutation","validateReferral","useValidateReferralCodeMutation","location","useLocation","profileData","setProfileData","initialProfileData","form","useForm","stripeToken","setStripeToken","stripeError","setStripeError","isFocused","setIsFocused","isFocus","setIsCpasswordFocused","disable","setDisable","acceptTerms","setAcceptTerms","iosLoginCalled","setIosLoginCalled","userToken","setUserToken","ios_login","useIosloginMutation","token","memberType","response","setUserData","userData","reset","updateData","email","memberName","googleToken","phoneNumber","googleAccessToken","firstName","lastName","control","handleSubmit","formState","watch","errorMessage","setErrorMsg","isSetLoading","setIsSetLoading","localData","getUserData","profileReferral","setProfileReferral","disableReferral","setDisableReferral","iosPaymentToken","setIosPaymentToken","Token","Member_type","setValidate","fetchData","setSaveButton","details","google_token","members_email","members_fname","members_lname","handleCountryChange","members_country","onSubmit","members_phone_code","phone_code","encodedToken","randomToken","Math","random","toString","substring","ios_payment_token","btoa","showMessage","countryError","fetchError","newLocalData","Swal","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","backdrop","background","then","result","isConfirmed","window","href","setTimeout","timer","showConfirmButton","password","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","saveButton","validate","checkReferral","referral_msg","setReferralMsg","successClass","setSuccessClass","setOfferPrice","enteredValue","_responseOther$data","_responseOther$data2","referal_percentage","parseInt","checkEmail","useEmailExistMutation","errorMsg","setErrorMessage","setCountryError","iso","setCountryCode","setAmount","currencysymb","setCurrencysymb","countryCode","parseFloat","handleAccept","Heading","tag","role","FormProvider","id","method","noValidate","CustomInput","required","onBlur","responseData","_responseData$data","log","checkEmailExist","TelephoneField","initialValue","minLength","maxLength","CountryPicker","onFocus","pattern","preValue","FontAwesomeIcon","faEye","faEyeSlash","htmlFor","CustomSelect","select","PaymentCard","_getMemberShipFee$dat4","memberShipFee","setMemberShipFee","setYearlyFee","getMemberShipFee","_getMemberShipFee$dat","_getMemberShipFee$dat2","_getMemberShipFee$dat3","useParams","referralCode","setReferralCode","effectiveReferralCode","CmsHeader","links","code","MemberSignForm","members_name_title","members_status","members_payment_status","members_dob","members_dob_data","dobDay","dobMonth","dobYear","members_phone","members_address","members_region","members_employment","members_employment_history","members_biography","members_interest","members_about_me","members_type","members_profile_picture","members_town","members_street","members_postcode","members_dial_code","displayStatus","members_name"],"sourceRoot":""}